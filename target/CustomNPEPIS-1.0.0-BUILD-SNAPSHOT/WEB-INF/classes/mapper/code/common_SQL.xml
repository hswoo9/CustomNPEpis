<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="common">

	<select id="common.getCode" parameterType="map" resultType="map">
		SELECT
		*
		FROM cust_epis.common_code
		WHERE group_code = #{code}
		AND
		active = 'Y'
		 <![CDATA[
		 and code_kr <>''
    	]]>
		ORDER BY 1, 2
	</select>

	<select id="common.getGroupCd" parameterType="map" resultType="map">
		SELECT
		common_code_id
		,group_code
		,group_code_kr
		,group_code_desc
		FROM
		cust_epis.common_code
		WHERE active = 'Y'
		<if test="group_code != null and group_code != ''">
			AND group_code = #{group_code}
		</if>
		GROUP BY group_code
	</select>

	<select id="common.getCodeOne" parameterType="map" resultType="map">
		SELECT
		*
		FROM cust_epis.common_code
		WHERE group_code = #{groupCode}
		AND `code` = #{code}
		AND active = 'Y'
		ORDER BY 1, 2
	</select>

	<select id="common.getDept" parameterType="String" resultType="map">
		select
		cust.get_dp_name(#{empSeq}, 'DEPT') as dept,
		cust.get_dp_name(#{empSeq}, 'POSITION') as position,
		cust.get_dp_name(#{empSeq}, 'DUTY') as duty
	</select>

	<select id="common.getEmpName" parameterType="String"
		resultType="map">
		select emp_name
		from neos.t_co_emp_multi
		where use_yn = 'Y'
		and emp_seq = #{empSeq}
		and lang_code = 'kr'
	</select>


	<select id="common.getCommNm" parameterType="String" resultType="map">
		select group_code_kr, code_kr
		from cust_epis.common_code
		where active = 'Y'
		and common_code_id = #{code_id}

	</select>

	<select id="common.empInformation" parameterType="map"
		resultType="map">
		SELECT
		t.*,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'POSITION'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.position_code) AS position,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'DUTY'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.duty_code) AS duty
		FROM
		(SELECT
		tce.emp_seq,
		tce.login_id,
		tcem.emp_name,
		tcec.comp_seq,
		tcec.group_seq,
		tced.position_code,
		tced.duty_code,
		tcdm.dept_name,
		tcdm.path_name,
		tced.dept_seq,
		CONCAT(tcem.addr,' ',tcem.detail_addr) AS addr,
		tce.erp_emp_num,
		DATE_FORMAT(tce.join_day, '%Y-%m-%d') AS join_day,
		DATE_FORMAT(tce.bday, '%Y-%m-%d') AS bday,
		tce.email_addr,
		tce.out_mail,
		tce.out_domain,
		tce.pic_file_id,
		tcem.main_work,
		tce.gender_code,
		tce.mobile_tel_num AS phone,
		tce.home_tel_num,
		tced.tel_num,
		tced.fax_num,
		tcc.homepg_addr 
		FROM
		neos.t_co_emp tce
		INNER JOIN neos.t_co_emp_multi tcem ON tce.emp_seq = tcem.emp_seq
		AND tce.use_yn = 'Y'
		AND tcem.use_yn = 'Y'
		AND tcem.lang_code = 'kr'
		INNER JOIN neos.t_co_emp_comp tcec ON tce.emp_seq = tcec.emp_seq
		AND tcec.use_yn = 'Y' AND tcec.comp_seq = '1000'
		INNER JOIN neos.t_co_emp_dept tced ON tce.emp_seq = tced.emp_seq
		AND tced.use_yn = 'Y'
		INNER JOIN neos.t_co_dept_multi tcdm ON tced.dept_seq = tcdm.dept_seq
		INNER JOIN neos.t_co_comp tcc ON tcec.comp_seq = tcc.comp_seq
		WHERE tced.main_dept_yn = 'Y'
		) t

		<!-- <choose> <when test="deptSeq != null and deptSeq != ''"> where t.dept_seq 
			= #{deptSeq} </when> <otherwise> </otherwise> </choose> -->

		<where>
			<if test="empSeq != null and empSeq != ''">
				AND t.emp_seq not in (${empSeq})
			</if>

			<if test="deptSeq != null and deptSeq != ''">
				AND t.dept_seq = #{deptSeq}
			</if>



			<if test="emp_name != null and emp_name != ''">
				AND t.emp_name LIKE CONCAT ('%',#{emp_name},'%')
			</if>


			<if test="dept_name != null and dept_name != ''">
				AND t.dept_name LIKE CONCAT ('%',#{dept_name},'%')
			</if>

			<if test="positionKey != null and positionKey != ''">
				AND t.position_code = #{positionKey}
			</if>

			<if test="dutyKey != null and dutyKey != ''">
				AND t.duty_code = #{dutyKey}
			</if>
			<if test="notIn != null and notIn != ''">
				AND t.dept_seq NOT IN ('1320','1323')
			</if>
		</where>
		ORDER BY T.DUTY_CODE, T.POSITION_CODE, T.ERP_EMP_NUM
		
		<if test="pageSize">
			LIMIT ${skip} , ${pageSize}
		</if>		
		
	</select>

	<select id="common.empInformationTotal" parameterType="map"
		resultType="int">
		SELECT COUNT(1) FROM (
		SELECT
		t.*,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'POSITION'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.position_code) AS position,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'DUTY'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.duty_code) AS duty
		FROM
		(SELECT
		tce.emp_seq,
		tcem.emp_name,
		tcec.comp_seq,
		tcec.group_seq,
		tced.position_code,
		tced.duty_code,
		tcdm.dept_name,
		tced.dept_seq,
		CONCAT(tcem.addr,' ',tcem.detail_addr) AS addr,
		tce.erp_emp_num,
		tce.join_day,
		tce.mobile_tel_num AS phone
		FROM
		neos.t_co_emp tce
		INNER JOIN neos.t_co_emp_multi tcem ON tce.emp_seq = tcem.emp_seq
		AND tce.use_yn = 'Y'
		AND tcem.use_yn = 'Y'
		AND tcem.lang_code = 'kr'
		INNER JOIN neos.t_co_emp_comp tcec ON tce.emp_seq = tcec.emp_seq
		AND tcec.use_yn = 'Y' AND tcec.comp_seq = '1000'
		INNER JOIN neos.t_co_emp_dept tced ON tce.emp_seq = tced.emp_seq
		AND tced.use_yn = 'Y'
		INNER JOIN neos.t_co_dept_multi tcdm ON tced.dept_seq = tcdm.dept_seq
		WHERE tced.main_dept_yn = 'Y'
		) t
		<where>
			<if test="empSeq != null and empSeq != ''">
				AND t.emp_seq not in (${empSeq})
			</if>

			<if test="deptSeq != null and deptSeq != ''">
				AND t.dept_seq = #{deptSeq}
			</if>



			<if test="emp_name != null and emp_name != ''">
				AND t.emp_name LIKE CONCAT ('%',#{emp_name},'%')
			</if>


			<if test="dept_name != null and dept_name != ''">
				AND t.dept_name LIKE CONCAT ('%',#{dept_name},'%')
			</if>

			<if test="positionKey != null and positionKey != ''">
				AND t.position_code = #{positionKey}
			</if>

			<if test="dutyKey != null and dutyKey != ''">
				AND t.duty_code = #{dutyKey}
			</if>
			<if test="notIn != null and notIn != ''">
				AND t.dept_seq NOT IN ('1320','1323')
			</if>
		</where>



		) tt
	</select>
	<select id="common.getHoliday" resultType="map">
		select
		group_concat(h_day) as h_day from neos.t_co_holiday where
		substr(h_day, 1,4) = date_format(now(),'%Y')
	</select>

	<select id="common.getAllDept" parameterType="map" resultType="map">
		SELECT
		A.*
		FROM
		NEOS.T_CO_DEPT_MULTI A
		INNER JOIN NEOS.T_CO_DEPT B
        ON A.dept_seq = B.dept_seq
		WHERE
		A.USE_YN = 'Y' AND B.USE_YN='Y' AND (B.TEAM_YN = 'Y' or A.dept_seq in (1202, 1203, 1236))
		AND A.COMP_SEQ = '1000'
	</select>

	<select id="common.getUpDept" parameterType="String" resultType="map">
		SELECT
		tcem.emp_seq,
		tced.dept_seq,
		tcem.emp_name,
		tced.duty_code,
		tced.position_code
		FROM
		neos.t_co_emp_multi tcem
		INNER JOIN
		neos.t_co_emp_dept tced ON tcem.emp_seq = tced.emp_seq
		WHERE
		dept_seq IN (#{deptSeq} , (SELECT
		parent_dept_seq
		FROM
		neos.T_CO_DEPT
		WHERE
		dept_seq = #{deptSeq}))
		AND tced.duty_code IN ('210' , '302')
		GROUP BY tcem.emp_seq

	</select>

	<select id="common.getUserInfo" parameterType="String"
		resultType="map">
		SELECT
		tce.emp_seq,
		tced.dept_seq
		FROM
		neos.t_co_emp tce
		INNER JOIN neos.t_co_emp_dept tced ON tce.emp_seq = tced.emp_seq
		WHERE
		tce.emp_seq = #{targetSeq}
	</select>

	<select id="common.getFileSeq" parameterType="map" resultType="int">
		SELECT
		CASE WHEN
		MAX(file_seq+0) IS NULL THEN 0
		ELSE MAX(file_seq+0)+1
		END AS file_seq
		FROM
		cust_epis.dj_ATTACH_FILE
		WHERE
		target_table_name = #{tableName}
		AND
		target_id = #{targetKey}
	</select>


	<select id="common.selectEmp" parameterType="map" resultType="map">
		SELECT
		t.*,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'POSITION'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.position_code) AS position,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'DUTY'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.duty_code) AS duty
		FROM
		(SELECT
		tce.emp_seq,
		tcem.emp_name,
		tcec.comp_seq,
		tcec.group_seq,
		tced.position_code,
		tced.duty_code,
		tcdm.dept_name,
		tced.dept_seq,
		CONCAT(tcem.addr,' ',tcem.detail_addr) AS addr,
		tce.erp_emp_num,
		tce.join_day,
		tce.mobile_tel_num AS phone
		FROM
		neos.t_co_emp tce
		INNER JOIN neos.t_co_emp_multi tcem ON tce.emp_seq = tcem.emp_seq
		AND tce.use_yn = 'Y'
		AND tcem.use_yn = 'Y'
		AND tcem.lang_code = 'kr'
		INNER JOIN neos.t_co_emp_comp tcec ON tce.emp_seq = tcec.emp_seq
		AND tcec.use_yn = 'Y' AND tcec.comp_seq = '1000'
		INNER JOIN neos.t_co_emp_dept tced ON tce.emp_seq = tced.emp_seq
		AND tced.use_yn = 'Y'
		INNER JOIN neos.t_co_dept_multi tcdm ON tced.dept_seq = tcdm.dept_seq
		WHERE tced.main_dept_yn = 'Y'
		) t
		<choose>
			<when test="empSeq != null and empSeq != ''">
				where t.emp_seq in (${empSeq})
			</when>
			<otherwise>
				where t.emp_seq = ''
			</otherwise>
		</choose>

	</select>

	<select id="common.getDutyPosition" parameterType="String"
		resultType="map">
		SELECT
		dp_seq, dp_name
		FROM
		NEOS.t_co_comp_duty_position_multi
		WHERE
		dp_type = #{subKey}
	</select>

	<select id="common.getDeptList" parameterType="String"
		resultType="map">
		SELECT
		dept_seq, dept_name
		FROM
		NEOS.t_co_dept_multi
	</select>

	<select id="common.getEmpDept" parameterType="String"
		resultType="map">
		SELECT
		*
		FROM
		NEOS.T_CO_EMP_MULTI TCEM
		INNER JOIN
		NEOS.T_CO_EMP_DEPT TCED ON TCEM.EMP_SEQ = TCED.EMP_SEQ
		AND TCEM.LANG_CODE = 'KR'
		WHERE
		DEPT_SEQ = #{deptSeq}
		AND TCEM.USE_YN = 'Y'
		AND TCED.USE_YN = 'Y'
	</select>

	<select id="common.fileList" resultType="Map" parameterType="Map">

		select * from cust_epis.dj_ATTACH_FILE where target_table_name =
		#{tableName} and target_id = #{keyId}


	</select>

	<select id="common.fileDown" parameterType="map" resultType="map">
		select
		attach_file_id,
		target_id,
		real_file_name,
		file_extension,
		file_path,
		file_name
		from
		cust_epis.dj_ATTACH_FILE

		WHERE attach_file_id = #{attach_file_id}

	</select>

	<delete id="common.fileDelete" parameterType="map">
		delete from
		cust_epis.dj_ATTACH_FILE where attach_file_id = #{attach_file_id}
	</delete>

	<select id="common.getRestFund" parameterType="String"
		resultType="Map">
		SELECT
		CASE WHEN SUM(TEP.education_cost) is NULL THEN (SELECT code_kr FROM
		cust_epis.COMMON_CODE WHERE group_code = 'EDU_SUPPORT_FUND' AND
		`code` = 'SF01')
		ELSE ((SELECT code_kr FROM cust_epis.COMMON_CODE WHERE group_code =
		'EDU_SUPPORT_FUND' AND `code` = 'SF01')-SUM(TEP.education_cost)) END
		AS restFund
		FROM
		cust_epis.EDUCATION TE
		INNER JOIN
		cust_epis.EDUCATION_PERSON TEP ON TE.EDUCATION_ID = TEP.EDUCATION_ID
		AND TE.ACTIVE = 'Y'
		AND TEP.ACTIVE = 'Y'
		AND TE.EDUCATION_TYPE_CODE_ID != 'ED03'
		WHERE (TEP.complete_state_code_id = 'EC02' OR TEP.complete_state_code_id =
		'EC04' OR TE.education_step_code_id = 'ES03' OR
		TEP.complete_state_code_id = 'EC01')
		AND TEP.education_emp_seq = #{empSeq}
		AND DATE_FORMAT(TE.education_start_date, '%Y') = DATE_FORMAT(NOW(), '%Y')
	</select>

	<select id="common.getEmpInfo" parameterType="String"
		resultType="map">
		SELECT
		*
		FROM
		cust.v_emp_info
		WHERE
		lang_code = 'kr'
		AND
		emp_seq = #{empSeq}
	</select>

	<select id="common.getEmpInfoByName" parameterType="String"
		resultType="map">

		SELECT
		*
		FROM
		neos.v_user_info
		WHERE
		use_yn = 'Y'
		AND
		emp_name = #{emp_name}
		AND MAIN_DEPT_YN = 'Y'
		GROUP BY emp_name
	</select>

	<select id="common.getEmpSeq" parameterType="map" resultType="map">
		SELECT emp_seq FROM cust.v_emp_info WHERE lang_code = 'kr' AND
		erp_emp_num = #{erp_emp_num}
	</select>

	<select id="common.getFingerBase64" parameterType="String"
		resultType="map">
		SELECT * FROM cust_epis.finger_print WHERE
		finger_login_id = #{loginID} AND active = 'Y'
	</select>

	<select id="common.getSignFile" parameterType="String"
		resultType="map">
		SELECT
		a.emp_seq,
		CONCAT(c.absol_path,b.file_stre_cours, '/', b.stre_file_name,'.',file_extsn) AS filePath
		FROM
		neos.t_co_emp a
		INNER JOIN
		neos.t_co_atch_file_detail b ON a.sign_file_id = b.file_id
		INNER JOIN neos.t_co_group_path c ON
		b.path_seq = c.path_seq AND c.os_type = #{osType}
		AND a.use_yn = 'Y'
		AND a.emp_seq = #{empSeq}
	</select>

	<select id="common.getCeoSignFile" parameterType="String"
		resultType="map">
		SELECT
		CONCAT(b.absol_path,a.file_stre_cours, '/', a.stre_file_name,'.',a.file_extsn) AS ceoSignPath
		FROM
		neos.t_co_atch_file_detail a INNER JOIN neos.t_co_group_path b ON a.path_seq = b.path_seq AND
		b.os_type = #{osType}
		WHERE
		a.file_stre_cours = '/stamp'
	</select>

	<select id="common.getCompInfo" parameterType="String"
		resultType="map">
		SELECT
		*
		FROM
		neos.t_co_comp_multi WHERE comp_seq = '1000'
		AND lang_code = 'kr'
	</select>

	<select id="common.getContractDn" parameterType="String"
		resultType="map">
		SELECT
		status_code
		FROM
		neos.t_co_emp
		WHERE use_yn = 'Y'
		AND emp_seq = #{empSeq}
	</select>

	<select id="common.getHeader" parameterType="String" resultType="map">
		SELECT
		emp_seq, CONCAT(emp_name, ' ', duty) AS nameDuty
		FROM
		cust.v_emp_info
		WHERE
		emp_seq = cust.fn_getDeptHeader(#{empSeq})
		AND lang_code = 'kr'
	</select>

	<select id="getRecordsDept" parameterType="map" resultType="map">
		SELECT
		*
		FROM
		cust_epis.common_code
		WHERE
		active = 'Y'
		AND group_code = 'DEPT_HEADER'
		AND `code` != '1320'
	</select>

	<select id="getTpfUserInfo" parameterType="String" resultType="map">
		SELECT
		*
		,(SELECT dp_name FROM neos.t_co_comp_duty_position_multi WHERE use_yn = 'Y'
		AND lang_code = 'kr' AND dp_type = 'DUTY' AND dp_seq = duty_code) AS
		dutyName
		,(SELECT dp_name FROM neos.t_co_comp_duty_position_multi WHERE use_yn = 'Y'
		AND lang_code = 'kr' AND dp_type = 'POSITION' AND dp_seq =
		position_code) AS positionName
		FROM
		NEOS.V_USER_INFO
		WHERE
		USE_YN = 'Y'
		AND main_dept_yn = 'Y'
		AND EMP_SEQ = #{key}
	</select>
	
	<select id="getCalendarEmpInfo" parameterType="map" resultType="map">
		SELECT 
		    *,
		    (SELECT 
		            code_val
		        FROM
		            cust_epis.COMMON_CODE
		        WHERE
		            GROUP_CODE = 'DEPT_SCH_GRP'
		                AND ACTIVE = 'Y'
		                AND `CODE` = DEPT_SEQ) AS mcalSeq
		FROM
		    neos.V_user_INFO
		WHERE
		    use_yn = 'Y' AND main_dept_yn = 'Y'
		        AND emp_seq = #{empSeq}
	</select>
	
	<select id="getCalendarDelEmpInfo" parameterType="map" resultType="map">
		SELECT 
		    *,
		    (SELECT 
		            code_val
		        FROM
		            cust_epis.COMMON_CODE
		        WHERE
		            GROUP_CODE = 'DEPT_SCH_GRP'
		                AND ACTIVE = 'Y'
		                AND `CODE` = DEPT_SEQ) AS mcalSeq
		FROM
		    neos.V_user_INFO
		WHERE
		    use_yn = 'Y' AND main_dept_yn = 'Y'
		        AND login_id = #{userId}
	</select>

	<select id="common.fileInfo" parameterType="map" resultType="map">
		select
		*
		from
		cust_epis.dj_ATTACH_FILE
		WHERE attach_file_id = #{attach_file_id}

	</select>	
	
		<select id="getUserList" parameterType="map" resultType="map">
	/*유저 리스트*/
		SELECT position_name, duty_name, erp_emp_seq as erp_emp_num, emp_seq, emp_name, dept_name 
		FROM NEOS.V_INTERLOCK_USER 
		WHERE MAIN_DEPT_YN = 'Y'
		AND WORK_STATUS = 'Y'
		
		<if test="search_name != ''">
		AND EMP_NAME LIKE CONCAT('%', #{search_name}, '%')
		</if>

		<if test="search_dept != ''">
		AND DEPT_NAME LIKE CONCAT('%', #{search_dept}, '%')
		</if>

		<if test="search_num != ''">
		AND erp_emp_seq LIKE CONCAT('%', #{search_num}, '%')
		</if>
	</select>
	
	<select id="getDeptList2" parameterType="map" resultType="map">
	/*부서 리스트*/
		select b.*, a.dept_cd from neos.t_co_dept a, neos.t_co_dept_multi b
		where a.dept_seq = b.dept_seq
		and a.use_yn = 'Y'
		and b.lang_code = 'kr'
		
		<if test="search_dept != ''">
		AND b.DEPT_NAME LIKE CONCAT('%', #{search_dept}, '%')
		</if>

		<if test="search_num != ''">
		AND a.dept_cd LIKE CONCAT('%', #{search_num}, '%')
		</if>
	</select>
	
	<select id="getProjectList" parameterType="map" resultType="map">
	/*프로젝트 리스트 getProjectList*/
		SELECT 
		pjt_nm 
		, pjt_cd
		FROM SPJT A 
		WHERE CO_CD = #{erpCoCd}
		
		AND	charindex((CASE #{erpPjtStatus} WHEN '' THEN ' ' ELSE prog_fg END), #{erpPjtStatus}) > 0 
		
		<if test="search_pNm != ''">
		AND PJT_NM LIKE '%' + #{search_pNm} + '%'
		</if>

		<if test="search_pCd != ''">
		AND PJT_CD LIKE '%' + #{search_pCd} + '%'
		</if>
		
		<if test="pjtFromDate != null and pjtFromDate != ''">
			AND A.FR_DT BETWEEN #{pjtFromDate} AND #{pjtToDate}
		</if>

	</select>
	
	<select id="getBudgetList" parameterType="java.util.Map" resultType="java.util.Map">
		/* common.getBudgetList - mssql */
		exec USP_COMMON_ACC_CUSTOMHELP_SBGTCD_SELECT @CO_CD='2000',@GISU=0,@FR_DT='',@TO_DT='',@GR_FG='2' ,@DIV_CDS='',@MGT_CDS='',@BOTTOM_CDS='',@BGT_CD=#{search_bCd},@BGT_NM=#{search_bNm} ,@OPT_01='1',@OPT_02='1',@OPT_03='2',@BGT_FR_DT='',@GROUP_CD='',@LANGKIND='KOR' ;
	</select>
	
	<select id="getBudgetList2" parameterType="java.util.Map" resultType="java.util.Map">
		/* common.getBudgetList2 - mssql */
		select distinct
			bgt_nm
		from sbgtcd
		where co_cd = 2000
		and use_yn = 1
		and div_fg = 3
		and gr_fg = 2
		<if test="search_bNm != ''">
		AND bgt_nm LIKE '%' + #{search_bNm} + '%'
		</if>
	</select>
	
	<select id="getErpUser" parameterType="java.util.Map" resultType="java.util.Map">
		/* common.getErpUser - mssql */
		EXECUTE P_GWG20_COMMON_USER_INFO @CO_CD='${CO_CD}',@EMP_CD='${EMP_CD}',@LANGKIND='KR'
	</select>
	
	<select id="getErpGisuInfo" parameterType="java.util.Map" resultType="java.util.Map">
		/* common.getErpGisuInfo - mssql */
		EXEC P_GWG20_COMMON_GISU_INFO @CO_CD='${CO_CD}',@DATE='${GISU_DT}'
	</select>	
	
	<select id="getPositionList" parameterType="map" resultType="map">
	/*직급을 가져오자*/
		SELECT * FROM NEOS.T_CO_COMP_DUTY_POSITION_MULTI WHERE DP_TYPE = 'POSITION' AND USE_YN = 'Y' AND LANG_CODE = 'kr' 
		AND DP_SEQ NOT IN (SELECT DP_SEQ FROM CUST_JIF.DJ_BSRP_POSITION WHERE ACTIVE = 'Y'
							<if test="searchType == 'mod'">
							AND DP_SEQ NOT IN (${dp_seq})
							</if>
							)
	</select>
	
	<update id="monthlyWorkPlanMake" parameterType="map">
		call SP_DJ_WORKPLAN_BATCH()
	</update>
	
	<update id="dailyWorkAgree" parameterType="map">
		call SP_HOLIDAY_WORK_AGREE()
	</update>
	
	<select id="ctDept" parameterType="map" resultType="map">
	/*조직조 부서*/
		SELECT * FROM NEOS.V_INTERLOCK_DEPT
	</select>
	
	<insert id="setSmsMaster" parameterType="map">
		insert into 
			cust_epis.CF_MSG_SEND_QUEUE 
				(MSG_TYPE, MSG_TITLE, MSG_CONTENT, SEND_NUM, RECV_COUNT)
		 values
		 		(#{msgType},#{title},#{contents},#{sendNum},#{recvCnt}) 
	</insert>
	
	<insert id="setSmsSub" parameterType="list">
	
		insert into 
			cust_epis.CF_MSG_SEND_QUEUE_RECEIVER 
				(BATCH_ID, SERIAL_NO, RECV_NUM)
			values
	<foreach collection="list" item="v"  separator="," >
			(LAST_INSERT_ID() , #{v.no} , #{v.number})
	</foreach>
	
	
	</insert>

	<select id="getBankCode" resultType="map">
	/*getBankCode*/
		SELECT * FROM DBO.SBANKE WHERE USE_YN = '1' ORDER BY BANK_NM
	</select>	

</mapper>    