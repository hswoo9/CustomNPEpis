<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="busTrip">


    <select id="getPositionList" resultType="map">

        SELECT *

        FROM
            NEOS.T_CO_COMP_DUTY_POSITION_MULTI

        WHERE
            DP_TYPE = 'POSITION'
          AND
            USE_YN = 'Y'
          AND
            LANG_CODE = 'kr'

    </select>

    <select id="getOilTypeList" resultType="map">

        SELECT *

        FROM
            cust_epis.common_code

        WHERE
            active ='Y'

          AND
            group_code = 'BUS_TRIP_OIL_TYPE'

          AND
            code is not null
    </select>
    <select id="getCarTypeList" resultType="map">

        SELECT *

        FROM
            cust_epis.common_code

        WHERE
            active ='Y'

          AND
            group_code = 'BUS_TRIP_CAR_TYPE'

          AND
            code is not null
    </select>
    <select id="getTraficWay" resultType="map">

        SELECT *

        FROM
            cust_epis.common_code

        WHERE
            active ='Y'

          AND
            group_code = 'BUS_TRIP_TRAFIC'

          AND
            code is not null
    </select>
    <select id="getTimeTypeList" resultType="map">

        SELECT *

        FROM
            cust_epis.common_code

        WHERE
            active ='Y'

          AND
            group_code = 'BUS_TRIP_TIME_TYPE'

          AND
            code is not null
    </select>


    <select id="getGradeCostList" resultType="map">

        SELECT *

        FROM
            cust_epis.dj_hr_biz_grade_cost_master

        WHERE
            active ='Y'

        ORDER BY
            order_no
    </select>
    <select id="getOilCostList" resultType="map">

        SELECT a.*,b.code_kr
        FROM cust_epis.dj_hr_biz_oil_cost_master a, cust_epis.common_code b
        WHERE b.group_code ='BUS_TRIP_OIL_TYPE' and b.code = a.common_code_id and a.active='Y'

    </select>
    <select id="getAreaCost" resultType="map" parameterType="map">

        SELECT  trim(SUBSTRING_INDEX(SUBSTRING_INDEX(remark, ',', 1), ':', -1)) as value1 ,trim(SUBSTRING_INDEX(SUBSTRING_INDEX(SUBSTRING_INDEX(remark, ',', 2), ',', -1), ':', -1)) as value2,trim(SUBSTRING_INDEX(SUBSTRING_INDEX(remark, ',', -1), ':',-1))as value3 FROM cust_epis.dj_hr_biz_grade_cost_master where apply_grade_array_seqs like concat('%',#{dept_position_code},'%') and date_format(#{day},'%Y-%m-%d') between date_format(sdate,'%Y-%m-%d') and date_format(edate,'%Y-%m-%d')

    </select>
    <select id="getCityCostList" resultType="map" parameterType="map">


        SELECT a.*, b.code_kr as code_time, b.code_val as code_time_val, b.etc1 as code_time_math

        FROM (
        SELECT a.city_cost_master_seq ,a.type_common_code_id , a.accurate_amt, a.order_no, a.remark, b.code_kr as code_car , a.time_common_code_id ,a.sdate, a.edate
        FROM cust_epis.dj_hr_biz_city_cost_master a, cust_epis.common_code b
        WHERE b.group_code ='BUS_TRIP_CAR_TYPE' and b.code = a.type_common_code_id  and a.active ='Y') as a ,  cust_epis.common_code as b

        WHERE b.group_code='BUS_TRIP_TIME_TYPE' and b.code = a.time_common_code_id

        <if test="code_car != null and code_car != ''"  >
            and code_car =#{code_car}
        </if>
        <if test="day != null and day != ''">
            and date_format(#{day},'%Y-%m-%d') between date_format(sdate,'%Y-%m-%d') and date_format(edate,'%Y-%m-%d')
        </if>
    </select>

    <select id="getGradeCostListTotal" resultType="int">

        SELECT
            count(*)

        FROM
            cust_epis.dj_hr_biz_grade_cost_master

        WHERE
            active ='Y'

    </select>
    <select id="getOilCostListTotal" resultType="int">

        SELECT
            count(*)

        FROM
            cust_epis.dj_hr_biz_oil_cost_master

        WHERE
            active ='Y'

    </select>
    <select id="getCityCostListTotal" resultType="int">

        SELECT
            count(*)

        FROM
            cust_epis.dj_hr_biz_city_cost_master

        WHERE
            active ='Y'

    </select>
    <select id="getBizTemp" parameterType="map" resultType="map">

        SELECT * FROM cust_epis.dj_hr_biz_temp where res_doc_seq = #{res_doc_seq} order by seq desc limit 1
    </select>
    <insert id="insertBizTemp" parameterType="map">
        INSERT INTO dj_hr_biz_temp
        (
            ACCT_CD,
            ACCT_NM,
            BGT01_CD,
            BGT01_NM,
            BGT01_NMK,
            BGT02_CD,
            BGT02_NM,
            BGT02_NMK,
            BGT03_CD,
            BGT03_NM,
            BGT04_CD,
            BGT04_NM,
            BGT_CD,
            BGT_NM,
            BIZ_FG,
            CTL_FG,
            DIV_FG,
            DRCR_FG,
            GROUP_CD,
            GROUP_NM,
            GROUP_NMK,
            GR_FG,
            HBGT_CD,
            HBGT_CD1,
            HBGT_CD2,
            HBGT_CD3,
            LAST_YN2,
            SYS_CD,
            TO_DT,
            USE_YN,
            bottomName,
            bottomSeq,
            code,
            dummy,
            erpBgt1Name,
            erpBgt1Seq,
            erpBgt2Name,
            erpBgt2Seq,
            erpBgt3Name,
            erpBgt3Seq,
            erpBgt4Name,
            erpBgt4Seq,
            erpBudgetName,
            erpBudgetSeq,
            erpLevel01Name,
            erpLevel01Seq,
            erpLevel02Name,
            erpLevel02Seq,
            erpLevel03Name,
            erpLevel03Seq,
            erpLevel04Name,
            erpLevel04Seq,
            erpLevel05Name,
            erpLevel05Seq,
            erpLevel06Name,
            erpLevel06Seq,
            res_doc_seq
        )
        VALUES
            (
                #{ACCT_CD},
                #{ACCT_NM},
                #{BGT01_CD},
                #{BGT01_NM},
                #{BGT01_NMK},
                #{BGT02_CD},
                #{BGT02_NM},
                #{BGT02_NMK},
                #{BGT03_CD},
                #{BGT03_NM},
                #{BGT04_CD},
                #{BGT04_NM},
                #{BGT_CD},
                #{BGT_NM},
                #{BIZ_FG},
                #{CTL_FG},
                #{DIV_FG},
                #{DRCR_FG},
                #{GROUP_CD},
                #{GROUP_NM},
                #{GROUP_NMK},
                #{GR_FG},
                #{HBGT_CD},
                #{HBGT_CD1},
                #{HBGT_CD2},
                #{HBGT_CD3},
                #{LAST_YN2},
                #{SYS_CD},
                #{TO_DT},
                #{USE_YN},
                #{bottomName},
                #{bottomSeq},
                #{code},
                #{dummy},
                #{erpBgt1Name},
                #{erpBgt1Seq},
                #{erpBgt2Name},
                #{erpBgt2Seq},
                #{erpBgt3Name},
                #{erpBgt3Seq},
                #{erpBgt4Name},
                #{erpBgt4Seq},
                #{erpBudgetName},
                #{erpBudgetSeq},
                #{erpLevel01Name},
                #{erpLevel01Seq},
                #{erpLevel02Name},
                #{erpLevel02Seq},
                #{erpLevel03Name},
                #{erpLevel03Seq},
                #{erpLevel04Name},
                #{erpLevel04Seq},
                #{erpLevel05Name},
                #{erpLevel05Seq},
                #{erpLevel06Name},
                #{erpLevel06Seq},
                #{res_doc_seq}
            )

    </insert>
    <insert id="saveGradeCost" >
        INSERT INTO dj_hr_biz_grade_cost_master
        (
        title,
        day_cost,
        lodgment_cost,
        food_cost,
        city_cost,
        apply_grade_array,
        apply_grade_array_seqs,
        order_no,
        remark,
        create_emp_seq,
        sdate,
        edate
        )
        VALUES
        (
        #{title},
        #{day_cost},
        #{lodgment_cost},
        #{food_cost},
        #{city_cost},
        "${position_name}",  <!-- $으로 넣는것도 되고 -->
        #{position_seq}, <!-- #으로 넣는것도됨 -->
        #{order_no},
        #{remark},
        #{create_emp_seq},
        #{sdate},
        #{edate}

        )

    </insert>
    <insert id="saveOilCost">
        INSERT INTO dj_hr_biz_oil_cost_master
        (
            oil_type,
            common_code_id,
            fuel_cost,
            apply_sdate,
            apply_edate,
            order_no,
            remark,
            create_emp_seq
        )
        VALUES
            (
                #{oil_type},
                #{common_code_id},
                #{fuel_cost},
                #{apply_sdate},
                #{apply_edate},
                #{order_no},
                #{remark},
                #{create_emp_seq}
            )

    </insert>
    <insert id="saveCityCost">
        INSERT INTO dj_hr_biz_city_cost_master
        (
            type,
            type_common_code_id,
            biz_time,
            time_common_code_id,
            accurate_amt,
            order_no,
            remark,
            create_emp_seq,
            sdate,
            edate
        )
        VALUES
            (
                #{type},
                #{type_common_code_id},
                #{biz_time},
                #{time_common_code_id},
                #{accurate_amt},
                #{order_no},
                #{remark},
                #{create_emp_seq},
                #{sdate},
                #{edate}
            )

    </insert>

    <update id="changeStatus" parameterType="map" >

        UPDATE
            cust_epis.dj_hr_biz_common
        SET
            <if test='active == "Y"'>
                active = "N"
            </if>
            <if test='active == "N"'>
                active = "Y"
            </if>
            <if test='active != "Y" and active != "N"'>
                active = "Y"
            </if>
        WHERE
            biz_common_seq = #{biz_common_seq}
    </update>

    <select id="getStatus" parameterType="map" resultType="String">
        SELECT
            active
        FROM
            CUST_EPIS.DJ_HR_BIZ_COMMON
        WHERE
            biz_common_seq = #{biz_common_seq}
    </select>

    <update id="modGradeCost">
        UPDATE
            dj_hr_biz_grade_cost_master
        SET
            title = #{title},
            day_cost =#{day_cost},
            lodgment_cost =#{lodgment_cost},
            food_cost=#{food_cost},
            city_cost=#{city_cost},
            apply_grade_array=#{position_name},
            apply_grade_array_seqs=#{position_seq},
            order_no=#{order_no},
            remark=#{remark},
            sdate=#{sdate},
            edate=#{edate}
        WHERE
            grade_cost_master_seq =#{grade_cost_master_seq}

    </update>
    <update id="updateLastcommon" parameterType="map" >
        UPDATE
            dj_hr_biz_common
        SET
            project_name = #{project_name},
            pjt_cd =#{pjt_cd}
        WHERE
            biz_common_seq =#{biz_common_seq}


    </update>
    <update id="updateLastOut" parameterType="map" >
        UPDATE
            dj_hr_biz_outside
        SET
            budget_seq = #{budget_seq},
            trade_seq =#{trade_seq}
        WHERE
            biz_common_seq =#{biz_common_seq}

    </update>
    <update id="modOilCost">
        UPDATE
            dj_hr_biz_oil_cost_master
        SET
            oil_type = #{oil_type},
            common_code_id =#{common_code_id},
            fuel_cost =#{fuel_cost},
            apply_sdate=#{apply_sdate},
            apply_edate=#{apply_edate},
            order_no=#{order_no},
            remark=#{remark}
        WHERE
            oil_cost_master_seq =#{oil_cost_master_seq}

    </update>
    <update id="modCityCost">
        UPDATE
            dj_hr_biz_city_cost_master
        SET
            type = #{type},
            type_common_code_id =#{type_common_code_id},
            biz_time =#{biz_time},
            time_common_code_id=#{time_common_code_id},
            accurate_amt=#{accurate_amt},
            order_no=#{order_no},
            remark=#{remark},
            sdate=#{sdate},
            edate=#{edate}
        WHERE
            city_cost_master_seq =#{city_cost_master_seq}

    </update>



    <update id="delGradeCost">
        UPDATE
            dj_hr_biz_grade_cost_master
        SET
            active ='N'
        WHERE
            grade_cost_master_seq in (${grade_cost_master_seq})

    </update>

    <update id="delOilCost">
        UPDATE
            dj_hr_biz_oil_cost_master
        SET
            active ='N'
        WHERE
            oil_cost_master_seq in (${oil_cost_master_seq})

    </update>
    <update id="delCityCost">
        UPDATE
            dj_hr_biz_city_cost_master
        SET
            active ='N'
        WHERE
            city_cost_master_seq in (${city_cost_master_seq})

    </update>

    <select id="getOrgCode" parameterType="map" resultType="map">

        select * from ep_master where ep_no =#{emp_erp_num} and rownum =1
    </select>

    <select id="getonNaraBTListPagingTotal" parameterType="map" resultType="int">
        select count(*) from (select row_number() over (order by ROWNUM) as num ,A.* from (
        SELECT
        rownum, asd.*

        FROM (

        SELECT
        distinct A.TRIP_NO,
        A.EP_NO ,
        A.JOB_CLASS,
        A.JOB_LEV,A.IN_DATE,

        B.SEQ_NO,B.APPLY_DATE,
        B.TRIP_CODE,B.NATION_CODE,
        B.TRIP_LOCAL,
        B.TRIP_DAY_FR,
        B.TRIP_TIME_FR,
        B.TRIP_DAY_TO,
        B.TRIP_TIME_TO,
        B.TITLE,
        B.REPORT_DATE,
        B.RESULT,
        B.REQ_AMT,
        B.ANS_AMT,
        B.SANCTION,
        B.MEMO1,
        B.FIRST_ACC_DATE,
        B.LAST_ACC_DATE,
        B.LAST_USER_ID,
        B.LAST_USER_NAME,
        B.MODIFIER_IP,
        B.AMT_KR_01,
        B.AMT_KR_02,
        B.AMT_KR_03,
        B.AMT_KR_04,
        B.AMT_OT_01,
        B.AMT_OT_02,
        B.AMT_OT_03,
        B.AMT_OT_04,
        B.AMT_OT_05,
        B.SANCTION2,
        B.USE_CAR,
        B.TRIP_SUBJECT,
        B.TIME_CARD,
        B.TRIP_CP,
        B.USE_TRSPT,
        B.MOVE_DST,
        B.SANC_EX,
        B.EXT_NATION_CODE,
        B.TRIP_TIME,

        C.EP_NAME_KOR,
        D.ORG_CODE,
        D.ORG_NAME

        FROM
        EPis_insa.ep_bus_trip_per A

        JOIN
        EPis_insa.ep_bus_trip B
        ON
        A.trip_no = B.trip_no

        JOIN
        EPis_insa.ep_master C
        ON
        A.EP_no = C.ep_no

        JOIN
        EPis_insa.CD_ORG_CODE D

        ON
        A.ORG_CODE = D.ORG_CODE

        WHERE 1=1


        <if test="trip_code != null and trip_code != ''">
            AND
            trip_code =#{trip_code}
        </if>
        AND
        SANCTION in (2,3)

        ORDER BY
        B.trip_day_fr, A.trip_no
        ) asd

        WHERE 1=1

        <if test="start_dt != null and start_dt != ''">

            AND
            trip_day_fr between #{start_dt} and #{end_dt}
        </if>

        <if test="org_code != null and org_code != ''">

            AND
            org_code =#{org_code}
        </if>
        <if test="title != null and title != ''">

            AND
            title like '%'||#{title}||'%'
        </if>

        <if test="ep_name_kor != null and ep_name_kor != ''">

            AND
            ep_name_kor  like '%'||#{ep_name_kor}||'%'
        </if>
        <if test="trip_no != null and trip_no != ''">

            AND
            trip_no  like '%'||#{trip_no}||'%'
        </if>
        <if test="empArr != null and empArr != ''">

            AND
            EP_NO in (${empArr})
        </if>


        ) A)
    </select>
    <select id="getonNaraBTListPaging" parameterType="map" resultType="map">
        select * from (select row_number() over (order by ROWNUM) as num ,A.* from (SELECT
        rownum, asd.*

        FROM (

        SELECT
        distinct A.TRIP_NO,
        A.EP_NO ,
        A.JOB_CLASS,
        A.JOB_LEV,A.IN_DATE,

        B.SEQ_NO,B.APPLY_DATE,
        B.TRIP_CODE,B.NATION_CODE,
        B.TRIP_LOCAL,
        B.TRIP_DAY_FR,
        B.TRIP_TIME_FR,
        B.TRIP_DAY_TO,
        B.TRIP_TIME_TO,
        B.TITLE,
        B.REPORT_DATE,
        B.RESULT,
        B.REQ_AMT,
        B.ANS_AMT,
        B.SANCTION,
        B.MEMO1,
        B.FIRST_ACC_DATE,
        B.LAST_ACC_DATE,
        B.LAST_USER_ID,
        B.LAST_USER_NAME,
        B.MODIFIER_IP,
        B.AMT_KR_01,
        B.AMT_KR_02,
        B.AMT_KR_03,
        B.AMT_KR_04,
        B.AMT_OT_01,
        B.AMT_OT_02,
        B.AMT_OT_03,
        B.AMT_OT_04,
        B.AMT_OT_05,
        B.SANCTION2,
        B.USE_CAR,
        B.TRIP_SUBJECT,
        B.TIME_CARD,
        B.TRIP_CP,
        B.USE_TRSPT,
        B.MOVE_DST,
        B.SANC_EX,
        B.EXT_NATION_CODE,
        B.TRIP_TIME,

        C.EP_NAME_KOR,
        D.ORG_CODE,
        D.ORG_NAME

        FROM
        EPis_insa.ep_bus_trip_per A

        JOIN
        EPis_insa.ep_bus_trip B
        ON
        A.trip_no = B.trip_no

        JOIN
        EPis_insa.ep_master C
        ON
        A.EP_no = C.ep_no

        JOIN
        EPis_insa.CD_ORG_CODE D

        ON
        A.ORG_CODE = D.ORG_CODE

        WHERE 1=1


        <if test="trip_code != null and trip_code != ''">
            AND
            trip_code =#{trip_code}
        </if>
        AND
        SANCTION in (2,3)

        ORDER BY
        B.trip_day_fr, A.trip_no
        ) asd

        WHERE
        1=1
        <if test="start_dt != null and start_dt != '' ">
            ANd
            trip_day_fr between #{start_dt} and #{end_dt}
        </if>

        <if test="org_code != null and org_code != ''">

            AND
            org_code =#{org_code}
        </if>
        <if test="title != null and title != ''">

            AND
            title like '%'||#{title}||'%'
        </if>

        <if test="ep_name_kor != null and ep_name_kor != ''">

            AND
            ep_name_kor  like '%'||#{ep_name_kor}||'%'
        </if>
        <if test="trip_no != null and trip_no != ''">

            AND
            trip_no  like '%'||#{trip_no}||'%'
        </if>


        <if test="empArr != null and empArr != ''">

            AND
            EP_NO in (${empArr})
        </if>


        ) A)<!--  where num between ${skip} +1 and ${skip} + ${pageSize} -->
    </select>
    <select id="getonNaraBTList" parameterType="map" resultType="map">
        SELECT
        rownum, asd.*

        FROM (

        SELECT
        distinct A.TRIP_NO,
        A.EP_NO ,
        A.JOB_CLASS,
        A.JOB_LEV,A.IN_DATE,

        B.SEQ_NO,B.APPLY_DATE,
        B.TRIP_CODE,B.NATION_CODE,
        B.TRIP_LOCAL,
        B.TRIP_DAY_FR,
        B.TRIP_TIME_FR,
        B.TRIP_DAY_TO,
        B.TRIP_TIME_TO,
        B.TITLE,
        B.REPORT_DATE,
        B.RESULT,
        B.REQ_AMT,
        B.ANS_AMT,
        B.SANCTION,
        B.MEMO1,
        B.FIRST_ACC_DATE,
        B.LAST_ACC_DATE,
        B.LAST_USER_ID,
        B.LAST_USER_NAME,
        B.MODIFIER_IP,
        B.AMT_KR_01,
        B.AMT_KR_02,
        B.AMT_KR_03,
        B.AMT_KR_04,
        B.AMT_OT_01,
        B.AMT_OT_02,
        B.AMT_OT_03,
        B.AMT_OT_04,
        B.AMT_OT_05,
        B.SANCTION2,
        B.USE_CAR,
        B.TRIP_SUBJECT,
        B.TIME_CARD,
        B.TRIP_CP,
        B.USE_TRSPT,
        B.MOVE_DST,
        B.SANC_EX,
        B.EXT_NATION_CODE,
        B.TRIP_TIME,

        C.EP_NAME_KOR,
        D.ORG_CODE,
        D.ORG_NAME

        FROM
        epis_insa.ep_bus_trip_per A

        JOIN
        epis_insa.ep_bus_trip B
        ON
        A.trip_no = B.trip_no

        JOIN
        epis_insa.ep_master C
        ON
        A.EP_no = C.ep_no

        JOIN
        epis_insa.CD_ORG_CODE D

        ON
        A.ORG_CODE = D.ORG_CODE

        WHERE 1=1


        <if test="trip_code != null and trip_code != ''">
            AND
            trip_code =#{trip_code}
        </if>
        AND
        SANCTION in (2,3)

        ORDER BY
        B.trip_day_fr, A.trip_no
        ) asd

        WHERE 1=1

        <if test="start_dt != null and start_dt != ''">
            AND
            trip_day_fr between #{start_dt} and #{end_dt}
        </if>

        <if test="org_code != null and org_code != ''">

            AND
            org_code =#{org_code}
        </if>
        <if test="title != null and title != ''">

            AND
            title like '%'||#{title}||'%'
        </if>

        <if test="ep_name_kor != null and ep_name_kor != ''">

            AND
            ep_name_kor  like '%'||#{ep_name_kor}||'%'
        </if>
        <if test="trip_no != null and trip_no != ''">

            AND
            trip_no  like '%'||#{trip_no}||'%'
        </if>

        <if test="ORG_FULL_NAME != null and ORG_FULL_NAME != ''">

            AND
            ORG_FULL_NAME  like '%'||#{ORG_FULL_NAME}||'%'
        </if>
        <if test="empArr != null and empArr != ''">

            AND
            EP_NO in (${empArr})
        </if>
    </select>

    <select id="getUserInfo" parameterType="map" resultType="map">
        SELECT
        *

        FROM
        neos.v_user_info

        where 1=1

        AND
        emp_seq != '1'

        <if test="emp_seq != null and emp_seq != ''">
            AND
            emp_seq like concat(#{emp_seq},'%')
        </if>
        <if test="dept_name != null and dept_name != ''">
            AND
            dept_name like concat(#{dept_name},'%')
        </if>
        <if test="emp_name != null and emp_name != ''">
            AND
            emp_name like concat(#{emp_name},'%')
        </if>

    </select>
    <select id="addUserInfo" parameterType="map" resultType="map">
        SELECT
        *

        FROM
        neos.v_user_info

        where 1=1

        AND
        main_dept_yn != 'N'

        <if test="erp_emp_num != null and erp_emp_num != ''">
            AND
            erp_emp_num = #{erp_emp_num}
        </if>

        limit 1

    </select>

    <select id="getCityCost" parameterType="map" resultType="map">

        SELECT
        *

        FROM
        cust_epis.dj_hr_biz_city_cost_master

        where 1=1

        <if test="type_common_code_id != null and type_common_code_id != ''  ">
            AND
            type_common_code_id = #{type_common_code_id}
        </if>
        <if test="time_common_code_id != null and time_common_code_id != ''  ">
            AND
            time_common_code_id = #{time_common_code_id}
        </if>

    </select>

    <select id="getClientInfo" parameterType="map" resultType="map">


        SELECT
        A.EMP_CD,
        B.TR_CD,
        B.TR_NM ,
        ISNULL(B.DIV_ADDR1,'') +' ' + isnull(B.ADDR2, '') as ADDR ,
        ISNULL(B.CEO_NM,'') as CEO_NM,
        ISNULL(B.REG_NB, '') as REG_NB,
        ISNULL(B.BA_NB,'') as BA_NB,
        ISNULL(B.JIRO_CD,'') as JIRO_CD,
        ISNULL(C.BANK_NM,'') as BANK_NM,
        ISNULL(B.DEPOSITOR,'') as DEPOSITOR
        FROM
        (select * from SEMP where CO_CD ='5000') A
        JOIN
        (select * from STRADE where CO_CD ='5000') B
        ON
        A.RSRG_NO = B.PPL_NB
        JOIN
        (select * from SBANK )as C
        ON
        B.JIRO_CD = C.BANK_CD
        WHERE
        1=1
        AND USE_YN = '1'
        <foreach collection="EMP_NO_JOIN" separator="," open="and a.emp_cd in(" close=")"  item="emp_no">

            #{emp_no}

        </foreach>


    </select>
    <insert id="bizInsertOutSubCard" parameterType="map" >

        INSERT INTO cust_epis.dj_hr_biz_out_sub_card
        (
            attachId,
            syncId,
            out_sub_seq,
            cost,
            cardSort,
            baNb, bizIncomCode, bizIncomName, btrName, btrSeq, budgetSeq, businessNb, cardNum, ceoName, ctrName, ctrSeq, depositor, empName, empSeq, etcCode, etcName, payAmt, payTaxAmt, realPayAmt, regDate, resDocSeq, resSeq, trName, trSeq, tradeAmt, tradeNote, tradeSeq, tradeStdAmt, tradeVatAmt, interfaceSeq
        )
        values(


                  #{attachId},
                  #{cardSyncId},
                  #{out_sub_seq},
                  #{cost},
                  #{cardSort},
                  #{baNb},#{bizIncomCode},#{bizIncomName},#{btrName},#{btrSeq},#{budgetSeq},#{businessNb},#{cardNum},#{ceoName},#{ctrName},#{ctrSeq},#{depositor},#{empName},#{empSeq},#{etcCode},#{etcName},#{payAmt},#{payTaxAmt},#{realPayAmt},#{regDate},#{resDocSeq},#{resSeq},#{trName},#{trSeq},#{tradeAmt},#{tradeNote},#{tradeSeq},#{tradeStdAmt},#{tradeVatAmt},#{interfaceSeq}
              )






    </insert>
    <insert id="insertResTrade" parameterType="map" useGeneratedKeys="true"  keyProperty="trade_seq">

        INSERT INTO neos.t_exnp_restrade
        (
            `res_doc_seq`,
            `res_seq`,
            `budget_seq`,
            `emp_name`,
            `tr_seq`,
            `tr_addr`,
            `tr_name`,
            `ceo_name`,
            `trade_amt`,
            `trade_std_amt`,
            `trade_vat_amt`,
            `ba_nb`,
            `btr_seq`,
            `btr_name`,
            `depositor`,
            `create_seq`,
            `business_nb`,

            `erp_isu_dt`,
            `erp_isu_sq`,
            `erp_in_sq`,
            `erp_bq_sq`,
            `item_name`,
            `item_cnt`,
            `jiro_seq`,
            `jiro_name`,
            `ctr_seq`,
            `ctr_name`,
            `reg_date`,
            `interface_type`,
            `interface_seq`,
            `trade_note`
        )
        VALUES
            (
                #{resDocSeq},
                #{resSeq},
                #{budgetSeq},
                #{empName},
                #{trSeq},
                #{trAddr},
                #{trName},
                #{ceoName},
                #{tradeAmt},
                #{tradeStdAmt},
                #{tradeVatAmt},
                #{baNb},
                #{btrSeq},
                #{btrName},
                #{depositor},
                #{empSeq},
                #{businessNb},

                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                '',
                ''
            )

    </insert>

    <delete id="deleteResTrade" parameterType="map">

        DELETE

        FROM
            neos.t_exnp_restrade

        WHERE
            res_doc_seq = #{resDocSeq}

          AND
            res_seq = #{resSeq}

          AND
            budget_seq =  #{budgetSeq}

    </delete>
    <delete id="beforeDeleteCommon" parameterType="map">
        DELETE

        FROM
            cust_epis.dj_hr_biz_common

        WHERE
            res_doc_seq = #{res_doc_seq}

    </delete>
    <delete id="beforeDeleteCity" parameterType="map">
        DELETE

        FROM
            cust_epis.dj_hr_biz_city

        WHERE
                biz_common_seq in (select biz_common_seq from cust_epis.dj_hr_biz_common where res_doc_seq =#{res_doc_seq})
    </delete>
    <insert id="insertBizCommon" useGeneratedKeys="true" keyProperty="biz_common_seq" parameterType="map">

        INSERT INTO cust_epis.dj_hr_biz_common

        (
            writer_emp_seq,
            writer_emp_name,
            project_name,
            pjt_cd,
            status,
            order_no,
            remark,
            trade_seq,
            res_doc_seq,
            budget_seq
        )

        VALUES

            (

                #{writer_emp_seq},
                #{writer_emp_name},
                #{project_name},
                #{pjt_cd},
                #{status},
                #{order_no},
                #{remark},
                #{trade_seq},
                #{res_doc_seq},
                #{budget_seq}

            )


    </insert>
    <update id="upDateBizCommon"  parameterType="map" >

        UPDATE
            cust_epis.dj_hr_biz_common
        SET

            writer_emp_seq =#{writer_emp_seq},
            writer_emp_name=#{writer_emp_name},
            project_name=#{project_name},
            pjt_cd=#{pjt_cd},
            status=#{status},
            order_no=#{order_no},
            remark=#{remark},
            trade_seq = #{trade_seq}

        WHERE
            res_doc_seq =#{res_doc_seq}

    </update>

    <update id="updateTradeSeq"  parameterType="map" >

        UPDATE
            cust_epis.dj_hr_biz_outside
        SET

            trade_seq = ${trade_seq}

        WHERE
            biz_common_seq = #{biz_common_seq}

    </update>

    <insert id="insertBizSub"  parameterType="map">

        INSERT INTO cust_epis.dj_hr_biz_city

        (
            biz_common_seq,
            emp_name,
            emp_seq,
            date,
            stime,
            etime,
            location,
            biz_car_yn,
            amt_pay,
            bank_name,
            bank_seq,
            depositor,
            purpose,
            bank_nb,
            biz_trip_no,
            trade_seq
        )

        VALUES

            (
                #{biz_common_seq},
                #{emp_name},
                #{emp_seq},
                #{date},
                #{stime},
                #{etime},
                #{location},
                #{biz_car_yn},
                #{amt_pay},
                #{bank_name},
                #{bank_seq},
                #{depositor},
                #{purpose},
                #{bank_nb},
                #{biz_trip_no},
                #{trade_seq}

            )


    </insert>
    <update id="upDateBizSub"  parameterType="map">

        UPDATE  cust_epis.dj_hr_biz_city
        SET

            emp_name=#{emp_name},
            emp_seq=#{emp_seq},
            date=#{date},
            stime=#{stime},
            etime=#{etime},
            location=#{location},
            biz_car_yn=#{biz_car_yn},
            amt_pay=#{amt_pay},
            bank_name=#{bank_name},
            bank_seq=#{bank_seq},
            depositor=#{depositor},
            purpose=#{purpose},
            bank_nb=#{bank_nb},
            biz_trip_no=#{biz_trip_no},
            trade_seq=#{trade_seq}
        WHERE
            biz_common_seq =#{biz_common_seq}

    </update>



    <select id="bizCommonExistCheck" parameterType="map" resultType="int">
        SELECT count(*) FROM cust_epis.dj_hr_biz_common where res_doc_seq=#{res_doc_seq}

    </select>

    <select id="bizSubExistCheck" parameterType="map" resultType="int">
        SELECT count(*) FROM cust_epis.dj_hr_biz_city where biz_common_seq=#{biz_common_seq}

    </select>

    <select id="getBtRowData" parameterType="map" resultType="map">

        SELECT

            a.biz_common_seq as biz_common_seq ,
            writer_emp_seq,
            writer_emp_name,
            req_date,
            project_name,
            pjt_cd,
            status,
            order_no,
            remark,
            active,
            create_date,
            create_emp_seq,
            res_doc_seq,
            a.trade_seq as trade_seq ,
            b.biz_common_seq as biz_common_seq_reff,
            emp_name,
            emp_seq,
            date,
            stime,
            etime,
            location,
            biz_car_yn,
            amt_pay,
            bank_name,
            bank_seq,
            depositor,
            purpose,
            bank_nb,
            biz_trip_no,
            b.trade_seq as trade_seq_reff

        FROM
            cust_epis.dj_hr_biz_common a , cust_epis.dj_hr_biz_city b

        WHERE

            a.biz_common_seq = b.biz_common_seq

          AND

            a.res_doc_seq =#{res_doc_seq}

    </select>


    <select id="getBtRowData2" parameterType="map" resultType="map">

        SELECT
            *, sum(total_cost) as totalSum
        FROM
            cust_epis.dj_hr_biz_common a , cust_epis.dj_hr_biz_outside b ,cust_epis.dj_hr_biz_out_sub c

        WHERE
            a.biz_common_seq = b.biz_common_seq

          AND
            b.biz_common_seq = c.biz_common_seq

          and a.res_doc_seq = #{res_doc_seq}

        group by trip_no_onnara ,emp_name
    </select>




    <select id="getRowdataNow" parameterType="map" resultType="map">
        SELECT * FROM cust_epis.dj_hr_biz_outside a, cust_epis.dj_hr_biz_common b , cust_epis.dj_hr_biz_out_sub c where a.biz_common_seq = b.biz_common_seq and b.biz_common_seq =c.biz_common_seq

                                                                                                                    and
            a.biz_common_seq =	#{pk_join}

    </select>


    <insert id="UgaBatch" parameterType="list">


        insert into cust_epis.opnet_day_cost_batch (
        SIDOCD, SIDONM, PRODCD, PRICE, DATE
        ) values
        <foreach collection="list" item="item" separator="," >
            (${item.SIDOCD},${item.SIDONM},${item.PRODCD},"${item.PRICE}","${item.DATE}")
        </foreach>
    </insert>

    <select id="getKorailVehicle" resultType="map">

        SELECT * FROM cust_epis.oa_korail_vehicle_kind where active = 'Y'
    </select>
    <select id="getKorailCity" resultType="map">

        SELECT * FROM cust_epis.oa_korail_city where active = 'Y'
    </select>

    <select id="getKorailNode" resultType="map" parameterType="map">

        SELECT * FROM cust_epis.oa_korail_node where active = 'Y' and citycode = #{citycode}
    </select>

    <select id="getUga" parameterType="map" resultType="map">

        SELECT * FROM cust_epis.opnet_day_cost_batch where sidocd = #{sidocd} and prodCd =#{prodCd} and date =#{date} limit 1
    </select>

    <select id="getGradeCost" parameterType="map" resultType="map">
        SELECT * FROM cust_epis.dj_hr_biz_grade_cost_master where apply_grade_array_seqs like CONCAT('%',#{dept_position_code},'%') and date_format(#{day},'%Y-%m-%d') between date_format(sdate,'%Y-%m-%d') and date_format(edate,'%Y-%m-%d') and active = 'Y'
    </select>
    <select id="getOilTypeCost" parameterType="map" resultType="map">
        SELECT * FROM cust_epis.dj_hr_biz_oil_cost_master where common_code_id = #{common_code_id} and date_format(#{day},'%Y-%m-%d') between date_format(apply_sdate,'%Y-%m-%d') and date_format(apply_edate,'%Y-%m-%d')
    </select>




    <insert id="bizInsertBody"  parameterType="map" useGeneratedKeys="true"  keyProperty="biz_common_seq">

        INSERT INTO cust_epis.dj_hr_biz_outside

        (
            biz_common_seq,
            emp_name,
            emp_seq,
            location,
            sdate,
            edate,
            term,
            purpose,
            bank_name,
            bank_seq,
            depositor,
            trade_seq,
            budget_seq,
            dept_seq,
            dept_name,
            bank_nb,
            trip_no_onnara	,
            dept_position_code
        )

        VALUES

            (
                #{biz_common_seq},
                #{emp_name},
                #{emp_seq},
                #{location},
                #{sdate},
                #{edate},
                #{term},
                #{purpose},
                #{bank_name},
                #{bank_seq},
                #{depositor},
                '',
                '',
                #{dept_seq},
                #{dept_name},
                #{bank_nb},
                #{trip_no_onnara},
                #{dept_position_code}

            )


    </insert>


    <select id="selectOutBizInfo" parameterType="map" resultType="map">
        select
            a.biz_common_seq,
            writer_emp_seq,
            writer_emp_name,
            project_name,
            pjt_cd,
            status,
            active,
            create_date,
            res_doc_seq,

            emp_name,
            emp_seq,
            location,
            sdate,
            edate,
            term,
            purpose,
            bank_name,
            bank_seq,
            depositor,
            b.trade_seq,
            b.budget_seq,
            dept_name,
            dept_seq,
            trip_no_onnara,
            dept_position_code

        from
            cust_epis.dj_hr_biz_common a , cust_epis.dj_hr_biz_outside b


        where
            a.biz_common_seq = b.biz_common_seq

          and

            a.biz_common_seq = #{biz_common_seq}
    </select>

    <delete id="deleteRowDataA">

        delete from dj_hr_biz_outside where biz_common_seq = #{biz_common_seq}

    </delete>


    <delete id="deleteRowDataB">

        delete from dj_hr_biz_common where biz_common_seq =#{biz_common_seq}
    </delete>

    <select id="getOutBtRow" parameterType="map" resultType="map">
        SELECT * FROM cust_epis.dj_hr_biz_common A , cust_epis.dj_hr_biz_outside B where A.biz_common_seq = B.biz_common_seq and res_doc_seq = #{res_doc_seq}

    </select>

    <insert id="bizInsertFoot" parameterType="map" useGeneratedKeys="true"  keyProperty="sub_seq">

        insert into dj_hr_biz_out_sub
        (
            biz_day,
            trafic_way,
            car_yn,
            distance,
            trafic_cost,
            room_cost,
            food_cost,
            day_cost,
            etc_cost,
            total_cost,
            file_seq,
            file_seq2,
            biz_common_seq,
            yesan_code,
            yesan_name,
            yesan_card_code,
            yesan_card_name,
            oil_day,
            oil_sort,
            oil_sort_kor,
            oil_city,
            oil_city_kor,
            oil_cost,
            dep_cost,
            arr_cost,
            dep_bus_cost,
            arr_bus_cost,
            dep_air_cost,
            arr_air_cost,
            dep_ship_cost,
            arr_ship_cost,
            give_food,
            file_seq3,
            file_seq4,
            dusql,
            carcar,
            reduce_per
        )

        values(

                  #{biz_day},
                  #{trafic_way},
                  #{car_yn},
                  #{distance},
                  #{trafic_cost},
                  #{room_cost},
                  #{food_cost},
                  #{day_cost},
                  #{etc_cost},
                  #{total_cost},
                  #{file_seq},
                  #{file_seq2},
                  #{biz_common_seq},
                  #{yesan_code},
                  #{yesan_name},
                  #{yesan_card_code},
                  #{yesan_card_name},
                  #{oil_day},
                  #{oil_sort},
                  #{oil_sort_kor},
                  #{oil_city},
                  #{oil_city_kor},
                  #{oil_cost},
                  #{dep_cost},
                  #{arr_cost},
                  #{dep_bus_cost},
                  #{arr_bus_cost},
                  #{dep_air_cost},
                  #{arr_air_cost},
                  #{dep_ship_cost},
                  #{arr_ship_cost},
                  #{give_food},
                  #{file_seq3},
                  #{file_seq4} ,
                  #{dusql},
                  #{carcar},
                  #{reduce_per}
              )


    </insert>

    <insert id="InsertPjtAndBudget" parameterType="map">

        update  dj_hr_biz_outside

        set

            yesan_code =#{yesan_code}
          ,yesan_name =#{yesan_name}
          ,yesan_card_code =#{yesan_card_code}
          ,yesan_card_name =#{yesan_card_name}

        where
            biz_common_seq = #{biz_common_seq}
    </insert>

    <select id="getLastInfoByOutTrip" parameterType="map" resultType="map">
        SELECT * FROM cust_epis.dj_hr_biz_common A, cust_epis.dj_hr_biz_outside B, cust_epis.dj_hr_biz_out_sub C where A.biz_common_seq =B.biz_common_seq and B.biz_common_seq =C.biz_common_seq  and A.biz_common_seq = #{biz_common_seq}
    </select>

    <select id="getDayByDayInfo" parameterType="map" resultType="map">
        select
            *
        from (

                 select
                     A.biz_common_seq,
                     A.writer_emp_seq,
                     A.writer_emp_name,
                     A.project_name,
                     A.pjt_cd,
                     A.active,
                     A.create_date,
                     A.res_doc_seq,
                     B.emp_name,
                     B.emp_seq,
                     B.location,
                     B.trip_no_onnara,
                     B.sdate,
                     B.edate,
                     B.term,
                     B.purpose,
                     B.bank_name,
                     B.bank_seq,
                     B.depositor,
                     B.trade_seq,
                     B.budget_seq,
                     B.dept_name,
                     B.dept_seq,
                     B.bank_nb,
                     B.dept_position_code,
                     C.sub_seq,
                     C.biz_day,
                     C.room_cost,
                     C.day_cost,
                     C.food_cost,
                     C.etc_cost,
                     C.total_cost,
                     C.file_seq,
                     C.file_seq2,
                     C.yesan_code,
                     C.yesan_name,
                     C.give_food,
                     C.create_date as sub_create_date,
                     C.file_seq3,
                     C.file_seq4,
                     C.carcar,
                     C.reduce_per
                 from
                     dj_hr_biz_common A ,
                     dj_hr_biz_outside B,
                     dj_hr_biz_out_sub C
                 where
                     A.biz_common_seq = C.biz_common_seq
                   and
                     A.biz_common_seq = B.biz_common_seq
                   and
                     res_doc_seq =#{res_doc_seq}) E
                 left join (
            select
                outsubseq,
                sum(replace(cost,',','')) as trafic_cost
            from
                dj_hr_biz_out_transport
            where
                    outsubseq in (
                    select
                        sub_seq

                    from
                        dj_hr_biz_common A ,
                        dj_hr_biz_outside B,
                        dj_hr_biz_out_sub C
                    where
                        A.biz_common_seq = C.biz_common_seq
                      and
                        A.biz_common_seq = B.biz_common_seq
                      and
                        res_doc_seq = #{res_doc_seq})  group by outsubseq ) R
                           on E.sub_seq = R.outsubseq



    </select>
    <select id="getDayByDayOverlap" parameterType="map" resultType="int">
        SELECT count(*) FROM cust_epis.dj_hr_biz_out_sub where biz_common_seq =#{biz_common_seq} and biz_day = #{biz_day}

    </select>
    <select id="getAttachInfoByOne" parameterType="map" resultType="map">
        SELECT * FROM cust_epis.dj_attach_file where attach_file_id =#{attach_file_id}

    </select>

    <select id="getToolTipFile" parameterType="map" resultType="map">
        select * from cust_epis.dj_attach_file where attach_file_id in (${fileSeqArr});

    </select>

    <select id="getFileUserAndBizDay" parameterType="map" resultType="map">

        select B.biz_day, A.emp_name from cust_epis.dj_hr_biz_out_sub B, cust_epis.dj_hr_biz_outside A  where A.biz_common_seq = B.biz_common_seq and file_seq like concat('%',#{attach_file_id},'%')
    </select>
    <select id="getFileUserAndBizDay2" parameterType="map" resultType="map">

        select B.biz_day, A.emp_name from cust_epis.dj_hr_biz_out_sub B, cust_epis.dj_hr_biz_outside A  where A.biz_common_seq = B.biz_common_seq and file_seq2 like concat('%',#{attach_file_id},'%')
    </select>
    <select id="getFileUserAndBizDay3" parameterType="map" resultType="map">

        select B.biz_day, A.emp_name from cust_epis.dj_hr_biz_out_sub B, cust_epis.dj_hr_biz_outside A  where A.biz_common_seq = B.biz_common_seq and file_seq3 like concat('%',#{attach_file_id},'%')
    </select>
    <select id="getFileUserAndBizDay4" parameterType="map" resultType="map">

        select B.biz_day, A.emp_name from cust_epis.dj_hr_biz_out_sub B, cust_epis.dj_hr_biz_outside A  where A.biz_common_seq = B.biz_common_seq and file_seq4 like concat('%',#{attach_file_id},'%')
    </select>

    <delete id="deleteOutSub" parameterType="map">
        delete from cust_epis.dj_hr_biz_out_sub where sub_seq =#{sub_seq}
    </delete>
    <delete id="deleteOutSubDayData" parameterType="map">
        delete from cust_epis.dj_hr_biz_out_sub where biz_common_seq = #{biz_common_seq} and biz_day = #{biz_day}
    </delete>

    <select id="getCardCostBySubSeq" parameterType="map" resultType="map">

        SELECT out_sub_seq, sum(cost) as cost FROM cust_epis.dj_hr_biz_out_sub_card where out_sub_seq =#{out_sub_seq}

    </select>
    <select id="getDayTransPortDetail" parameterType="map" resultType="map">

        SELECT * FROM cust_epis.dj_hr_biz_out_transport where outsubseq =#{outsubseq}

    </select>
    <select id="getCardCostByattachId" parameterType="map" resultType="map">

        SELECT * FROM cust_epis.dj_hr_biz_out_sub_card where attachId =#{attach_file_id}

    </select>

    <select id="getCardExistYn" parameterType="map" resultType="map">

        select sub_seq from dj_hr_biz_common A ,dj_hr_biz_outside B, dj_hr_biz_out_sub C where A.biz_common_seq = C.biz_common_seq and A.biz_common_seq = B.biz_common_seq and A.res_doc_seq = #{res_doc_seq} and file_seq2 !=''
    </select>

    <select id="getCardsInfo" parameterType="map" resultType="map">

        select sub_card_seq, attachId, syncId, out_sub_seq, cost, cardSort, baNb, bizIncomCode, case  when bizIncomName is null then '' end as bizIncomName  , btrName, btrSeq, budgetSeq, businessNb, cardNum, ceoName, ctrName, ctrSeq, depositor, empName, empSeq, etcCode, etcName, payAmt, payTaxAmt, realPayAmt, regDate, resDocSeq, resSeq, trName, trSeq, tradeAmt, tradeNote, tradeSeq, tradeStdAmt, tradeVatAmt, interfaceSeq, create_date, interfaceType  from cust_epis.dj_hr_biz_out_sub_card where out_sub_seq in(${sub_seq_arr})

    </select>
    <select id="getCardCostBySubSeqDetail" parameterType="map" resultType="map">

        SELECT out_sub_seq, cardSort,sum(cost) as cost FROM cust_epis.dj_hr_biz_out_sub_card where out_sub_seq =#{out_sub_seq} group by cardSort

    </select>
    <select id="getAllCardInfoByResDocSeq" parameterType="map" resultType="map">

        SELECT * FROM cust_epis.dj_hr_biz_out_sub_card A, cust_epis.dj_hr_biz_out_sub B, cust_epis.dj_hr_biz_outside C where A.out_sub_seq = B.sub_seq and B.biz_common_seq = C.biz_common_seq  and resDocSeq =#{resDocSeq}

    </select>


    <select id="getFilePk" parameterType="map" resultType="map">
        select

        group_concat(file_seq) as file_seq, group_concat(file_seq2) as file_seq2 ,group_concat(file_seq3) as file_seq3,group_concat(file_seq4) as file_seq4



        from(

        SELECT
        <!-- 공백값 null로 치환 -->
        case
        file_seq when '' then null
        else file_seq end as file_seq,

        <!-- 공백값 null로 치환 -->
        case
        file_seq2 when '' then null
        else file_seq2 end as file_seq2,
        <!-- 공백값 null로 치환 -->
        case
        file_seq3 when '' then null
        else file_seq3 end as file_seq3,
        <!-- 공백값 null로 치환 -->
        case
        file_seq4 when '' then null
        else file_seq4 end as file_seq4

        FROM
        cust_epis.dj_hr_biz_common a , cust_epis.dj_hr_biz_outside b ,cust_epis.dj_hr_biz_out_sub c

        WHERE
        a.biz_common_seq = b.biz_common_seq

        AND
        b.biz_common_seq = c.biz_common_seq

        AND
        a.res_doc_seq =#{res_doc_seq} ) a

        where
        a.file_seq is not null


    </select>
    <select id="getFilePkVer2" parameterType="map" resultType="map">
        select
            emp_name,
            biz_day,
            case file_seq when '' then null else file_seq end file_seq,
            case file_seq2 when '' then null else file_seq2 end file_seq2,
            case file_seq3 when '' then null else file_seq3 end file_seq3,
            case file_seq4 when '' then null else file_seq4 end file_seq4
        from
            cust_epis.dj_hr_biz_common a ,
            cust_epis.dj_hr_biz_outside b ,
            cust_epis.dj_hr_biz_out_sub c
        WHERE
            a.biz_common_seq = b.biz_common_seq

          AND
            b.biz_common_seq = c.biz_common_seq  and res_doc_seq=#{res_doc_seq} order by biz_day




    </select>


    <select id="getCardinfoByGisu" parameterType="map" resultType="map">
        select
            a.res_doc_seq
             ,a.tr_name
             ,b.sync_id
             , b.auth_date
             , b.auth_time
             , b.merc_saup_no
             , b.auth_num
             , b.merc_addr
             , b.card_num
             , b.request_amount
             , d.mgt_name
             , c.dept_name

        from

            neos.t_exnp_restrade a
                join  neos.t_exnp_resdoc c
                      on a.res_doc_seq = c.res_doc_seq
                join  neos.t_exnp_reshead d
                      on a.res_doc_seq = d.res_doc_seq
                left outer join neos.t_ex_card_aq_tmp b
                                on  a.interface_seq = b.sync_id

        where

            a.erp_gisu_date =#{erp_gisu_date}
          and
            a.erp_gisu_sq =#{erp_gisu_sq}
          and
            erp_bg_sq = #{erp_bg_sq}
          and
            erp_ln_sq =#{erp_ln_sq}

        order by res_doc_seq desc  limit 1
    </select>
    <select id="getWorkFeeList" parameterType="map" resultType="map">
        /*busTrip.getWorkFeeList*/

        select
            a.doc_status,
            a.doc_seq,
            a.res_doc_seq,
            b.erp_gisu_date ,
            b.erp_gisu_sq,
            b.mgt_name,

            a.emp_name ,
            b.res_date ,
            a.doc_no ,
            concat(date_format(e.reg_date, '%Y-%m-%d'), '-', lpad(e.reg_no, 4, '0')) AS 'regNo' ,
                g.resDocSeq as feeSeq,
            g.workFeeData,
            h.c_tiname

        from
            neos.t_exnp_resdoc a

                join
            neos.t_exnp_reshead b
            on
                a.res_doc_seq = b.res_doc_seq

                join
            neos.a_recordinfo c
            on
                a.doc_seq = c.c_dikeycode

                join
            cust_epis.res_doc_submit e
            on
                a.res_doc_seq = e.resDocSeq

                join
            neos.a_docinfo f
            on
                c.c_dikeycode = f.c_dikeycode

                join
            neos.a_templateinfo h
            on
                f.c_tikeycode = h.c_tikeycode

                left outer join
            cust_epis.res_work_fee g
            on
                a.res_doc_seq = g.resDocSeq


        where a.res_doc_seq =#{res_doc_seq}



    </select>

    <select id="getOpnetInfo" parameterType="map" resultType="map">

        select

        *

        from

        opnet_day_cost_batch

        where

        date between #{start_dt} and #{end_dt}

        and

        prodCd not in ('d047', 'b034')

        <if test="SIDOCD != null and SIDOCD != ''"  >
            AND SIDOCD =#{SIDOCD}
        </if>
        <if test="PRODCD != null and PRODCD != ''"  >
            AND PRODCD =#{PRODCD}
        </if>
    </select>

    <select id="getAllBizDataWithin" parameterType="map" resultType="map">
        /*busTrip.getAllBizDataWithin*/

        select
            a.doc_seq,
            a.res_doc_seq,
            b.erp_gisu_date ,
            b.erp_gisu_sq,
            mgt_name,
            erp_budget_name,
            a.emp_name ,
            res_date ,
            doc_no ,
            concat(date_format(e.reg_date, '%Y-%m-%d'), '-', lpad(e.reg_no, 4, '0')) AS 'regNo' ,
                g.*

        from
            neos.t_exnp_resdoc a,
            neos.t_exnp_reshead b,
            neos.a_recordinfo c ,
            neos.t_exnp_resbudget d ,
            cust_epis.res_doc_submit e ,
            (select
                 A.biz_common_seq,
                 A.res_doc_seq as resDocSeq,
                 A.trade_seq,
                 A.budget_seq,
                 B.emp_name as btEmpNm,
                 B.emp_seq as btEmpSeq,
                 B.date,
                 B.stime,
                 B.etime,
                 B.amt_pay,
                 B.biz_trip_no

             from
                 cust_epis.dj_hr_biz_common A ,         cust_epis.dj_hr_biz_city B
             where
                 A.biz_common_seq = B.biz_common_seq
               and
                 A.active = 'Y'
               and
                     res_doc_seq in (
                     select
                         MAX(CAST(res_doc_seq as UNSIGNED))
                     from
                         cust_epis.dj_hr_biz_common A , cust_epis.dj_hr_biz_city B
                     where
                         A.biz_common_seq = B.biz_common_seq
                       and
                         A.active = 'Y'
                       and
                         DATE_FORMAT(B.date, '%Y-%m-%d') between #{start_dt} and #{end_dt}
                       group by biz_trip_no, b.emp_seq,date)

                       and
                         DATE_FORMAT(B.date, '%Y-%m-%d') between #{start_dt} and #{end_dt}
                        ) as g

        where
            a.res_doc_seq = b.res_doc_seq
          and
            a.doc_seq = c.c_dikeycode
          and
            b.res_seq = d.res_seq
          and
            a.res_doc_seq = e.resDocSeq
          and
            a.res_doc_seq = g.resdocseq
          and
            a.doc_status ='008'
          and DATE_FORMAT(res_date, '%Y-%m-%d') between #{start_dt} and #{end_dt}

    </select>
    <select id="getAllBizDataOutside" parameterType="map" resultType="map">
        /*busTrip.getAllBizDataOutside*/

        select
            a.doc_seq,
            a.res_doc_seq,
            b.erp_gisu_date ,
            b.erp_gisu_sq,
            mgt_name,
            erp_budget_name,
            a.emp_name ,
            a.emp_seq ,
            res_date ,
            doc_no ,
            concat(date_format(e.reg_date, '%Y-%m-%d'), '-', lpad(e.reg_no, 4, '0')) AS 'regNo' ,
                g.*

        from
            neos.t_exnp_resdoc a,
            neos.t_exnp_reshead b,
            neos.a_recordinfo c ,
            neos.t_exnp_resbudget d ,
            cust_epis.res_doc_submit e ,
            (select
                 a.biz_common_seq,
                 a.res_doc_seq as resDocSeq,
                 b.trade_seq,
                 b.budget_seq,
                 b.emp_seq as btEmpSeq,
                 b.emp_name as btEmpNm,
                 b.sdate,
                 b.edate,
                 b.trip_no_onnara,
                 c.trafic_cost,
                 c.room_cost,
                 c.day_cost,
                 c.food_cost,
                 c.etc_cost,
                 c.total_cost,
                 c.biz_day,
                 c.sub_seq,
                 c.file_seq2

             from
                 cust_epis.dj_hr_biz_common a,
                 cust_epis.dj_hr_biz_outside b,
                 cust_epis.dj_hr_biz_out_sub c
             where
                 a.biz_common_seq = b.biz_common_seq
               and
                 b.biz_common_seq = c.biz_common_seq
               and
                 a.active ='Y'
               and
                     res_doc_seq in (
                     select
                         MAX(CAST(res_doc_seq as UNSIGNED))
                     from
                         cust_epis.dj_hr_biz_common a,
                         cust_epis.dj_hr_biz_outside b,
                         cust_epis.dj_hr_biz_out_sub c
                     where
                         a.biz_common_seq = b.biz_common_seq
                       and
                         b.biz_common_seq = c.biz_common_seq
                       and
                         a.active ='Y'
                       and
                         b.sdate >= #{start_dt}
                       and
                         #{end_dt} >= b.edate
                     group by trip_no_onnara, b.emp_seq,biz_day)
                       and
                         b.sdate >= #{start_dt}
                       and
                         #{end_dt} >= b.edate
             ) as g

        where
            a.res_doc_seq = b.res_doc_seq
          and
            a.doc_seq = c.c_dikeycode
          and
            b.res_seq = d.res_seq
          and
            a.res_doc_seq = e.resDocSeq
          and
            a.res_doc_seq = g.resdocseq
          and
            a.doc_status ='008'
          and DATE_FORMAT(res_date, '%Y-%m-%d') between #{start_dt} and #{end_dt}


    </select>

    <select id="getCardCostBySort" parameterType="map" resultType="map">


        SELECT (cost) as cost, cardSort  FROM cust_epis.dj_hr_biz_out_sub_card where out_sub_seq = #{sub_seq} group by cardSort;


    </select>


    <select id="getMatchBizInfo" parameterType="map" resultType="int">
        /*busTrip.getMatchBizInfo*/

        select count(*)

        from

            (SELECT A.*, B.detail_code, B.detail_name FROM neos.t_exnp_resdoc A ,neos.t_co_code_detail_multi B where A.doc_status = B.detail_code and code = 'COM109' and lang_code = 'kr' and detail_code in(002, 008)) R,

            (select

                 A.biz_common_seq, A.writer_emp_seq, A.writer_emp_name, A.project_name, A.pjt_cd, A.active, A.create_date, A.res_doc_seq,
                 B.biz_common_seq as biz_common_seqq, B.emp_name, B.emp_seq, B.location, B.trip_no_onnara, B.sdate, B.edate, B.term, B.purpose, B.bank_name, B.bank_seq, B.depositor, B.trade_seq, B.budget_seq, B.dept_name, B.dept_seq, B.bank_nb, B.dept_position_code,
                 C.sub_seq, C.biz_day, C.trafic_way, C.car_yn, C.distance, C.trafic_cost, C.room_cost, C.day_cost, C.food_cost, C.etc_cost, C.total_cost, C.file_seq, C.file_seq2, C.biz_common_seq as biz_common_seqqq, C.yesan_code, C.yesan_name, C.yesan_card_code, C.yesan_card_name, C.oil_day, C.oil_city, C.oil_cost, C.oil_sort, C.dep_cost, C.arr_cost, C.oil_sort_kor, C.oil_city_kor, C.dep_bus_cost, C.arr_bus_cost, C.dep_air_cost, C.arr_air_cost, C.dep_ship_cost, C.arr_ship_cost, C.give_food, C.create_date as sub_cteate_date, C.file_seq3, C.file_seq4, C.dusql

             from

                 cust_epis.dj_hr_biz_common A, cust_epis.dj_hr_biz_outside B, cust_epis.dj_hr_biz_out_sub C

             where
                 A.biz_common_seq = B.biz_common_seq
               and
                 A.biz_common_seq= C.biz_common_seq

               and
                 trip_no_onnara =#{trip_no_onnara}
               and
                 emp_seq = #{emp_seq}
               and
                 active ='Y') V

        where R.res_doc_seq = V.res_doc_seq

    </select>
    <select id="getMatchBizInfoCity" parameterType="map" resultType="int">
        /*busTrip.getMatchBizInfo*/

        SELECT count(*)

        from

        (SELECT <!-- res_doc_seq 별 결재상태 체크하는 서브쿼리 R-->
        A.*,

        B.detail_code,
        B.detail_name
        FROM
        neos.t_exnp_resdoc A ,neos.t_co_code_detail_multi B
        WHERE
        A.doc_status = B.detail_code
        AND
        code = 'COM109'
        AND
        lang_code = 'kr'
        AND
        detail_code in(002, 008)) R,

        (SELECT <!-- 시내출장 테이블 V  -->

        A.biz_common_seq,
        A.writer_emp_seq,
        A.writer_emp_name,
        A.project_name,
        A.pjt_cd,
        A.active,
        A.create_date,
        A.res_doc_seq,

        B.biz_common_seq as biz_common_seqq,
        B.emp_name as biz_emp_name,
        B.emp_seq,
        B.date,
        B.stime,
        B.etime,
        B.location,
        B.biz_car_yn,
        B.amt_pay,
        B.bank_name,
        B.bank_seq,
        B.depositor,
        B.purpose,
        B.bank_nb,
        B.biz_trip_no,
        B.trade_seq,
        B.index

        from

        cust_epis.dj_hr_biz_common A, cust_epis.dj_hr_biz_city B

        where
        A.biz_common_seq = B.biz_common_seq

        and
        biz_trip_no =#{trip_no_onnara}
        and
        emp_seq = #{emp_seq}
        and
        active ='Y') V

        WHERE
        R.res_doc_seq = V.res_doc_seq

    </select>
    <select id="getSuccessBIzInfo" parameterType="map" resultType="map">

        SELECT *

        from

        (SELECT
        A.*,

        B.detail_code,
        B.detail_name
        FROM
        neos.t_exnp_resdoc A ,neos.t_co_code_detail_multi B
        WHERE
        A.doc_status = B.detail_code
        AND
        code = 'COM109'
        AND
        lang_code = 'kr'
        AND
        detail_code in(002, 008)

        <if test="dept_seq != null and dept_seq != ''"  >
            AND dept_seq =#{dept_seq}
        </if>
        <if test="docNo != null and docNo != ''"  >
            AND doc_no like concat ('%',#{docNo},'%')
        </if>
        ) R,

        (SELECT

        A.biz_common_seq,
        A.writer_emp_seq,
        A.writer_emp_name,
        A.project_name,
        A.pjt_cd,
        A.active,
        A.create_date,
        A.res_doc_seq,

        B.biz_common_seq as biz_common_seqq,
        B.emp_name as biz_emp_name,
        B.emp_seq,
        B.date,
        B.stime,
        B.etime,
        B.location,
        B.biz_car_yn,
        B.amt_pay,
        B.bank_name,
        B.bank_seq,
        B.depositor,
        B.purpose,
        B.bank_nb,
        B.biz_trip_no,
        B.trade_seq,
        B.index

        from

        cust_epis.dj_hr_biz_common A, cust_epis.dj_hr_biz_city B

        where
        A.biz_common_seq = B.biz_common_seq



        <if test="active != null and active != ''">
            and active= #{active}
        </if>

        <if test="emp_name != null and emp_name != ''"  >
            AND emp_name like concat ('%',#{emp_name},'%')
        </if>

        <if test="purpose != null and purpose != ''"  >
            AND purpose like concat ('%',#{purpose},'%')
        </if>
        <if test="txtFrDt != null and txtFrDt != ''"  >
            AND date between #{txtFrDt} and #{txtToDt}
        </if>

        ) V

        WHERE
        R.res_doc_seq = V.res_doc_seq

        LIMIT ${skip} , ${pageSize}

    </select>
    <select id="getSuccessBIzInfoCount" parameterType="map" resultType="int">

        SELECT count(*)

        from

        (SELECT
        A.*,

        B.detail_code,
        B.detail_name
        FROM
        neos.t_exnp_resdoc A ,neos.t_co_code_detail_multi B
        WHERE
        A.doc_status = B.detail_code
        AND
        code = 'COM109'
        AND
        lang_code = 'kr'
        AND
        detail_code in(002, 008)

        <if test="dept_seq != null and dept_seq != ''"  >
            AND dept_seq =#{dept_seq}
        </if>
        <if test="docNo != null and docNo != ''"  >
            AND doc_no like concat ('%',#{docNo},'%')
        </if>

        ) R,

        (SELECT

        A.biz_common_seq,
        A.writer_emp_seq,
        A.writer_emp_name,
        A.project_name,
        A.pjt_cd,
        A.active,
        A.create_date,
        A.res_doc_seq,

        B.biz_common_seq as biz_common_seqq,
        B.emp_name,
        B.emp_seq,
        B.date,
        B.stime,
        B.etime,
        B.location,
        B.biz_car_yn,
        B.amt_pay,
        B.bank_name,
        B.bank_seq,
        B.depositor,
        B.purpose,
        B.bank_nb,
        B.biz_trip_no,
        B.trade_seq,
        B.index

        from

        cust_epis.dj_hr_biz_common A, cust_epis.dj_hr_biz_city B

        where
        A.biz_common_seq = B.biz_common_seq

        <if test="active != null and active != ''">
            and active= 'Y'
        </if>
        <if test="emp_name != null and emp_name != ''"  >
            AND emp_name like concat ('%',#{emp_name},'%')
        </if>
        <if test="purpose != null and purpose != ''"  >
            AND purpose like concat ('%',#{purpose},'%')
        </if>
        <if test="txtFrDt != null and txtFrDt != ''"  >
            AND date between #{txtFrDt} and #{txtToDt}
        </if>

        ) V

        WHERE
        R.res_doc_seq = V.res_doc_seq

    </select>


    <select id="getSuccessBIzInfo2" parameterType="map" resultType="map">

        SELECT *

        from

        (SELECT
        A.*,

        B.detail_code,
        B.detail_name
        FROM
        neos.t_exnp_resdoc A ,neos.t_co_code_detail_multi B
        WHERE
        A.doc_status = B.detail_code
        AND
        code = 'COM109'
        AND
        lang_code = 'kr'
        AND
        detail_code in(002, 008)

        <if test="dept_seq != null and dept_seq != ''"  >
            AND dept_seq =#{dept_seq}
        </if>
        <if test="docNo != null and docNo != ''"  >
            AND doc_no like concat ('%',#{docNo},'%')
        </if>
        ) R,

        (select
        A.active,
        a.biz_common_seq,
        a.res_doc_seq as resDocSeq,
        b.trade_seq,
        b.budget_seq,
        b.emp_seq as btEmpSeq,
        b.emp_name as btEmpNm,
        b.sdate,
        b.edate,
        b.purpose,
        b.location,
        b.trip_no_onnara,
        c.trafic_cost,
        c.room_cost,
        c.day_cost,
        c.food_cost,
        c.etc_cost,
        c.total_cost,
        c.biz_day,
        c.sub_seq,
        c.file_seq2

        from
        cust_epis.dj_hr_biz_common a,
        cust_epis.dj_hr_biz_outside b,
        cust_epis.dj_hr_biz_out_sub c
        where
        a.biz_common_seq = b.biz_common_seq
        and
        b.biz_common_seq = c.biz_common_seq
        <if test="active != null and active != ''">
            and active= #{active}
        </if>
        <if test="emp_name != null and emp_name != ''"  >
            AND emp_name like concat ('%',#{emp_name},'%')
        </if>

        <if test="purpose != null and purpose != ''"  >
            AND purpose like concat ('%',#{purpose},'%')
        </if>
        <if test="txtFrDt != null and txtFrDt != ''"  >
            AND biz_day between #{txtFrDt} and #{txtToDt}
        </if>

        ) V

        WHERE
        R.res_doc_seq = V.resdocseq

        LIMIT ${skip} , ${pageSize}

    </select>

    <select id="getSuccessBIzInfoCount2" parameterType="map" resultType="int">

        SELECT count(*)

        from

        (SELECT
        A.*,

        B.detail_code,
        B.detail_name
        FROM
        neos.t_exnp_resdoc A ,neos.t_co_code_detail_multi B
        WHERE
        A.doc_status = B.detail_code
        AND
        code = 'COM109'
        AND
        lang_code = 'kr'
        AND
        detail_code in(002, 008)

        <if test="dept_seq != null and dept_seq != ''"  >
            AND dept_seq =#{dept_seq}
        </if>
        <if test="docNo != null and docNo != ''"  >
            AND doc_no like concat ('%',#{docNo},'%')
        </if>
        ) R,

        (select
        a.biz_common_seq,
        a.res_doc_seq as resDocSeq,
        b.trade_seq,
        b.budget_seq,
        b.emp_seq as btEmpSeq,
        b.emp_name as btEmpNm,
        b.sdate,
        b.edate,
        b.location,
        b.purpose,
        b.trip_no_onnara,
        c.trafic_cost,
        c.room_cost,
        c.day_cost,
        c.food_cost,
        c.etc_cost,
        c.total_cost,
        c.biz_day,
        c.sub_seq,
        c.file_seq2

        from
        cust_epis.dj_hr_biz_common a,
        cust_epis.dj_hr_biz_outside b,
        cust_epis.dj_hr_biz_out_sub c
        where
        a.biz_common_seq = b.biz_common_seq
        and
        b.biz_common_seq = c.biz_common_seq
        <if test="active != null and active != ''">
            and active= 'Y'
        </if>
        <if test="emp_name != null and emp_name != ''"  >
            AND emp_name like concat ('%',#{emp_name},'%')
        </if>

        <if test="purpose != null and purpose != ''"  >
            AND purpose like concat ('%',#{purpose},'%')
        </if>
        <if test="txtFrDt != null and txtFrDt != ''"  >
            AND biz_day between #{txtFrDt} and #{txtToDt}
        </if>

        ) V

        WHERE
        R.res_doc_seq = V.resdocseq

    </select>


    <select id="getAllBizData" parameterType="map" resultType="map">
        /*busTrip.getAllBizData*/

        select * from
                     (SELECT A.*, B.detail_code, B.detail_name FROM neos.t_exnp_resdoc A ,neos.t_co_code_detail_multi B where A.doc_status = B.detail_code and code = 'COM109' and lang_code = 'kr') R ,
                     (select A.biz_common_seq	,A.writer_emp_seq	,A.writer_emp_name,A.req_date,A.project_name	,A.pjt_cd	,A.status	,A.order_no,A.remark,A.active	,A.create_emp_seq	,A.res_doc_seq
                           ,B.emp_name	,B.emp_seq	,B.location	,B.trip_no_onnara	,B.sdate	,B.edate	,B.term	,B.purpose	,B.bank_name	,B.bank_seq	,B.depositor	,B.trade_seq	,B.budget_seq	,B.dept_name	,B.dept_seq	,B.bank_nb	,B.dept_position_code	,C.sub_seq	,C.biz_day	,C.trafic_way	,C.car_yn	,C.distance	,C.trafic_cost	,C.room_cost	,C.day_cost	,C.food_cost	,C.etc_cost	,C.total_cost	,C.file_seq	,C.file_seq2		,C.yesan_code	,C.yesan_name	,C.yesan_card_code	,C.yesan_card_name	,C.oil_day	,C.oil_city	,C.oil_cost	,C.oil_sort	,C.dep_cost	,C.arr_cost	,C.oil_sort_kor	,C.oil_city_kor	,C.dep_bus_cost	,C.arr_bus_cost	,C.dep_air_cost	,C.arr_air_cost	,C.dep_ship_cost	,C.arr_ship_cost	,C.give_food	,C.create_date from cust_epis.dj_hr_biz_common A, cust_epis.dj_hr_biz_outside B, cust_epis.dj_hr_biz_out_sub C where A.biz_common_seq = b.biz_common_seq and A.biz_common_seq = C.biz_common_seq) V where R.res_doc_seq = v.res_doc_seq

    </select>
    <select id="getAllBizDataTotal" parameterType="map" resultType="int">
        /*busTrip.getAllBizDataTotal*/

        select count(*) from
                            (SELECT A.res_doc_seq, A.doc_seq, A.doc_no, A.doc_status, A.erp_send_yn, A. save_yn, B.detail_code, B.detail_name FROM neos.t_exnp_resdoc A ,neos.t_co_code_detail_multi B where A.doc_status = B.detail_code and code = 'COM109' and lang_code = 'kr') R ,
                            (select A.biz_common_seq, writer_emp_seq, writer_emp_name, req_date, project_name, pjt_cd, status, order_no, remark, active, create_date, create_emp_seq, res_doc_seq,  emp_name, emp_seq, date, stime, etime, location, biz_car_yn, amt_pay, bank_name, bank_seq, depositor, purpose, bank_nb, biz_trip_no, A.budget_seq,A.trade_seq from cust_epis.dj_hr_biz_common A , cust_epis.dj_hr_biz_city B where A.biz_common_seq = B.biz_common_seq) V where R.res_doc_seq = V.res_doc_seq


    </select>

    <select id="getAllBizDataOut" parameterType="map" resultType="map">
        /*busTrip.getAllBizDataOut*/

        SELECT
            *

        FROM
            cust_epis.dj_hr_biz_common A, cust_epis.dj_hr_biz_outside B, cust_epis.dj_hr_biz_out_sub  C

        WHERE
            A.biz_common_seq = B.biz_common_seq and A.biz_common_seq = C.biz_common_seq

            LIMIT ${skip} , ${pageSize}

    </select>
    <select id="getAllBizDataOutTotal" parameterType="map" resultType="int">
        /*busTrip.getAllBizDataOutTotal*/

        SELECT
            count(*)

        FROM
            cust_epis.dj_hr_biz_common A, cust_epis.dj_hr_biz_outside B, cust_epis.dj_hr_biz_out_sub  C

        WHERE
            A.biz_common_seq = B.biz_common_seq and A.biz_common_seq = C.biz_common_seq

    </select>
    <select id="getErpEmpNumByDept" parameterType="map" resultType="map">
        /*busTrip.getErpEmpNumByDept*/
        select *
        from
            neos.v_user_info
        where dept_seq =#{dept_seq}
          and emp_name != '관리자'

    </select>
    <select id="getalm" parameterType="map" resultType="map">
        select * from tuc.T_AIST_ALIMI order by ALM_REG_DT desc

    </select>
    <select id="getalm2" parameterType="map" resultType="map">
        select ROWNUM , a.* from (select * from tuc.t_aist_alarminfo order by INDT desc) a where 500 >= ROWNUM

    </select>

    <select id='getMsDataOne' parameterType="map" resultType="map">

        /*busTrip.getMsDataOne*/

        select * from abdocu_b a, adocuh b where a.ISU_DT = b.ISU_DT and a.ISU_SQ = b.isu_sq and a.gisu_dt =#{erp_gisu_date} and a.gisu_sq =#{erp_gisu_sq}

    </select>


    <select id="getMsUpMooList" parameterType="map" resultType="map">
        /*busTrip.getMsUpMooList*/
        <!-- param으로 쓸 값들 헷갈리지않게 앞에 select하기 위해서 별칭줌 -->
        select
        a.gisu_dt as erp_gisu_date
        , a.gisu_sq as erp_gisu_sq
        , a.bg_sq as erp_bg_sq
        , b.LN_SQ as erp_ln_sq
        , a.ISU_DT as isu_dtt
        , a.isu_sq as isu_sqq
        , c.FILL_DT
        ,*
        from abdocu_b a
        join
        abdocu_t b
        on a.gisu_dt = b.isu_dt
        and a.gisu_sq = b.isu_sq
        and a.co_cd = b.co_cd
        and a.bg_sq = b.bg_sq
        join
        (
        select distinct a.co_cd, a.isu_dt, a.isu_sq, a.fill_dt, a.fill_nb from adocuh a
        join adocud b
        on a.co_cd = b.co_cd
        and a.isu_dt = b.isu_dt
        and a.isu_sq = b.isu_sq
        and b.ACCT_CD in (61300, 61800)
        <if test="start_dt != null and start_dt != ''">
            and a.FILL_DT between #{start_dt} and #{end_dt}
        </if>
        ) c
        on a.isu_dt = c.isu_dt
        and a.isu_sq = c.isu_sq

        and a.co_cd = c.co_cd
        <if test="start_dt != null and start_dt != ''">
            and c.FILL_DT between #{start_dt} and #{end_dt}
        </if>



    </select>

    <select id='getDocInfobyISUDTAndSQ' parameterType="map" resultType="map">

        /*busTrip.getDocInfobyISUDTAndSQ*/

        select
            *
        from
            neos.erpgwlink a,    neos.a_recordinfo b
        where
            a.docx_numb = concat('DJADOCUEA_', #{ISU_DT} , '_', #{ISU_SQ})
          and
            b.c_dikeycode = a.appr_dikey

    </select>

    <insert id="setAlm">

        insert into
            tuc.T_AIST_ALIMI
        (
            ALM_SEQ,
            ALM_TYPE,
            ALM_TYPE_NM,
            ALM_TITLE,
            ALM_SENDER_ID,
            ALM_SENDER_NM,
            ALM_RECV_ID,
            ALM_RECV_NM,
            ALM_LINK_URL,
            ALM_REG_DT

        )
        values

            (
                #{ALM_SEQ},
                #{ALM_TYPE},
                #{ALM_TYPE_NM},
                #{ALM_TITLE},
                #{ALM_SENDER_ID},
                #{ALM_SENDER_NM},
                #{ALM_RECV_ID},
                #{ALM_RECV_NM},
                #{ALM_LINK_URL},
                #{ALM_REG_DT}
            )

    </insert>


    <insert id="addTransportTable" parameterType="map" >

        insert into
        dj_hr_biz_out_transport

        (
        outsubseq           ,
        sort                ,
        trafic_way          ,
        trafic_way_kr       ,
        car_yn              ,
        distance            ,
        oil_day             ,
        oil_sort            ,
        oil_sort_kor        ,
        oil_city            ,
        oil_city_kor        ,
        oil_cost            ,
        dusql               ,
        dep_cost            ,
        arr_cost            ,
        dep_bus_cost        ,
        arr_bus_cost        ,
        dep_air_cost       ,
        arr_air_cost        ,
        dep_ship_cost       ,
        arr_ship_cost       ,
        cost


        )
        values
        <foreach collection="list" item="item" separator=" , ">
            (
            #{item.outsubseq},
            #{item.sort},
            #{item.trafic_way},
            #{item.trafic_way_kr},
            #{item.car_yn},
            #{item.distance},
            #{item.oil_day},
            #{item.oil_sort},
            #{item.oil_sort_kor},
            #{item.oil_city},
            #{item.oil_city_kor},
            #{item.oil_cost},
            #{item.dusql},
            #{item.dep_cost},
            #{item.arr_cost},
            #{item.dep_bus_cost},
            #{item.arr_bus_cost},
            #{item.dep_air_cost},
            #{item.arr_air_cost},
            #{item.dep_ship_cost},
            #{item.arr_ship_cost},
            #{item.cost}
            )
        </foreach>
    </insert>


    <!-- 시외출장 excel  -->

    <select id="getBizTripDataByResSeq" parameterType="map" resultType="map">
        /*getBizTripDataByResSeq*/
        SELECT
            a.biz_common_seq,
            c.sub_seq,
            a.writer_emp_seq,
            a.writer_emp_name,
            a.res_doc_seq,
            b.biz_common_seq as biz_common_seq1,
            b.emp_name as biz_emp_name,
            b.emp_seq as biz_emp_seq,
            b.location,
            b.trip_no_onnara,
            b.sdate,
            b.edate,
            b.term,
            b.purpose,
            b.bank_name,
            b.bank_seq,
            b.depositor,
            b.dept_name,
            b.bank_nb,
            b.dept_position_code,

            c.biz_day,
            c.trafic_cost,
            c.room_cost,
            c.give_food,
            c.food_cost,
            c.day_cost,
            c.etc_cost,
            c.total_cost,
            c.file_seq,
            c.file_seq2,
            c.file_seq3,
            c.file_seq4,
            c.carcar,
            c.reduce_per

        FROM
            cust_epis.dj_hr_biz_common a , cust_epis.dj_hr_biz_outside b ,cust_epis.dj_hr_biz_out_sub c

        WHERE
            a.biz_common_seq = b.biz_common_seq

          AND
            b.biz_common_seq = c.biz_common_seq

          AND
            a.res_doc_seq = #{res_doc_seq}

        ORDER BY
            b.trip_no_onnara, biz_emp_seq, biz_day
    </select>

    <select id="getCardDataByOutSubSeq" parameterType="map" resultType="map">

        SELECT
            *
        FROM
            cust_epis.dj_hr_biz_out_sub_card
        WHERE
            out_sub_seq =#{sub_seq}
        ORDER BY
            out_sub_seq
    </select>
    <select id="getTransportDataByOutSubSeq" parameterType="map" resultType="map">

        SELECT
            *
        FROM
            cust_epis.dj_hr_biz_out_transport
        WHERE
            outsubseq =#{sub_seq}
        ORDER BY
            outsubseq
    </select>

    <select id="getBustripInResData" parameterType="map" resultType="map">
        /*getBustripInResData*/
        SELECT
            d.res_doc_seq	AS 'consDocSeq'
            , ct.biz_common_seq AS 'bizCommonSeq'
            , d.doc_seq	AS 'docSeq'
            , d.doc_seq		AS 'docSeq'
            , IFNULL(r.c_ridocfullnum, '')	AS 'docNo'
            , d.doc_status		AS 'docStatus'
            <!-- 			, i.c_diwriteday	AS 'docDate' -->
            , date_format(gwlink.appr_end_date, '%Y-%m-%d')	AS 'docDate'
            , d.resdoc_note	AS 'consdocNote'
            , d.resdoc_note	AS 'resdocNote'
            , d.expend_date	AS 'expendDate'
            , d.comp_name	AS 'compName'
            , d.dept_name	AS 'deptName'
            , d.emp_name	AS 'empName'
            , d.send_emp_seq	AS 'sendEmpSeq'
            , d.send_date		AS 'sendDate'
            , d.send_emp_name	AS 'sendName'
            , r.c_riaftertitle	AS 'docTitle'
            , d.erp_send_yn	AS 'erpSendYN'
            , 'EA'			AS 'eaType'
            , IFNULL(ds.submit_yn, 'N') AS 'submitYn'
            , concat(date_format(ds.reg_date, '%Y-%m-%d'), '-', lpad(ds.reg_no, 4, '0')) AS 'regNo'
            , h.mgt_name AS 'mgtName'
            , h.erp_comp_seq AS 'erpCompSeq'
            , IFNULL(amt.budget_amt, 0) AS 'resDocAmt'
            , IFNULL(amt.budget_tax_amt, 0) AS 'resDocTaxAmt'
            , IFNULL(amt.budget_std_amt, 0) AS 'resDocStdAmt'
            , amt.erp_budget_name AS 'repBudgetName'
            , amt.erp_gisu_date AS 'erpGisuDate'
            , amt.erp_gisu_sq AS 'erpGisuSq'
            , amt.erp_bg_sq AS 'erpBgSq'
            , ds.use_yn AS 'useYn'
            , case when ds.use_yn = 'N' then '처리제외' else '미확정' end AS 'useName'
            , ds.deadline AS 'deadline'
        FROM	neos.t_exnp_resdoc	d
        LEFT JOIN
            (
                SELECT A.res_doc_seq, A.biz_common_seq
                FROM cust_epis.dj_hr_biz_common A
                LEFT JOIN cust_epis.dj_hr_biz_city B
                ON A.biz_common_seq = B.biz_common_seq
                WHERE
                    B.biz_common_seq is not null
            ) ct
        ON d.res_doc_seq = ct.res_doc_seq
        INNER JOIN neos.t_exnp_reshead h
        ON d.res_doc_seq = h.res_doc_seq
        INNER JOIN	neos.a_recordinfo	r
        ON	d.doc_seq = r.c_dikeycode
        INNER JOIN	(
        SELECT	c_dikeycode,  MIN(c_diwriteday) AS c_diwriteday
        FROM	neos.a_draftinfo
        WHERE	IFNULL(c_distatus, '008') != 'd'
        GROUP BY c_dikeycode
        )	i
        ON	r.c_dikeycode = i.c_dikeycode
        INNER JOIN neos.t_exnp_resbudget amt
        ON	h.res_seq = amt.res_seq
        and h.res_doc_seq = amt.res_doc_seq
        INNER JOIN neos.erpgwlink gwlink
        ON			gwlink.appr_dikey = d.doc_seq
        LEFT JOIN cust_epis.res_doc_submit ds
        ON d.res_doc_seq = ds.resDocSeq
        WHERE	d.comp_seq = #{compSeq}
        AND ct.biz_common_seq is not null
        <choose>
            <when test='empSeq != null and empSeq != ""'>
                AND	d.emp_seq = #{empSeq}
            </when>
            <when test='deptSeq != null and deptSeq != ""'>
                AND	d.dept_seq = #{deptSeq}
            </when>
        </choose>
        AND	d.doc_seq IS NOT NULL
        AND 	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004','007', '008', '009','20', '30', '90' )
        AND	doc_status in ('008', '009', '90')
        AND	LEFT(requ_date,8) BETWEEN #{frDt} AND #{toDt}
        <if test="docTitle != null">
            AND	c_riaftertitle LIKE CONCAT('%', IFNULL(#{docTitle}, ''), '%')
        </if>
        <if test="docNo != null">
            AND	c_ridocfullnum LIKE CONCAT('%', IFNULL(#{docNo}, ''), '%')
        </if>
        <if test='submitYn != null and submitYn != ""'>
            AND	IFNULL(ds.submit_yn, 'N') = #{submitYn}
        </if>
        <if test='biddingYn != null and biddingYn == "D"'>
            AND	ds.use_yn = 'N'
        </if>
        <if test='biddingYn != null and biddingYn == "N"'>
            AND	ds.use_yn = 'Y'
        </if>
        <if test='submitType != null and submitType != ""'>
            AND	ds.submit_type = #{submitType}
        </if>
        <if test='returnYn != null and returnYn != ""'>
            AND	ds.return_yn = #{returnYn}
        </if>
        <choose>
            <when test='order != null and order != ""'>
                ORDER BY ${order}
            </when>
            <otherwise>
                ORDER BY expend_date DESC
            </otherwise>
        </choose>

        LIMIT ${st}, ${end}
    </select>

    <select id="getBustripInResDataCnt" parameterType="map" resultType="int">
        /*getBustripInResDataCnt*/
        SELECT
            COUNT(*)
        FROM	neos.t_exnp_resdoc	d
        LEFT JOIN
        (
        SELECT A.res_doc_seq, A.biz_common_seq
        FROM cust_epis.dj_hr_biz_common A
        LEFT JOIN cust_epis.dj_hr_biz_city B
        ON A.biz_common_seq = B.biz_common_seq
        WHERE
        B.biz_common_seq is not null
        ) ct
        ON d.res_doc_seq = ct.res_doc_seq
        INNER JOIN neos.t_exnp_reshead h
        ON d.res_doc_seq = h.res_doc_seq
        INNER JOIN	neos.a_recordinfo	r
        ON	d.doc_seq = r.c_dikeycode
        INNER JOIN	(
        SELECT	c_dikeycode,  MIN(c_diwriteday) AS c_diwriteday
        FROM	neos.a_draftinfo
        WHERE	IFNULL(c_distatus, '008') != 'd'
        GROUP BY c_dikeycode
        )	i
        ON	r.c_dikeycode = i.c_dikeycode
        INNER JOIN neos.t_exnp_resbudget amt
        ON	h.res_seq = amt.res_seq
        and h.res_doc_seq = amt.res_doc_seq
        INNER JOIN neos.erpgwlink gwlink
        ON			gwlink.appr_dikey = d.doc_seq
        LEFT JOIN cust_epis.res_doc_submit ds
        ON d.res_doc_seq = ds.resDocSeq
        WHERE	d.comp_seq = #{compSeq}
        AND ct.biz_common_seq is not null
        <choose>
            <when test='empSeq != null and empSeq != ""'>
                AND	d.emp_seq = #{empSeq}
            </when>
            <when test='deptSeq != null and deptSeq != ""'>
                AND	d.dept_seq = #{deptSeq}
            </when>
        </choose>
        AND	d.doc_seq IS NOT NULL
        AND 	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004','007', '008', '009','20', '30', '90' )
        AND	doc_status in ('008', '009', '90')
        AND	LEFT(requ_date,8) BETWEEN #{frDt} AND #{toDt}
        <if test="docTitle != null">
            AND	c_riaftertitle LIKE CONCAT('%', IFNULL(#{docTitle}, ''), '%')
        </if>
        <if test="docNo != null">
            AND	c_ridocfullnum LIKE CONCAT('%', IFNULL(#{docNo}, ''), '%')
        </if>
        <if test='submitYn != null and submitYn != ""'>
            AND	IFNULL(ds.submit_yn, 'N') = #{submitYn}
        </if>
        <if test='biddingYn != null and biddingYn == "D"'>
            AND	ds.use_yn = 'N'
        </if>
        <if test='biddingYn != null and biddingYn == "N"'>
            AND	ds.use_yn = 'Y'
        </if>
        <if test='submitType != null and submitType != ""'>
            AND	ds.submit_type = #{submitType}
        </if>
        <if test='returnYn != null and returnYn != ""'>
            AND	ds.return_yn = #{returnYn}
        </if>
        <choose>
            <when test='order != null and order != ""'>
                ORDER BY ${order}
            </when>
            <otherwise>
                ORDER BY expend_date DESC
            </otherwise>
        </choose>

        LIMIT ${st}, ${end}
    </select>


    <select id="getBustripOutResData" parameterType="map" resultType="map">
        /*getBustripOutResData*/
        SELECT
        d.res_doc_seq	AS 'consDocSeq'
        , ct.biz_common_seq AS 'bizCommonSeq'
        , d.doc_seq	AS 'docSeq'
        , d.doc_seq		AS 'docSeq'
        , IFNULL(r.c_ridocfullnum, '')	AS 'docNo'
        , d.doc_status		AS 'docStatus'
        <!-- 			, i.c_diwriteday	AS 'docDate' -->
        , date_format(gwlink.appr_end_date, '%Y-%m-%d')	AS 'docDate'
        , d.resdoc_note	AS 'consdocNote'
        , d.resdoc_note	AS 'resdocNote'
        , d.expend_date	AS 'expendDate'
        , d.comp_name	AS 'compName'
        , d.dept_name	AS 'deptName'
        , d.emp_name	AS 'empName'
        , d.send_emp_seq	AS 'sendEmpSeq'
        , d.send_date		AS 'sendDate'
        , d.send_emp_name	AS 'sendName'
        , r.c_riaftertitle	AS 'docTitle'
        , d.erp_send_yn	AS 'erpSendYN'
        , 'EA'			AS 'eaType'
        , IFNULL(ds.submit_yn, 'N') AS 'submitYn'
        , concat(date_format(ds.reg_date, '%Y-%m-%d'), '-', lpad(ds.reg_no, 4, '0')) AS 'regNo'
        , h.mgt_name AS 'mgtName'
        , h.erp_comp_seq AS 'erpCompSeq'
        , IFNULL(amt.budget_amt, 0) AS 'resDocAmt'
        , IFNULL(amt.budget_tax_amt, 0) AS 'resDocTaxAmt'
        , IFNULL(amt.budget_std_amt, 0) AS 'resDocStdAmt'
        , amt.erp_budget_name AS 'repBudgetName'
        , amt.erp_gisu_date AS 'erpGisuDate'
        , amt.erp_gisu_sq AS 'erpGisuSq'
        , amt.erp_bg_sq AS 'erpBgSq'
        , ds.use_yn AS 'useYn'
        , case when ds.use_yn = 'N' then '처리제외' else '미확정' end AS 'useName'
        , ds.deadline AS 'deadline'
        FROM	neos.t_exnp_resdoc	d
        LEFT JOIN
        (
        SELECT A.res_doc_seq, A.biz_common_seq
        FROM cust_epis.dj_hr_biz_common A
        LEFT JOIN cust_epis.dj_hr_biz_outside B
        ON A.biz_common_seq = B.biz_common_seq
        WHERE
        B.biz_common_seq is not null
        ) ct
        ON d.res_doc_seq = ct.res_doc_seq
        INNER JOIN neos.t_exnp_reshead h
        ON d.res_doc_seq = h.res_doc_seq
        INNER JOIN	neos.a_recordinfo	r
        ON	d.doc_seq = r.c_dikeycode
        INNER JOIN	(
        SELECT	c_dikeycode,  MIN(c_diwriteday) AS c_diwriteday
        FROM	neos.a_draftinfo
        WHERE	IFNULL(c_distatus, '008') != 'd'
        GROUP BY c_dikeycode
        )	i
        ON	r.c_dikeycode = i.c_dikeycode
        INNER JOIN neos.t_exnp_resbudget amt
        ON	h.res_seq = amt.res_seq
        and h.res_doc_seq = amt.res_doc_seq
        INNER JOIN neos.erpgwlink gwlink
        ON			gwlink.appr_dikey = d.doc_seq
        LEFT JOIN cust_epis.res_doc_submit ds
        ON d.res_doc_seq = ds.resDocSeq
        WHERE	d.comp_seq = #{compSeq}
        AND ct.biz_common_seq is not null
        <choose>
            <when test='empSeq != null and empSeq != ""'>
                AND	d.emp_seq = #{empSeq}
            </when>
            <when test='deptSeq != null and deptSeq != ""'>
                AND	d.dept_seq = #{deptSeq}
            </when>
        </choose>
        AND	d.doc_seq IS NOT NULL
        AND 	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004','007', '008', '009','20', '30', '90' )
        AND	doc_status in ('008', '009', '90')
        AND	LEFT(requ_date,8) BETWEEN #{frDt} AND #{toDt}
        <if test="docTitle != null">
            AND	c_riaftertitle LIKE CONCAT('%', IFNULL(#{docTitle}, ''), '%')
        </if>
        <if test="docNo != null">
            AND	c_ridocfullnum LIKE CONCAT('%', IFNULL(#{docNo}, ''), '%')
        </if>
        <if test='submitYn != null and submitYn != ""'>
            AND	IFNULL(ds.submit_yn, 'N') = #{submitYn}
        </if>
        <if test='biddingYn != null and biddingYn == "D"'>
            AND	ds.use_yn = 'N'
        </if>
        <if test='biddingYn != null and biddingYn == "N"'>
            AND	ds.use_yn = 'Y'
        </if>
        <if test='submitType != null and submitType != ""'>
            AND	ds.submit_type = #{submitType}
        </if>
        <if test='returnYn != null and returnYn != ""'>
            AND	ds.return_yn = #{returnYn}
        </if>
        <choose>
            <when test='order != null and order != ""'>
                ORDER BY ${order}
            </when>
            <otherwise>
                ORDER BY expend_date DESC
            </otherwise>
        </choose>

        LIMIT ${st}, ${end}
    </select>

    <select id="getBustripOutResDataCnt" parameterType="map" resultType="int">
        /*getBustripOutResDataCnt*/
        SELECT
        COUNT(*)
        FROM	neos.t_exnp_resdoc	d
        LEFT JOIN
        (
        SELECT A.res_doc_seq, A.biz_common_seq
        FROM cust_epis.dj_hr_biz_common A
        LEFT JOIN cust_epis.dj_hr_biz_outside B
        ON A.biz_common_seq = B.biz_common_seq
        WHERE
        B.biz_common_seq is not null
        ) ct
        ON d.res_doc_seq = ct.res_doc_seq
        INNER JOIN neos.t_exnp_reshead h
        ON d.res_doc_seq = h.res_doc_seq
        INNER JOIN	neos.a_recordinfo	r
        ON	d.doc_seq = r.c_dikeycode
        INNER JOIN	(
        SELECT	c_dikeycode,  MIN(c_diwriteday) AS c_diwriteday
        FROM	neos.a_draftinfo
        WHERE	IFNULL(c_distatus, '008') != 'd'
        GROUP BY c_dikeycode
        )	i
        ON	r.c_dikeycode = i.c_dikeycode
        INNER JOIN neos.t_exnp_resbudget amt
        ON	h.res_seq = amt.res_seq
        and h.res_doc_seq = amt.res_doc_seq
        INNER JOIN neos.erpgwlink gwlink
        ON			gwlink.appr_dikey = d.doc_seq
        LEFT JOIN cust_epis.res_doc_submit ds
        ON d.res_doc_seq = ds.resDocSeq
        WHERE	d.comp_seq = #{compSeq}
        AND ct.biz_common_seq is not null
        <choose>
            <when test='empSeq != null and empSeq != ""'>
                AND	d.emp_seq = #{empSeq}
            </when>
            <when test='deptSeq != null and deptSeq != ""'>
                AND	d.dept_seq = #{deptSeq}
            </when>
        </choose>
        AND	d.doc_seq IS NOT NULL
        AND 	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004','007', '008', '009','20', '30', '90' )
        AND	doc_status in ('008', '009', '90')
        AND	LEFT(requ_date,8) BETWEEN #{frDt} AND #{toDt}
        <if test="docTitle != null">
            AND	c_riaftertitle LIKE CONCAT('%', IFNULL(#{docTitle}, ''), '%')
        </if>
        <if test="docNo != null">
            AND	c_ridocfullnum LIKE CONCAT('%', IFNULL(#{docNo}, ''), '%')
        </if>
        <if test='submitYn != null and submitYn != ""'>
            AND	IFNULL(ds.submit_yn, 'N') = #{submitYn}
        </if>
        <if test='biddingYn != null and biddingYn == "D"'>
            AND	ds.use_yn = 'N'
        </if>
        <if test='biddingYn != null and biddingYn == "N"'>
            AND	ds.use_yn = 'Y'
        </if>
        <if test='submitType != null and submitType != ""'>
            AND	ds.submit_type = #{submitType}
        </if>
        <if test='returnYn != null and returnYn != ""'>
            AND	ds.return_yn = #{returnYn}
        </if>
        <choose>
            <when test='order != null and order != ""'>
                ORDER BY ${order}
            </when>
            <otherwise>
                ORDER BY expend_date DESC
            </otherwise>
        </choose>

        LIMIT ${st}, ${end}
    </select>
</mapper>