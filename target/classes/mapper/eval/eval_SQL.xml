<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eval">


	<insert id="setCommissionerPoolInsert" parameterType="evalVO" useGeneratedKeys="true" keyProperty="commissioner_pool_seq">
	/*setCommissionerPoolInsert*/
		INSERT INTO CUST_EPIS.DJ_COMMISSIONER_POOL(
		NAME
		, BIRTH_DATE
		, ORDER_NO
		, REMARK
		, ACTIVE
		, CREATE_DATE
		, CREATE_EMP_SEQ
		, GENDER
		)values(
		#{eval_name}
		, #{birth_date}
		, #{order_no}
		, #{remark}
		, 'Y'
		, NOW()
		, #{create_emp_seq}
		, #{gender}
		)
	</insert>
	
	<insert id="setCommissionerDetailInsert" parameterType="evalVO">
	/*setCommissionerDetailInsert*/
		INSERT INTO CUST_EPIS.DJ_COMMISSIONER_DETAIL(
		COMMISSIONER_POOL_SEQ
		, ZIP_CODE1
		, ZIP_CODE2
		, ADDR1
		, ADDR2
		, TEL
		, MOBILE
		, EMAIL
		, ORG_NAME
		, ORG_DEPT
		, ORG_GRADE
		, ORG_RANK
		, ORG_ZIP_CODE1
		, ORG_ZIP_CODE2
		, ORG_ADDR1
		, ORG_ADDR2
		, ORG_TEL
		, ORG_FAX
		, ORG_EMAIL
		, REMARK
		, BANK_NO
		, BANK_NAME
		, BANK_CD
		, JOB_TYPE
		)VALUES(
		#{commissioner_pool_seq}
		, #{zip_code1}
		, #{zip_code2}
		, #{addr1}
		, #{addr2}
		, CONCAT(#{tel1}, '-', #{tel2}, '-' , #{tel3})
		, CONCAT(#{mobile1}, '-', #{mobile2}, '-' , #{mobile3})
		, #{email}
		, #{org_name}
		, #{org_dept}
		, #{org_grade}
		, #{org_rank}
		, #{org_zip_code1}
		, #{org_zip_code2}
		, #{org_addr1}
		, #{org_addr2}
		, CONCAT(#{org_tel1}, '-', #{org_tel2}, '-' , #{org_tel3})
		, CONCAT(#{org_fax1}, '-', #{org_fax2}, '-' , #{org_fax3})
		, #{org_email}
		, #{remark}
		, #{bank_no}
		, #{bank_name}
		, #{bank_cd}
		, #{job_type}
		)
	</insert>

	<insert id="setEvalDegreeInsert" parameterType="degreeVO">
	/*setEvalDegreeInsert*/
		INSERT INTO CUST_EPIS.DJ_EVAL_DEGREE(
		DEGREE_SEQ
		, COMMISSIONER_POOL_SEQ
		, GET_YYYYMM
		, SCHOOL
		, DEGREE
		, MAJOR
		, ACTIVE
		)VALUES(
		#{degree_seq}
		, #{commissioner_pool_seq}
		, REPLACE(#{de_get_yyyymm}, '-', '')
		, #{de_school}
		, #{de_degree}
		, #{de_major}
		, 'Y'
		)
		ON DUPLICATE KEY 
		UPDATE
		GET_YYYYMM = REPLACE(#{de_get_yyyymm}, '-', '')
		, SCHOOL = #{de_school}
		, DEGREE = #{de_degree}
		, MAJOR = #{de_major}
	</insert>
	
	<insert id="setEvalCareerInsert" parameterType="careerVO">
	/*setEvalCareerInsert*/
		INSERT INTO CUST_EPIS.DJ_EVAL_CAREER(
		CAREER_SEQ
		, COMMISSIONER_POOL_SEQ
		, WORK_SDATE
		, WORK_EDATE
		, WORK_COMPANY
		, POSITION
		, MAJOR_JOB
		, ACTIVE
		)VALUES(
		#{career_seq}
		, #{commissioner_pool_seq}
		, DATE_FORMAT(#{ca_work_sdate}, '%Y%m%d')
		, DATE_FORMAT(#{ca_work_edate}, '%Y%m%d')
		, #{ca_work_company}
		, #{ca_position}
		, #{ca_major_job}
		, 'Y'
		)
		ON DUPLICATE KEY 
		UPDATE
		WORK_SDATE = DATE_FORMAT(#{ca_work_sdate}, '%Y%m%d')
		, WORK_EDATE = DATE_FORMAT(#{ca_work_edate}, '%Y%m%d')
		, WORK_COMPANY = #{ca_work_company}
		, POSITION = #{ca_position}
		, MAJOR_JOB = #{ca_major_job}
	</insert>

	<insert id="setEvalLicenseInsert" parameterType="licenseVO">
	/*setEvalLicenseInsert*/
		INSERT INTO CUST_EPIS.DJ_EVAL_LICENSE(
		LICENSE_SEQ
		, COMMISSIONER_POOL_SEQ
		, GET_YYYYMM
		, LICENSE_TITLE
		, ORGAN
		, ACTIVE
		)VALUES(
		#{license_seq}
		, #{commissioner_pool_seq}
		, REPLACE(#{li_get_yyyymm}, '-', '')
		, #{li_license_title}
		, #{li_organ}
		, 'Y'
		)
		ON DUPLICATE KEY
		UPDATE
		GET_YYYYMM = REPLACE(#{li_get_yyyymm}, '-', '')
		, LICENSE_TITLE = #{li_license_title}
		, ORGAN = #{li_organ}
	</insert>

	<select id="getEvaluationCommitteeListSearch" parameterType="map" resultType="map">
	/*getEvaluationCommitteeListSearch*/
		<![CDATA[
		SELECT 
		A.COMMISSIONER_POOL_SEQ
		, A.NAME
		, DATE_FORMAT(A.CREATE_DATE, '%Y-%m-%d') AS CREATE_DATE
		, B.ORG_NAME
		, GROUP_CONCAT(C.BIZ_TYPE_ARRAY) BIZ_TYPE_ARRAY
		FROM CUST_EPIS.DJ_COMMISSIONER_POOL A
		JOIN CUST_EPIS.DJ_COMMISSIONER_DETAIL B
		ON A.COMMISSIONER_POOL_SEQ = B.COMMISSIONER_POOL_SEQ
		AND A.ACTIVE = 'Y'
		JOIN CUST_EPIS.DJ_COMMISSIONER_BIZ_TYPE C
        ON A.COMMISSIONER_POOL_SEQ = C.COMMISSIONER_POOL_SEQ
        AND C.ACTIVE = 'Y'
		]]>
		<if test="searchNm != ''">
			AND A.NAME LIKE CONCAT('%', #{searchNm}, '%')
		</if>

		<if test="searchOrgNm != ''">
			AND B.ORG_NAME LIKE CONCAT('%', #{searchOrgNm}, '%')
		</if>
		
		<if test="searchSt != '' and searchEt != ''">
        	AND DATE_FORMAT(A.CREATE_DATE, '%Y-%m-%d') BETWEEN #{searchSt} AND #{searchEt}
        </if>
        
        <if test="searchSelect != 'all'">
        	AND C.BIZ_TYPE_CODE_ID = #{searchSelect}
        </if>
		GROUP BY A.COMMISSIONER_POOL_SEQ
		LIMIT ${skip} , ${pageSize}
	</select>

	<select id="getEvaluationCommitteeListSearchTotal" parameterType="map" resultType="int">
	/*getEvaluationCommitteeListSearchTotal*/
		SELECT 
		COUNT(1) FROM(
        SELECT 
		A.COMMISSIONER_POOL_SEQ
		FROM CUST_EPIS.DJ_COMMISSIONER_POOL A
		JOIN CUST_EPIS.DJ_COMMISSIONER_DETAIL B
		ON A.COMMISSIONER_POOL_SEQ = B.COMMISSIONER_POOL_SEQ
		AND A.ACTIVE = 'Y'
		JOIN CUST_EPIS.DJ_COMMISSIONER_BIZ_TYPE C
        ON A.COMMISSIONER_POOL_SEQ = C.COMMISSIONER_POOL_SEQ
        AND C.ACTIVE = 'Y'
		
		<if test="searchNm != ''">
			AND A.NAME LIKE CONCAT('%', #{searchNm}, '%')
		</if>

		<if test="searchOrgNm != ''">
			AND B.ORG_NAME LIKE CONCAT('%', #{searchOrgNm}, '%')
		</if>
		
		<if test="searchSt != '' and searchEt != ''">
        	AND DATE_FORMAT(A.CREATE_DATE, '%Y-%m-%d') BETWEEN #{searchSt} AND #{searchEt}
        </if>
        
        <if test="searchSelect != 'all'">
        	AND C.BIZ_TYPE_CODE_ID = #{searchSelect}
        </if>
        
        GROUP BY A.COMMISSIONER_POOL_SEQ ) T
	</select>
	
	<select id="getCommitteePool" parameterType="map" resultType="map">
	/*getCommitteePool*/
		SELECT * FROM CUST_EPIS.DJ_COMMISSIONER_POOL WHERE ACTIVE = 'Y' AND COMMISSIONER_POOL_SEQ = #{code}
	</select>

	<select id="getCommitteeDetail" parameterType="map" resultType="map">
	/*getCommitteeDetail*/
		SELECT * FROM CUST_EPIS.DJ_COMMISSIONER_DETAIL WHERE COMMISSIONER_POOL_SEQ = #{code}
	</select>

	<select id="getEvalDegree" parameterType="map" resultType="map">
	/*getEvalDegree*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_DEGREE WHERE ACTIVE = 'Y' AND COMMISSIONER_POOL_SEQ = #{code}
	</select>

	<select id="getEvalCareer" parameterType="map" resultType="map">
	/*getEvalCareer*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_CAREER WHERE ACTIVE = 'Y' AND COMMISSIONER_POOL_SEQ = #{code}
	</select>

	<select id="getEvalLicense" parameterType="map" resultType="map">
	/*getEvalLicense*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_LICENSE WHERE ACTIVE = 'Y' AND COMMISSIONER_POOL_SEQ = #{code}
	</select>

	<update id="setCommissionerPoolUpdate" parameterType="evalVO">
	/*setCommissionerPoolUpdate*/
		UPDATE CUST_EPIS.DJ_COMMISSIONER_POOL SET
		NAME = #{eval_name}
		, BIRTH_DATE = #{birth_date}
		, ORDER_NO = #{order_no}
		, REMARK = #{remark}
		, GENDER = #{gender}
		WHERE COMMISSIONER_POOL_SEQ = #{commissioner_pool_seq}
	</update>
	
	<update id="setCommissionerDetailUpdate" parameterType="evalVO">
	/*setCommissionerDetailUpdate*/
		UPDATE CUST_EPIS.DJ_COMMISSIONER_DETAIL SET
		ZIP_CODE1 = #{zip_code1}
		, ADDR1 = #{addr1}
		, ADDR2 = #{addr2}
		, TEL = CONCAT(#{tel1}, '-', #{tel2}, '-' , #{tel3})
		, MOBILE = CONCAT(#{mobile1}, '-', #{mobile2}, '-' , #{mobile3})
		, EMAIL = #{email}
		, ORG_NAME = #{org_name}
<!-- 		, ORG_DEPT = #{org_dept} -->
		, ORG_GRADE = #{org_grade}
<!-- 		, ORG_RANK = #{org_rank} -->
		, ORG_ZIP_CODE1 = #{org_zip_code1}
		, ORG_ADDR1 = #{org_addr1}
		, ORG_ADDR2 = #{org_addr2}
		, ORG_TEL = CONCAT(#{org_tel1}, '-', #{org_tel2}, '-' , #{org_tel3})
		, ORG_FAX = CONCAT(#{org_fax1}, '-', #{org_fax2}, '-' , #{org_fax3})
		, REMARK = #{remark}
		, THESIS = #{thesis}
		, BANK_NO = #{bank_no}
		, BANK_NAME = #{bank_name}
		, BANK_CD = #{bank_cd}
		, JOB_TYPE = #{job_type}
		WHERE COMMISSIONER_POOL_SEQ = #{commissioner_pool_seq}
	</update>
	
	<update id="setEvalDegreeUpdate" parameterType="degreeVO">
	/*setEvalDegreeUpdate*/
		UPDATE CUST_EPIS.DJ_EVAL_DEGREE SET
		GET_YYYYMM = REPLACE(#{de_get_yyyymm}, '-', '')
		, SCHOOL = #{de_school}
		, DEGREE = #{de_degree}
		, MAJOR = #{de_major}
		WHERE DEGREE_SEQ = #{degree_seq}
	</update>

	<update id="setEvalCareerUpdate" parameterType="careerVO">
	/*setEvalCareerUpdate*/
		UPDATE CUST_EPIS.DJ_EVAL_CAREER SET
		WORK_SDATE = DATE_FORMAT(#{ca_work_sdate}, '%Y%m%d')
		, WORK_EDATE = DATE_FORMAT(#{ca_work_edate}, '%Y%m%d')
		, WORK_COMPANY = #{ca_work_company}
		, POSITION = #{ca_position}
		, MAJOR_JOB = #{ca_major_job}
		WHERE CAREER_SEQ = #{career_seq}
	</update>

	<update id="setEvalLicenseUpdate" parameterType="licenseVO">
	/*setEvalLicenseUpdate*/
		UPDATE CUST_EPIS.DJ_EVAL_LICENSE SET
		GET_YYYYMM = REPLACE(#{li_get_yyyymm}, '-', '')
		, LICENSE_TITLE = #{li_license_title}
		, ORGAN = #{li_organ}
		WHERE LICENSE_SEQ = #{license_seq}
	</update>
	
	<update id="evaluationCommitteeDel" parameterType="map">
	/*evaluationCommitteeDel*/
		UPDATE CUST_EPIS.DJ_COMMISSIONER_POOL SET
		ACTIVE = 'N'
		WHERE COMMISSIONER_POOL_SEQ = #{code}
	</update>

	<select id="evalBizTypeListSearch" parameterType="map" resultType="map">
	/*evalBizTypeListSearch*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_TYPE WHERE BIZ_TYPE_CODE_ID = #{biz_type_code_id} ORDER BY ORDER_NO ASC
		LIMIT ${skip} , ${pageSize}
	</select>

	<select id="evalBizTypeListSearchTotal" parameterType="map" resultType="int">
	/*evalBizTypeListSearchTotal*/
		SELECT COUNT(1) FROM CUST_EPIS.DJ_EVAL_TYPE WHERE BIZ_TYPE_CODE_ID = #{biz_type_code_id}
	</select>
	
	<update id="setEvalBizTypeUpdate" parameterType="map">
	/*setEvalBizTypeUpdate*/
		UPDATE CUST_EPIS.DJ_EVAL_TYPE SET
		TYPE_NAME = #{type_name}
		, SCORE = #{score}
		, ORDER_NO = #{order_no}
		, REMARK = #{remark}
		, ACTIVE = #{active}
		WHERE EVAL_TYPE_SEQ = #{eval_type_seq}
	</update>

	<insert id="setEvalBizTypeSave" parameterType="map">
	/*setEvalBizTypeSave*/
		INSERT INTO CUST_EPIS.DJ_EVAL_TYPE(
		TYPE_NAME
		, SCORE
		, BIZ_TYPE
		, BIZ_TYPE_CODE_ID
		, ORDER_NO
		, REMARK
		, ACTIVE
		, CREATE_DATE
		, CREATE_EMP_SEQ
		)VALUES(
		#{type_name}
		, #{score}
		, #{biz_type}
		, #{biz_type_code_id}
		, #{order_no}
		, #{remark}
		, #{active}
		, NOW()
		, #{empSeq}
		)
	</insert>
	
	<delete id="setEvalBizTypeDel" parameterType="map">
	/*setEvalBizTypeDel*/
		DELETE FROM CUST_EPIS.DJ_EVAL_TYPE WHERE EVAL_TYPE_SEQ = #{code}
	</delete>

	<select id="evalTypeSearch" parameterType="map" resultType="map">
	/*evalTypeSearch*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_TYPE WHERE BIZ_TYPE_CODE_ID = #{biz_type} AND ACTIVE = 'Y'
	</select>
	
	<select id="evalBizTypeItemListSearch" parameterType="map" resultType="map">
	/*evalBizTypeItemListSearch*/
		SELECT 
		A.biz_type
        , A.biz_type_code_id
		, A.type_name
        , A.eval_type_seq
		, B.* 
		FROM CUST_EPIS.DJ_EVAL_TYPE A
		JOIN CUST_EPIS.DJ_EVAL_ITEM B
		ON A.EVAL_TYPE_SEQ = B.EVAL_TYPE_SEQ
		AND B.EVAL_TYPE_SEQ = #{eval_type_seq}
		ORDER BY B.ORDER_NO ASC
		LIMIT ${skip} , ${pageSize}
	</select>
	
	<select id="evalBizTypeItemListSearchTotal" parameterType="map" resultType="int">
	/*evalBizTypeItemListSearchTotal*/
		SELECT COUNT(1) FROM CUST_EPIS.DJ_EVAL_ITEM
	</select>
	
	<delete id="evalBizTypeItemDel" parameterType="map">
	/*evalBizTypeItemDel*/
		DELETE FROM CUST_EPIS.DJ_EVAL_ITEM WHERE EVAL_ITEM_SEQ = #{code}
	</delete>
	
	<insert id="evalBizTypeItemSave" parameterType="map">
	/*evalBizTypeItemSave*/
		INSERT INTO CUST_EPIS.DJ_EVAL_ITEM(
		EVAL_TYPE_SEQ
		, ITEM_NAME
		, SCORE
		, STANDARD
		, ORDER_NO
		, ACTIVE
		, CREATE_DATE
		, CREATE_EMP_SEQ
		, BIZ_TYPE
		, BIZ_TYPE_CODE_ID
		)VALUES(
		#{eval_type_seq}
		, #{item_name}
		, #{score}
		, #{standard}
		, #{order_no}
		, #{active}
		, NOW()
		, #{empSeq}
		, #{biz_type}
		, #{biz_type_code_id}
		)
	</insert>
	
	<update id="evalBizTypeItemUpdate" parameterType="map">
	/*evalBizTypeItemUpdate*/
		UPDATE CUST_EPIS.DJ_EVAL_ITEM SET
		EVAL_TYPE_SEQ = #{eval_type_seq}
		, ITEM_NAME = #{item_name}
		, SCORE = #{score}
		, STANDARD = #{standard}
		, ORDER_NO = #{order_no}
		, ACTIVE = #{active}
		, BIZ_TYPE = #{biz_type}
		, BIZ_TYPE_CODE_ID = #{biz_type_code_id}
		WHERE EVAL_ITEM_SEQ = #{eval_item_seq}
	</update>
	
	<select id="getEvalDocNum" resultType="string">
	/*getEvalDocNum*/
		SELECT CONCAT(DATE_FORMAT(NOW(), '%Y'), '-', LPAD( IFNULL( COUNT(1), 0 ) + 1 , 3 , 0) ) FROM CUST_EPIS.DJ_EVAL_COMMITTEE WHERE EVAL_YEAR = DATE_FORMAT(NOW(), '%Y') AND STEP = 'A' or STEP = 'C' or STEP = 'K'
	</select>
	
	<insert id="evaluationProposalViewSave" parameterType="committeeVO" useGeneratedKeys="true" keyProperty="committee_seq">
	/*evaluationProposalViewSave*/
		INSERT INTO CUST_EPIS.DJ_EVAL_COMMITTEE(
		EVAL_DOC_NUM
		, EVAL_YEAR
		, REQ_DEPT_NAME
		, REQ_DEPT_SEQ
		, REQ_DATE
		, TITLE
		, BUDGET
		, EVAL_S_DATE
		, EVAL_E_DATE
		, EVAL_S_TIME
		, EVAL_E_TIME
		, EVAL_PLACE
		, JOIN_ORG_CNT
		, COMMISSIONER_CNT
		, MAJOR_EMP_NAME
		, MAJOR_EMP_SEQ
		, STEP
		, ACTIVE
		, CREATE_EMP_SEQ
		, CREATE_DATE
		, MAJOR_DEPT
		, MAJOR_DEPT_SEQ
		, BIZ_TYPE_ARRAY
		, BIZ_TYPE_CODE_ID
		
		, OPR_EMP_NAME_1
		, OPR_EMP_SEQ_1
		, OPR_DEPT_1
		, OPR_DEPT_SEQ_1
		
		, OPR_EMP_NAME_2
		, OPR_EMP_SEQ_2
		, OPR_DEPT_2
		, OPR_DEPT_SEQ_2
		
		, OPR_EMP_NAME_3
		, OPR_EMP_SEQ_3
		, OPR_DEPT_3
		, OPR_DEPT_SEQ_3
		
		, OPR_EMP_NAME_4
		, OPR_EMP_SEQ_4
		, OPR_DEPT_4
		, OPR_DEPT_SEQ_4
		
		, OPR_EMP_NAME_5
		, OPR_EMP_SEQ_5
		, OPR_DEPT_5
		, OPR_DEPT_SEQ_5
		
		, OPR_EMP_NAME_6
		, OPR_EMP_SEQ_6
		, OPR_DEPT_6
		, OPR_DEPT_SEQ_6
		
		, OPR_EMP_NAME_7
		, OPR_EMP_SEQ_7
		, OPR_DEPT_7
		, OPR_DEPT_SEQ_7
		
		, JOIN_SELECT_TYPE
		
		, RATES
		, PURC_REQ_ID
		
		, PROJECT_PM
		, DEVIATION
		, EVAL_CM
		, COMMITTEE_GUEST
		, IN_MB_CNT
		)VALUES(
		#{eval_doc_num}
		, DATE_FORMAT(NOW(), '%Y')
		, #{req_dept_name}
		, #{req_dept_seq}
		, DATE_FORMAT(NOW(), '%Y%m%d')
		, #{title}
		, REPLACE(#{budget}, ',' , '')
		, DATE_FORMAT(#{eval_s_date}, '%Y%m%d')
		, DATE_FORMAT(#{eval_e_date}, '%Y%m%d')
		, #{eval_s_time}
		, #{eval_e_time}
		, #{eval_place}
		, #{join_org_cnt}
		, #{commissioner_cnt}
		, #{major_emp_name}
		, #{major_emp_seq}
		, #{step}
		, 'Y'
		, #{create_emp_seq}
		, NOW()
		, #{major_dept}
		, #{major_dept_seq}
		, #{biz_type_array}
		, #{biz_type_code_id}
		
		, #{opr_emp_name_1}
		, #{opr_emp_seq_1}
		, #{opr_dept_1}
		, #{opr_dept_seq_1}
		
		, #{opr_emp_name_2}
		, #{opr_emp_seq_2}
		, #{opr_dept_2}
		, #{opr_dept_seq_2}
		
		, #{opr_emp_name_3}
		, #{opr_emp_seq_3}
		, #{opr_dept_3}
		, #{opr_dept_seq_3}
		
		, #{opr_emp_name_4}
		, #{opr_emp_seq_4}
		, #{opr_dept_4}
		, #{opr_dept_seq_4}
		
		, #{opr_emp_name_5}
		, #{opr_emp_seq_5}
		, #{opr_dept_5}
		, #{opr_dept_seq_5}
		
		, #{opr_emp_name_6}
		, #{opr_emp_seq_6}
		, #{opr_dept_6}
		, #{opr_dept_seq_6}
		
		, #{opr_emp_name_7}
		, #{opr_emp_seq_7}
		, #{opr_dept_7}
		, #{opr_dept_seq_7}
		
		, #{join_select_type}
		
		, #{rates}
		, #{purc_req_id}
		
		, #{project_pm}
		, #{deviation}
        , REPLACE(#{evalCm}, ',' , '')
        , #{committee_guest}
        , #{in_mb_cnt}
		)
	</insert>
	
	<select id="evaluationProposalListSearch" parameterType="map" resultType="map">
	/*evaluationProposalListSearch*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_COMMITTEE
		WHERE ACTIVE = 'Y'
		AND STEP NOT LIKE 'C'
		<if test="configuration != ''">
			AND STEP NOT LIKE 'K'
		</if>
		
		<if test="req_dept_seq != ''">
			AND REQ_DEPT_SEQ = #{req_dept_seq}
		</if>
		
		<if test="title != ''">
			AND TITLE LIKE CONCAT('%', #{title} ,'%')
		</if>
		
		<if test="eval_date != ''">
			AND EVAL_S_DATE = DATE_FORMAT(#{eval_date}, '%Y%m%d')
		</if>
		
		ORDER BY COMMITTEE_SEQ DESC
		LIMIT ${skip} , ${pageSize}
	</select>

	<select id="evaluationProposalListSearchTotal" parameterType="map" resultType="int">
	/*evaluationProposalListSearchTotal*/
		SELECT COUNT(1) FROM CUST_EPIS.DJ_EVAL_COMMITTEE
		WHERE ACTIVE = 'Y'
		AND STEP NOT LIKE 'C'
		<if test="configuration != ''">
		AND STEP NOT LIKE 'K'
		</if>
		
		<if test="req_dept_seq != ''">
			AND REQ_DEPT_SEQ = #{req_dept_seq}
		</if>
		
		<if test="title != ''">
			AND TITLE LIKE CONCAT('%', #{title} ,'%')
		</if>
		
		<if test="eval_date != ''">
			AND EVAL_S_DATE = DATE_FORMAT(#{eval_date}, '%Y%m%d')
		</if>
	</select>

	<select id="evaluationProposalConfigurationListSearch" parameterType="map" resultType="map">
		/*evaluationProposalConfigurationListSearch*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_COMMITTEE
		WHERE ACTIVE = 'Y'
		AND (STEP = 'C' OR STEP = 'K')

		<if test="req_dept_seq != ''">
			AND REQ_DEPT_SEQ = #{req_dept_seq}
		</if>

		<if test="title != ''">
			AND TITLE LIKE CONCAT('%', #{title} ,'%')
		</if>

		<if test="eval_date != ''">
			AND EVAL_S_DATE = DATE_FORMAT(#{eval_date}, '%Y%m%d')
		</if>

		ORDER BY COMMITTEE_SEQ DESC
		LIMIT ${skip} , ${pageSize}
	</select>

	<select id="evaluationProposalConfigurationListSearchTotal" parameterType="map" resultType="int">
		/*evaluationProposalConfigurationListSearchTotal*/
		SELECT COUNT(1) FROM CUST_EPIS.DJ_EVAL_COMMITTEE
		WHERE ACTIVE = 'Y'
		AND (STEP = 'C' OR STEP = 'K')

		<if test="req_dept_seq != ''">
			AND REQ_DEPT_SEQ = #{req_dept_seq}
		</if>

		<if test="title != ''">
			AND TITLE LIKE CONCAT('%', #{title} ,'%')
		</if>

		<if test="eval_date != ''">
			AND EVAL_S_DATE = DATE_FORMAT(#{eval_date}, '%Y%m%d')
		</if>
	</select>
	
	<update id="evaluationProposalListDel" parameterType="map">
	/*evaluationProposalListDel*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMITTEE SET
		ACTIVE = 'N'
		WHERE COMMITTEE_SEQ = #{code}
	</update>
	
	<update id="finalApprovalActiveSave" parameterType="map">
	/* finalApprovalActiveSave 최종승인 활성화 변경*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMITTEE SET
		FINAL_APPROVAL_ACTIVE = #{final_approval_active}
		WHERE COMMITTEE_SEQ = #{code}
	</update>
	
	<select id="getEvaluationProposal" parameterType="map" resultType="map">
	/*getEvaluationProposal*/
		SELECT 
		A.*
		, DATE_FORMAT(A.CREATE_DATE, '%Y-%m-%d') AS create_date2
		, DATE_FORMAT(A.EVAL_S_DATE, '%Y-%m-%d') AS eval_s_date2
		, DATE_FORMAT(A.EVAL_E_DATE, '%Y-%m-%d') AS eval_e_date2
		 , DATE_FORMAT(A.EVAL_S_DATE, '%Y. %m. %d') AS eval_s_date3
		, DATE_FORMAT(A.EVAL_E_DATE, '%Y. %m. %d') AS eval_e_date3
        , CASE WEEKDAY(A.EVAL_S_DATE) 
			WHEN '0' THEN '월'
			WHEN '1' THEN '화'
			WHEN '2' THEN '수'
			WHEN '3' THEN '목'
			WHEN '4' THEN '금'
			WHEN '5' THEN '토'
			WHEN '6' THEN '일'
			END AS EVAL_S_DATE_WK
		, CASE WEEKDAY(A.EVAL_E_DATE) 
			WHEN '0' THEN '월'
			WHEN '1' THEN '화'
			WHEN '2' THEN '수'
			WHEN '3' THEN '목'
			WHEN '4' THEN '금'
			WHEN '5' THEN '토'
			WHEN '6' THEN '일'
			END AS EVAL_E_DATE_WK
		, FORMAT( BUDGET, 0) AS budget2
		, b.emp_name AS create_emp_name
		, b.dept_name AS create_dept_name
		, C.DP_NAME AS create_duty_name
		, A.final_approval_active AS final_active
		, (SELECT CASE WHEN COUNT(1) = 0 THEN 'N' ELSE 'Y' END FROM CUST_EPIS.DJ_EVAL_COMMISSIONER WHERE COMMITTEE_SEQ = A.COMMITTEE_SEQ AND ACTIVE = 'Y' AND SIGN_4 = 'Y') AS evalViewyn
		, A.COMMITTEE_GUEST
		, A.IN_MB_CNT
		FROM CUST_EPIS.DJ_EVAL_COMMITTEE A
		JOIN NEOS.V_USER_INFO B
		ON A.CREATE_EMP_SEQ = B.EMP_SEQ
		AND B.USE_YN = 'Y'
		AND A.ACTIVE = 'Y'
		AND A.COMMITTEE_SEQ = #{code}
		AND B.MAIN_COMP_YN = 'Y'
        AND B.MAIN_DEPT_YN = 'Y'
        JOIN NEOS.T_CO_COMP_DUTY_POSITION_MULTI C
        ON B.DEPT_DUTY_CODE = C.DP_SEQ
        AND C.USE_YN = 'Y'
        AND C.DP_TYPE = 'DUTY'
        AND C.LANG_CODE = 'kr'
	</select>
	
	<select id="getEvaluationIdListSearch" parameterType="map" resultType="map">
	/*getEvaluationIdListSearch*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_ID
		ORDER BY ORDER_NO ASC
		LIMIT ${skip} , ${pageSize}
	</select>
	
	<select id="getEvaluationIdListSearchTotal" parameterType="map" resultType="int">
	/*getEvaluationIdListSearchTotal*/
		SELECT COUNT(1) FROM CUST_EPIS.DJ_EVAL_ID
	</select>
	
	<insert id="evaluationIdViewSave" parameterType="map">
	/*evaluationIdViewSave*/
		INSERT INTO CUST_EPIS.DJ_EVAL_ID(
		EVAL_USER_ID
		, EVAL_USER_PW
		, CREATE_EMP_SEQ
		, CREATE_EMP_NAME
		, CREATE_DEPT_SEQ
		, CREATE_DEPT
		, CREATE_DATE
		, ORDER_NO
		, ACTIVE
		)VALUES(
		#{eval_user_id}
		, HEX(AES_ENCRYPT(#{eval_user_pw}, 'EVAL'))
		, #{create_emp_seq}
		, #{create_emp_name}
		, #{create_dept_seq}
		, #{create_dept}
		, #{create_date}
		, #{order_no}
		, #{active}
		)
	</insert>
	
	<update id="evaluationIdViewUpdate" parameterType="map">
	/*evaluationIdViewUpdate*/
		UPDATE CUST_EPIS.DJ_EVAL_ID SET
		EVAL_USER_ID = #{eval_user_id}
		<if test="eval_user_pw != ''">
			, EVAL_USER_PW = HEX(AES_ENCRYPT(#{eval_user_pw}, 'EVAL'))
		</if>
		, CREATE_EMP_SEQ = #{create_emp_seq}
		, CREATE_EMP_NAME = #{create_emp_name}
		, CREATE_DEPT_SEQ = #{create_dept_seq}
		, CREATE_DEPT = #{create_dept}
		, CREATE_DATE = #{create_date}
		, ORDER_NO = #{order_no}
		, ACTIVE = #{active}
		WHERE EVAL_ID_SEQ = #{eval_id_seq}
	</update>
	
	<delete id="evaluationIdViewDel" parameterType="map">
	/*evaluationIdViewDel*/
		DELETE FROM CUST_EPIS.DJ_EVAL_ID WHERE EVAL_ID_SEQ = #{eval_id_seq}
	</delete>
	
	<select id="getEvalItemList" parameterType="map" resultType="map">
	/*getEvalItemList*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_TYPE A
		JOIN CUST_EPIS.DJ_EVAL_ITEM B
		ON A.EVAL_TYPE_SEQ = B.EVAL_TYPE_SEQ
		AND A.ACTIVE = 'Y'
		AND B.ACTIVE = 'Y'
		ORDER BY A.ORDER_NO, B.ORDER_NO
	</select>
	
	<select id="getEvalCommList" parameterType="map" resultType="map">
	/*getEvalCommList*/
		SELECT *
        FROM (
		SELECT 
        a.commissioner_pool_seq
        , a.name
        , a.birth_date
		, a.remark
        , b.tel
		, b.mobile
		, b.email
		, b.org_name
		, b.org_dept
		, b.org_grade
		, b.org_rank
		, b.org_email
		, b.thesis
		, IFNULL(d.degree, '-') AS degree
        , IFNULL(d.major, '-') AS major
		, c.biz_type_code_id
        , c.biz_type_array
		FROM CUST_EPIS.DJ_COMMISSIONER_POOL A
		JOIN CUST_EPIS.DJ_COMMISSIONER_DETAIL B
		ON A.COMMISSIONER_POOL_SEQ = B.COMMISSIONER_POOL_SEQ
		AND A.ACTIVE = 'Y' 
		JOIN CUST_EPIS.DJ_COMMISSIONER_BIZ_TYPE C
        ON A.COMMISSIONER_POOL_SEQ = C.COMMISSIONER_POOL_SEQ
        AND C.ACTIVE = 'Y'
        
        AND C.BIZ_TYPE_CODE_ID IN (${cdList})
	    	
    	LEFT OUTER JOIN CUST_EPIS.DJ_EVAL_DEGREE D
		ON A.COMMISSIONER_POOL_SEQ = D.COMMISSIONER_POOL_SEQ
		
		WHERE A.COMMISSIONER_POOL_SEQ NOT IN (
		     SELECT COMMISSIONER_POOL_SEQ 
		    FROM CUST_EPIS.DJ_EVAL_COMMITTEE AA
			JOIN CUST_EPIS.DJ_EVAL_COMMISSIONER BB
			ON AA.COMMITTEE_SEQ = BB.COMMITTEE_SEQ
			AND AA.ACTIVE = 'Y'
            AND BB.ACTIVE = 'Y'
			AND (DATE_FORMAT(AA.EVAL_S_DATE, '%Y-%m-%d') BETWEEN #{eval_s_date} AND #{eval_e_date} OR DATE_FORMAT(AA.EVAL_E_DATE, '%Y-%m-%d') BETWEEN #{eval_s_date} AND #{eval_e_date} ) 
			)
		
        GROUP BY A.COMMISSIONER_POOL_SEQ ) T
        
        WHERE T.BIZ_TYPE_CODE_ID = #{code}
        ORDER BY RAND()
        LIMIT ${nn}
	</select>
	
	<select id="getEvalCommListPop" parameterType="map" resultType="map">
	/*getEvalCommListPop*/
		SELECT *
        FROM (
		SELECT 
        a.commissioner_pool_seq
        , a.name
        , a.birth_date
		, a.remark
        , b.tel
		, b.mobile
		, b.email
		, b.org_name
		, b.org_dept
		, b.org_grade
		, b.org_rank
		, b.org_email
		, b.thesis
		, IFNULL(d.degree, '-') AS degree
        , IFNULL(d.major, '-') AS major
		, c.biz_type_code_id
        , c.biz_type_array
		FROM CUST_EPIS.DJ_COMMISSIONER_POOL A
		JOIN CUST_EPIS.DJ_COMMISSIONER_DETAIL B
		ON A.COMMISSIONER_POOL_SEQ = B.COMMISSIONER_POOL_SEQ
		AND A.ACTIVE = 'Y' 
		JOIN CUST_EPIS.DJ_COMMISSIONER_BIZ_TYPE C
        ON A.COMMISSIONER_POOL_SEQ = C.COMMISSIONER_POOL_SEQ
        AND C.ACTIVE = 'Y'
        
    	LEFT OUTER JOIN CUST_EPIS.DJ_EVAL_DEGREE D
		ON A.COMMISSIONER_POOL_SEQ = D.COMMISSIONER_POOL_SEQ
		
		WHERE A.COMMISSIONER_POOL_SEQ NOT IN (
		     SELECT COMMISSIONER_POOL_SEQ 
		    FROM CUST_EPIS.DJ_EVAL_COMMITTEE AA
			JOIN CUST_EPIS.DJ_EVAL_COMMISSIONER BB
			ON AA.COMMITTEE_SEQ = BB.COMMITTEE_SEQ
			AND AA.ACTIVE = 'Y'
            AND BB.ACTIVE = 'Y'
			AND (DATE_FORMAT(AA.EVAL_S_DATE, '%Y-%m-%d') BETWEEN #{eval_s_date} AND #{eval_e_date} OR DATE_FORMAT(AA.EVAL_E_DATE, '%Y-%m-%d') BETWEEN #{eval_s_date} AND #{eval_e_date} ) 
			)
		
        GROUP BY A.COMMISSIONER_POOL_SEQ ) T
        
        WHERE 1=1
         <if test='!"all".equals(code)'>
	   	 AND T.BIZ_TYPE_CODE_ID = #{code}
         </if>
       	 AND T.NAME LIKE CONCAT('%', #{searchNm} ,'%')
       	 ORDER BY RAND()
       	 LIMIT ${skip} , ${pageSize}
	</select>
	
	<select id="getEvalCommListPopTotal" parameterType="map" resultType="int">
	/*getEvalCommListPopTotal*/
		SELECT count(1)
        FROM (
		SELECT 
        a.commissioner_pool_seq
        , a.name
        , a.birth_date
		, a.remark
        , b.tel
		, b.mobile
		, b.email
		, b.org_name
		, b.org_dept
		, b.org_grade
		, b.org_rank
		, b.org_email
		, b.thesis
		, IFNULL(d.degree, '-') AS degree
        , IFNULL(d.major, '-') AS major
		, c.biz_type_code_id
        , c.biz_type_array
		FROM CUST_EPIS.DJ_COMMISSIONER_POOL A
		JOIN CUST_EPIS.DJ_COMMISSIONER_DETAIL B
		ON A.COMMISSIONER_POOL_SEQ = B.COMMISSIONER_POOL_SEQ
		AND A.ACTIVE = 'Y' 
		JOIN CUST_EPIS.DJ_COMMISSIONER_BIZ_TYPE C
        ON A.COMMISSIONER_POOL_SEQ = C.COMMISSIONER_POOL_SEQ
        AND C.ACTIVE = 'Y'
        
    	LEFT OUTER JOIN CUST_EPIS.DJ_EVAL_DEGREE D
		ON A.COMMISSIONER_POOL_SEQ = D.COMMISSIONER_POOL_SEQ
		
		WHERE A.COMMISSIONER_POOL_SEQ NOT IN (
		     SELECT COMMISSIONER_POOL_SEQ 
		    FROM CUST_EPIS.DJ_EVAL_COMMITTEE AA
			JOIN CUST_EPIS.DJ_EVAL_COMMISSIONER BB
			ON AA.COMMITTEE_SEQ = BB.COMMITTEE_SEQ
			AND AA.ACTIVE = 'Y'
            AND BB.ACTIVE = 'Y'
			AND (DATE_FORMAT(AA.EVAL_S_DATE, '%Y-%m-%d') BETWEEN #{eval_s_date} AND #{eval_e_date} OR DATE_FORMAT(AA.EVAL_E_DATE, '%Y-%m-%d') BETWEEN #{eval_s_date} AND #{eval_e_date} ) 
			)
		
        GROUP BY A.COMMISSIONER_POOL_SEQ ) T
        
        WHERE 1=1
         <if test='!"all".equals(code)'>
	        AND T.BIZ_TYPE_CODE_ID = #{code}
         </if>
        AND T.NAME LIKE CONCAT('%', #{searchNm} ,'%')
	</select>
	
	<insert id="evalCompanyInsert" parameterType="map">
	/*evalCompanyInsert*/
		INSERT INTO CUST_EPIS.DJ_EVAL_COMPANY(
		COMMITTEE_SEQ
		, COMPANY_SEQ
		, DISPLAY_TITLE
		, COMPANY_NAME
		, COMPANY_TYPE
		)VALUES(
		#{committee_seq}
		, #{company_seq}
		, #{display_title}
		, #{company_name}
		, #{company_type}
		)
	</insert>
	
	<delete id="evalCompanyDelete" parameterType="committeeVO">
	/*evalCompanyDel*/
		DELETE FROM CUST_EPIS.DJ_EVAL_COMPANY WHERE COMMITTEE_SEQ = #{committee_seq}
	</delete>
	
	<insert id="setEvalCommSave" parameterType="map" useGeneratedKeys="true" keyProperty="commissioner_seq">
	/*setEvalCommSave*/
		INSERT INTO CUST_EPIS.DJ_EVAL_COMMISSIONER(
		commissioner_pool_seq
		, committee_seq
		, active
		, create_date
		, create_emp_seq
		, ORDER_NO
		, CREATE_DEPTH
		, BIZ_TYPE_ARRAY
		, BIZ_TYPE_CODE_ID
		, EVAL_ID
		, EVAL_PW
		, EVAL_BIRTH
		)VALUES(
		#{commissioner_pool_seq}
		, #{committee_seq}
		, 'Y'
		, #{create_date}
		, #{create_emp_seq}
		, #{order_no}
		, #{tabNum}
		, #{biz_type_array}
		, #{biz_type_code_id}
        , #{name}
        , HEX(AES_ENCRYPT(#{password}, 'EVAL'))
        , #{birth_date}
		)
	</insert>
	
	<update id="setEvalCommissionerCnt" parameterType="map">
	/*setEvalCommissionerCnt*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMITTEE SET
		COMMISSIONER_CNT = #{commissioner_cnt}
		, USER_CNT = #{userCnt}
		WHERE COMMITTEE_SEQ = #{committee_seq}
	</update>
	
	<select id="getEvalCommUserList" parameterType="map" resultType="map">
	/*getEvalCommUserList*/
		SELECT * 
		<if test="pass == 'all'">
		, CAST(AES_DECRYPT(UNHEX(A.EVAL_PW), 'EVAL')AS CHAR) AS USER_PASS
		</if>
		, H.EVAL_ID_SEQ AS eval_id
		, H.eval_user_id
		, A.BIZ_TYPE_ARRAY AS BIZ_TXT
		, G.ATTACH_FILE_ID
		, CONCAT(G.REAL_FILE_NAME , '.' , G.FILE_EXTENSION) AS FILE_NM
		FROM CUST_EPIS.DJ_EVAL_COMMISSIONER A
		JOIN CUST_EPIS.DJ_EVAL_COMMITTEE B
		ON A.committee_seq = B.committee_seq
		AND A.ACTIVE = 'Y'
		<if test="pageType == 'confirm'">
			AND A.CONFIRM_YN = 'Y'
			AND A.ATTEND_YN = 'Y'
		</if>
		
		<if test="tabNum != null">
			AND A.CREATE_DEPTH = #{tabNum}
		</if>
		
		AND B.COMMITTEE_SEQ = #{code}
		JOIN CUST_EPIS.DJ_COMMISSIONER_POOL C
		ON A.COMMISSIONER_POOL_SEQ = C.COMMISSIONER_POOL_SEQ
		AND C.ACTIVE = 'Y'
		JOIN CUST_EPIS.DJ_COMMISSIONER_DETAIL D
		ON C.COMMISSIONER_POOL_SEQ = D.COMMISSIONER_POOL_SEQ
        LEFT OUTER JOIN CUST_EPIS.DJ_EVAL_DEGREE E
		ON C.COMMISSIONER_POOL_SEQ = E.COMMISSIONER_POOL_SEQ
		LEFT OUTER JOIN CUST_EPIS.DJ_ATTACH_FILE G
        ON A.COMMISSIONER_SEQ = G.TARGET_ID
        AND G.TARGET_TABLE_NAME = 'dj_eval_commissioner'
        LEFT OUTER JOIN CUST_EPIS.DJ_EVAL_ID H
        ON A.EVAL_ID_SEQ = H.EVAL_ID_SEQ
		GROUP BY A.COMMISSIONER_POOL_SEQ
		ORDER BY A.CREATE_DEPTH, A.ORDER_NO
	</select>
	
	<insert id="setEvalCommitteeTypeSave" parameterType="map">
	/*setEvalCommitteeTypeSave*/
		INSERT INTO CUST_EPIS.DJ_EVAL_COMMITTEE_TYPE(
		COMMITTEE_SEQ
		, BIZ_TYPE_ARRAY
		, BIZ_TYPE_CODE_ID
		, COMMISSIONER_CNT
		, ACTIVE
		)VALUES(
		#{committee_seq}
		, #{selTxt}
		, #{code}
		, #{nCnt}
		, 'Y'
		)
	</insert>

	<select id="getEvalCommTypeList" parameterType="map" resultType="map">
	/*getEvalCommTypeList*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_COMMITTEE_TYPE WHERE COMMITTEE_SEQ = #{code} AND ACTIVE = 'Y'
	</select>
	
	<update id="setEmptyEvalCommissioner" parameterType="map">
	/*setEmptyEvalCommissioner*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMISSIONER SET ACTIVE = 'N', EVAL_ID_SEQ = NULL WHERE COMMITTEE_SEQ = #{committee_seq}
		<if test="tabNum != null">
			AND CREATE_DEPTH = #{tabNum}
		</if>
	</update>
	
	<update id="setEvalCommitteeTypeDel" parameterType="map">
	/*setEvalCommitteeTypeDel*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMITTEE_TYPE SET ACTIVE ='N' WHERE COMMITTEE_SEQ = #{committee_seq}
	</update>
	
	<select id="getEvalIdList" parameterType="map" resultType="map">
	/*getEvalIdList*/
		SELECT EVAL_ID_SEQ, EVAL_USER_ID, ORDER_NO FROM CUST_EPIS.DJ_EVAL_ID WHERE ACTIVE = 'Y'
		AND EVAL_ID_SEQ NOT IN (SELECT EVAL_ID_SEQ FROM CUST_EPIS.DJ_EVAL_COMMISSIONER WHERE ACTIVE = 'Y' AND EVAL_ID_SEQ IS NOT NULL)
		UNION 
		SELECT EVAL_ID_SEQ, EVAL_USER_ID, ORDER_NO FROM CUST_EPIS.DJ_EVAL_ID WHERE ACTIVE = 'Y'
		AND EVAL_ID_SEQ IN (SELECT EVAL_ID_SEQ FROM CUST_EPIS.DJ_EVAL_COMMISSIONER WHERE ACTIVE = 'Y' AND committee_seq = #{code})
		ORDER BY ORDER_NO
	</select>
	
	<update id="setevalIdSave" parameterType="map">
	/*setevalIdSave*/
		UPDATE DJ_EVAL_COMMISSIONER SET EVAL_ID_SEQ = #{eval_id_seq} WHERE COMMISSIONER_SEQ = #{commissioner_seq}
	</update>

	<update id="setevalIdDel" parameterType="map">
	/*setevalIdDel*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMISSIONER SET EVAL_ID_SEQ = NULL WHERE COMMITTEE_SEQ = #{committee_seq}
	</update>
	
	<insert id="setEvalItemSave" parameterType="map">
	/*setEvalItemSave*/
		INSERT INTO CUST_EPIS.DJ_EVAL_COMMITTEE_ITEM(
		COMMITTEE_SEQ
		, ITEM_NAME
		, SCORE
		, ACTIVE
		, CREATE_DATE
		, SCORE_1
		, SCORE_2
		, SCORE_3
		, SCORE_4
		, SCORE_5
		)VALUES(
		#{committee_seq}
		, #{item_name}
		, #{score}
		, 'Y'
		, NOW()
		, #{score_1}
		, #{score_2}
		, #{score_3}
		, #{score_4}
		, #{score_5}
		)
	</insert>

	<update id="setEvalItemDel" parameterType="committeeVO">
	/*setEvalItemDel*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMITTEE_ITEM SET ACTIVE = 'N' WHERE COMMITTEE_SEQ = #{committee_seq}
	</update>
	
	<update id="evaluationProposalViewUpdate" parameterType="committeeVO">
	/*evaluationProposalViewUpdate*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMITTEE SET
		EVAL_DOC_NUM = #{eval_doc_num}
		, EVAL_YEAR = DATE_FORMAT(NOW(), '%Y')
		, REQ_DEPT_NAME = #{req_dept_name}
		, REQ_DEPT_SEQ = #{req_dept_seq}
		, REQ_DATE = DATE_FORMAT(NOW(), '%Y%m%d')
		, TITLE = #{title}
		, BUDGET = REPLACE(#{budget}, ',' , '')
		, EVAL_S_DATE = DATE_FORMAT(#{eval_s_date}, '%Y%m%d')
		, EVAL_E_DATE = DATE_FORMAT(#{eval_e_date}, '%Y%m%d')
		, EVAL_S_TIME = #{eval_s_time}
		, EVAL_E_TIME = #{eval_e_time}
		, EVAL_PLACE = #{eval_place}
		, JOIN_ORG_CNT = #{join_org_cnt}
		, COMMISSIONER_CNT = #{commissioner_cnt}
		, MAJOR_EMP_NAME = #{major_emp_name}
		, MAJOR_EMP_SEQ = #{major_emp_seq}
		, STEP = #{step}
		, MAJOR_DEPT = #{major_dept}
		, MAJOR_DEPT_SEQ = #{major_dept_seq}
		, BIZ_TYPE_ARRAY = #{biz_type_array}
		, BIZ_TYPE_CODE_ID = #{biz_type_code_id}
		
		, OPR_EMP_NAME_1 = #{opr_emp_name_1}
		, OPR_EMP_SEQ_1 = #{opr_emp_seq_1}
		, OPR_DEPT_1 = #{opr_dept_1}
		, OPR_DEPT_SEQ_1 = #{opr_dept_seq_1}
		
		, OPR_EMP_NAME_2 = #{opr_emp_name_2}
		, OPR_EMP_SEQ_2 = #{opr_emp_seq_2}
		, OPR_DEPT_2 = #{opr_dept_2}
		, OPR_DEPT_SEQ_2 = #{opr_dept_seq_2}
		
		, OPR_EMP_NAME_3 = #{opr_emp_name_3}
		, OPR_EMP_SEQ_3 = #{opr_emp_seq_3}
		, OPR_DEPT_3 = #{opr_dept_3}
		, OPR_DEPT_SEQ_3 = #{opr_dept_seq_3}
		
		, OPR_EMP_NAME_4 = #{opr_emp_name_4}
		, OPR_EMP_SEQ_4 = #{opr_emp_seq_4}
		, OPR_DEPT_4 = #{opr_dept_4}
		, OPR_DEPT_SEQ_4 = #{opr_dept_seq_4}
		
		, OPR_EMP_NAME_5 = #{opr_emp_name_5}
		, OPR_EMP_SEQ_5 = #{opr_emp_seq_5}
		, OPR_DEPT_5 = #{opr_dept_5}
		, OPR_DEPT_SEQ_5 = #{opr_dept_seq_5}
		
		, OPR_EMP_NAME_6 = #{opr_emp_name_6}
		, OPR_EMP_SEQ_6 = #{opr_emp_seq_6}
		, OPR_DEPT_6 = #{opr_dept_6}
		, OPR_DEPT_SEQ_6 = #{opr_dept_seq_6}
		
		, OPR_EMP_NAME_7 = #{opr_emp_name_7}
		, OPR_EMP_SEQ_7 = #{opr_emp_seq_7}
		, OPR_DEPT_7 = #{opr_dept_7}
		, OPR_DEPT_SEQ_7 = #{opr_dept_seq_7}
		
		, JOIN_SELECT_TYPE = #{join_select_type}
		
		, RATES = #{rates}
		, PURC_REQ_ID = #{purc_req_id}
		
		, PROJECT_PM = #{project_pm}
		, DEVIATION = #{deviation}
        , EVAL_CM = REPLACE(#{evalCm}, ',' , '')
		WHERE COMMITTEE_SEQ = #{committee_seq}
	</update>
	
	<select id="getcommItem" parameterType="map" resultType="map">
	/*getcommItem*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_COMMITTEE_ITEM WHERE COMMITTEE_SEQ = #{code} AND ACTIVE = 'Y'
	</select>
	
	<insert id="setEvalItemResult" parameterType="map">
	/*setEvalItemResult*/
		INSERT INTO CUST_EPIS.DJ_EVAL_ITEM_RESULT(
		ITEM_SEQ
		, EVAL_COMPANY_SEQ
		, COMMISSIONER_SEQ
		, ACTIVE
		)
		SELECT 
		B.ITEM_SEQ
		, C.EVAL_COMPANY_SEQ
		, #{commissioner_seq}
		, 'Y'
		FROM CUST_EPIS.DJ_EVAL_COMMITTEE A
		JOIN CUST_EPIS.DJ_EVAL_COMMITTEE_ITEM B
		ON A.COMMITTEE_SEQ = B.COMMITTEE_SEQ
		AND A.COMMITTEE_SEQ = #{committee_seq}
		AND A.ACTIVE = 'Y'
		AND B.ACTIVE = 'Y'
		JOIN CUST_EPIS.DJ_EVAL_COMPANY C
		ON A.COMMITTEE_SEQ = C.COMMITTEE_SEQ
	</insert>
	
	<update id="setEmptyEvalItemResult" parameterType="map">
	/*setEmptyEvalItemResult*/
		UPDATE CUST_EPIS.DJ_EVAL_ITEM_RESULT SET ACTIVE = 'N'
		WHERE EVAL_COMPANY_SEQ IN (SELECT EVAL_COMPANY_SEQ FROM CUST_EPIS.DJ_EVAL_COMPANY WHERE COMMITTEE_SEQ = #{committee_seq})
		AND COMMISSIONER_SEQ IN (SELECT COMMISSIONER_SEQ FROM CUST_EPIS.DJ_EVAL_COMMISSIONER WHERE COMMITTEE_SEQ = #{committee_seq} AND CREATE_DEPTH = #{tabNum})
	</update>

	<select id="getEvalUserIdChk" parameterType="map" resultType="map">
	/*getEvalUserIdChk*/
		SELECT EVAL_USER_ID FROM CUST_EPIS.DJ_EVAL_ID WHERE EVAL_USER_ID = #{eval_user_id}
	</select>
	
	<insert id="setEvalCompanyRemark" parameterType="map">
	/*setEvalCompanyRemark*/
		INSERT INTO CUST_EPIS.DJ_EVAL_COMPANY_REMARK(
		EVAL_COMPANY_SEQ
		, COMMISSIONER_SEQ
		, ACTIVE
		)
		SELECT 
		EVAL_COMPANY_SEQ 
		, #{commissioner_seq}
		, 'Y'
		FROM CUST_EPIS.DJ_EVAL_COMPANY
		WHERE COMMITTEE_SEQ = #{committee_seq}
	</insert>
	
	<update id="setEmptyEvalCompanyRemark" parameterType="map">
	/*setEmptyEvalCompanyRemark*/
		UPDATE CUST_EPIS.DJ_EVAL_COMPANY_REMARK SET
		ACTIVE = 'N'
		WHERE EVAL_COMPANY_SEQ IN (SELECT EVAL_COMPANY_SEQ FROM CUST_EPIS.DJ_EVAL_COMPANY WHERE COMMITTEE_SEQ = #{committee_seq})
		AND COMMISSIONER_SEQ IN (SELECT COMMISSIONER_SEQ FROM CUST_EPIS.DJ_EVAL_COMMISSIONER WHERE COMMITTEE_SEQ = #{committee_seq} AND CREATE_DEPTH = #{tabNum})
	</update>
	
	<select id="getEvalCompany" parameterType="map" resultType="map">
	/*getEvalCompany*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_COMPANY WHERE COMMITTEE_SEQ = #{code}
	</select>

	<select id="getEvalitem" parameterType="map" resultType="map">
	/*getEvalitem*/
		SELECT A.*, B.ITEM_NAME FROM CUST_EPIS.DJ_EVAL_COMMITTEE_ITEM A
		JOIN CUST_EPIS.DJ_EVAL_ITEM B
		ON A.EVAL_ITEM_SEQ = B.EVAL_ITEM_SEQ
		AND A.COMMITTEE_SEQ = #{code}
		AND A.ACTIVE = 'Y' 
	</select>
	
	<select id="getEvaCommList" parameterType="map" resultType="map">
	/*getEvaCommList*/
		SELECT 
		* 
		, DATE_FORMAT(EVAL_S_DATE, '%Y') AS YYYY
		FROM CUST_EPIS.DJ_EVAL_COMMITTEE
		WHERE ACTIVE = 'Y'
		<if test="major_emp_name != ''">
			AND MAJOR_EMP_NAME LIKE CONCAT('%', #{search_major_emp_name} ,'%')
		</if>
		
		<if test="search_biz_type_array != ''">
			AND BIZ_TYPE_ARRAY LIKE CONCAT('%', #{search_biz_type_array} ,'%')
		</if>
		
		<if test="search_title != ''">
			AND TITLE LIKE CONCAT('%', #{search_title} ,'%')
		</if>
		
		<if test="search_YYYY != ''">
			AND DATE_FORMAT(EVAL_S_DATE, '%Y') = #{search_YYYY}
		</if>
	</select>
	
	<select id="getItemColList" parameterType="map" resultType="map">
	/*getItemColList*/
		SELECT * FROM CUST_EPIS.DJ_EVAL_COMMITTEE_ITEM WHERE COMMITTEE_SEQ = #{COMMITTEE_SEQ} AND ACTIVE = 'Y'
	</select>
	
	<select id="getEvalResultList" parameterType="map" resultType="map">
	/*getEvalResultList*/
		SELECT 
		B.*
		, D.NAME
		, C.EVAL_SAVE
		, C.CONTACT
		<foreach collection="colList" item="col">
			, IFNULL(MAX(CASE WHEN B.ITEM_SEQ = #{col.item_seq} THEN B.SCORE END), 0) AS ITME_SCORE_#{col.item_seq}
			, MAX(CASE WHEN B.ITEM_SEQ = #{col.item_seq} THEN B.RANK_CODE END) AS RANK_CODE_#{col.item_seq}
		</foreach>
		FROM CUST_EPIS.DJ_EVAL_COMPANY A
		JOIN CUST_EPIS.DJ_EVAL_ITEM_RESULT B
		ON A.EVAL_COMPANY_SEQ = B.EVAL_COMPANY_SEQ
		AND A.COMMITTEE_SEQ = #{COMMITTEE_SEQ}
		AND A.EVAL_COMPANY_SEQ = #{EVAL_COMPANY_SEQ}
		AND B.ACTIVE = 'Y'
		JOIN CUST_EPIS.DJ_EVAL_COMMISSIONER C
		ON B.COMMISSIONER_SEQ = C.COMMISSIONER_SEQ
		AND C.ACTIVE = 'Y'
		AND C.CONFIRM_YN = 'Y'
		JOIN CUST_EPIS.DJ_COMMISSIONER_POOL D
		ON C.COMMISSIONER_POOL_SEQ = D.COMMISSIONER_POOL_SEQ
		AND D.ACTIVE = 'Y'
		GROUP BY B.COMMISSIONER_SEQ
	</select>

	<select id="getEvalResultTotal" parameterType="map" resultType="map">
	/*getEvalResultTotal*/
		SELECT 
		T.EVAL_COMPANY_SEQ
		, #{userCnt} AS USER_CNT
		<foreach collection="colList" item="col">
			, IFNULL(MAX(CASE WHEN T.ITEM_SEQ = #{col.item_seq} THEN T.TOTAL / #{userCntTotal} END), 0) AS ITME_SCORE_#{col.item_seq}
		</foreach>
		FROM 
		(SELECT 
		A.EVAL_COMPANY_SEQ
		, B.ITEM_SEQ
		<choose>
			<when test="userCnt &gt; 4">
				,SUM(SCORE) - MAX(SCORE) - MIN(SCORE) TOTAL
			</when>
			<otherwise>
                ,SUM(SCORE) TOTAL
            </otherwise>
		</choose>

        FROM CUST_EPIS.DJ_EVAL_COMPANY A
		JOIN CUST_EPIS.DJ_EVAL_ITEM_RESULT B
		ON A.EVAL_COMPANY_SEQ = B.EVAL_COMPANY_SEQ
		AND A.COMMITTEE_SEQ = #{COMMITTEE_SEQ}
		AND A.EVAL_COMPANY_SEQ = #{EVAL_COMPANY_SEQ}
		AND B.ACTIVE = 'Y'
		
<!--		<if test="userCnt &gt; 5">-->
<!--			AND B.RANK_CODE = 'Y'-->
<!--		</if>-->
		
		JOIN CUST_EPIS.DJ_EVAL_COMMISSIONER C
		ON B.COMMISSIONER_SEQ = C.COMMISSIONER_SEQ
        AND C.EVAL_SAVE = 'Y'
		AND C.ACTIVE = 'Y'
        AND C.ATTEND_YN = 'Y'
		AND C.CONFIRM_YN = 'Y'
		AND C.CONTACT = 'N'
        AND C.EVAL_AVOID = "N"
		JOIN CUST_EPIS.DJ_COMMISSIONER_POOL D
		ON C.COMMISSIONER_POOL_SEQ = D.COMMISSIONER_POOL_SEQ
		AND D.ACTIVE = 'Y'
		GROUP BY B.ITEM_SEQ ) T
	</select>
	
	<select id="evalCompanyListSearch" parameterType="map" resultType="map">
	/*evalCompanyListSearch*/
		SELECT * 
		, 'B' AS company_type
		FROM CUST_EPIS.DJ_COMPANY WHERE ACTIVE = 'Y'
		
		<if test="search_title != ''">
			AND TITLE LIKE CONCAT('%', #{search_title}, '%')
		</if>

		<if test="search_biz_reg_no != ''">
			AND BIZ_REG_NO LIKE CONCAT('%', #{search_biz_reg_no}, '%')
		</if>
		
		<if test="pageType != 'all'">
			LIMIT ${skip} , ${pageSize}
		</if>
	</select>

	<select id="evalCompanyListSearchTotal" parameterType="map" resultType="int">
	/*evalCompanyListSearchTotal*/
		SELECT COUNT(1) FROM CUST_EPIS.DJ_COMPANY WHERE ACTIVE = 'Y'
		<if test="search_title != ''">
			AND TITLE LIKE CONCAT('%', #{search_title}, '%')
		</if>

		<if test="search_biz_reg_no != ''">
			AND BIZ_REG_NO LIKE CONCAT('%', #{search_biz_reg_no}, '%')
		</if>
	</select>
	
	<insert id="evalCompanySave" parameterType="map">
	/*evalCompanySave*/
		INSERT INTO CUST_EPIS.DJ_COMPANY(
		TITLE
		, BIZ_REG_NO
		, SOCIAL_COMPANY_YN	
		, UNION_YN
		, WOMEN_COMPANY_YN
		, HANDICAP_COMPANY_YN
		, HANDICAP_FACILITY_YN
		, MERIT_USE_YN
		, NEW_COMPANY_YN
		, VENTURE_COMPANY_YN
		, ACTIVE
		, CREATE_EMP_SEQ
		, CREATE_DATE
		)VALUES(
		#{title}
		, #{biz_reg_no}
		, #{social_company_yn}
		, #{union_yn}
		, #{women_company_yn}
		, #{handicap_company_yn}
		, #{handicap_facility_yn}
		, #{merit_use_yn}
		, #{new_company_yn}
		, #{venture_company_yn}
		, 'Y'
		, #{emp_seq}
		, NOW()
		)
	</insert>

	<update id="evalCompanyUpdate" parameterType="map">
	/*evalCompanyUpdate*/
		UPDATE CUST_EPIS.DJ_COMPANY SET
		TITLE = #{title}
		, BIZ_REG_NO = #{biz_reg_no}
		, SOCIAL_COMPANY_YN	= #{social_company_yn}
		, UNION_YN = #{union_yn}
		, WOMEN_COMPANY_YN = #{women_company_yn}
		, HANDICAP_COMPANY_YN = #{handicap_company_yn}
		, HANDICAP_FACILITY_YN = #{handicap_facility_yn}
		, MERIT_USE_YN = #{merit_use_yn}
		, NEW_COMPANY_YN = #{new_company_yn}
		, VENTURE_COMPANY_YN = #{venture_company_yn}
		WHERE COMPANY_SEQ = #{company_seq}
	</update>

	<update id="evalCompanyDel" parameterType="map">
	/*evalCompanyUpdate*/
		UPDATE CUST_EPIS.DJ_COMPANY SET
		ACTIVE = 'N'
		WHERE COMPANY_SEQ = #{company_seq}
	</update>

	<update id="evalCommFix" parameterType="map">
	/*evalCommFix*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMISSIONER SET
		CONFIRM_YN = 'Y'
		, ATTEND_YN = 'Y'
		WHERE COMMISSIONER_SEQ IN (${commissioner_seq})
	</update>

	<update id="evalCommFixUpdate" parameterType="map">
	/*evalCommFixUpdate*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMISSIONER SET
		CONFIRM_YN = 'N'
		, ATTEND_YN = 'N'
		WHERE COMMITTEE_SEQ = #{committee_seq}
		AND ATTEND_YN = 'Y'
	</update>
	
	<update id="evalTransPaySave" parameterType="map">
	/*evalTransPaySave*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMISSIONER SET
		TRANS_PAY = REPLACE(#{trans_pay}, ',', '')
		, EVAL_PAY = REPLACE(#{eval_pay}, ',', '')
		, START_STATION = #{start_station}
		WHERE COMMISSIONER_SEQ = #{commissioner_seq}
	</update>
	
	<insert id="setBizTypeCodeInsert" parameterType="evalVO">
	/*setBizTypeCodeInsert*/
		INSERT INTO CUST_EPIS.DJ_COMMISSIONER_BIZ_TYPE(
		COMMISSIONER_POOL_SEQ
		, BIZ_TYPE_ARRAY
		, BIZ_TYPE_CODE_ID
		, ACTIVE
		, CREATE_DATE
		, CREATE_EMP_SEQ
		)VALUES(
		#{commissioner_pool_seq}
		, (SELECT CODE_KR FROM CUST_EPIS.COMMON_CODE WHERE GROUP_CODE = 'EVAL_BIZ_TYPE' AND ACTIVE = 'Y' AND CODE = #{biz_type_code_id})
		, #{biz_type_code_id}
		, 'Y'
		, NOW()
		, #{create_emp_seq}
		)
	</insert>
	
	<select id="getCommitteeBizTypeList" parameterType="map" resultType="map">
	/*getCommitteeBizTypeList*/
		SELECT * FROM CUST_EPIS.DJ_COMMISSIONER_BIZ_TYPE WHERE COMMISSIONER_POOL_SEQ = #{code} AND ACTIVE = 'Y'
	</select>
	
	<update id="setCommissionerBizTypeDel" parameterType="evalVO">
	/*setCommissionerBizTypeDel*/
		UPDATE CUST_EPIS.DJ_COMMISSIONER_BIZ_TYPE SET ACTIVE = 'N' WHERE COMMISSIONER_POOL_SEQ = #{commissioner_pool_seq}
	</update>
	
	<select id="purcListSearch" parameterType="map" resultType="map">
	/*purcListSearch*/
		SELECT * FROM CUST_EPIS.DJ_PURC_REQ WHERE ACTIVE = 'Y' AND REQ_STATE IN (141, 151)
	</select>
	
	<select id="getPurcBiddingList" parameterType="map" resultType="map">
	/*getPurcBiddingList*/
		SELECT * FROM CUST_EPIS.DJ_PURC_REQ_BIDDING_T WHERE PURC_REQ_ID = #{code};
	</select>
	
	<update id="regStateUpdate" parameterType="committeeVO">
	/*regStateUpdate*/
		UPDATE CUST_EPIS.DJ_PURC_REQ SET REQ_STATE = #{req_state} WHERE PURC_REQ_ID = #{purc_req_id}
	</update>	
	
	<update id="evalCommCancel" parameterType="map">
	/*evalCommCancel*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMISSIONER SET
		ATTEND_YN = 'N'
		, CANCEL_TXT = #{cancel_txt}
		,  EVAL_ID_SEQ = NULL
		WHERE COMMISSIONER_SEQ = #{commissioner_seq}
	</update>
	
	<update id="setDjPurcReqDel" parameterType="map">
	/*setDjPurcReqDel*/
		UPDATE CUST_EPIS.DJ_PURC_REQ SET
		REQ_STATE = CASE WHEN REQ_STATE = 142 THEN 141
						 WHEN REQ_STATE = 152 THEN 151 END
		WHERE PURC_REQ_ID = #{purc_req_id}
	</update>

	<select id="evalAnListSearch" parameterType="map" resultType="map">
	/*evalAnListSearch*/
		SELECT 
		A.*
        , B.commissioner_seq
        , FORMAT( B.EVAL_PAY, 0) AS eval_pay
		, FORMAT( B.TRANS_PAY, 0) AS trans_pay
		, C.name 
        , D.org_name
        , D.org_dept
        , B.EVAL_AN_STATUS
        , CASE WHEN B.EVAL_AN_STATUS = 10 THEN '임시저장'
          WHEN B.EVAL_AN_STATUS = 20 THEN '상신'
          WHEN B.EVAL_AN_STATUS = 100 THEN '반려'
          WHEN B.EVAL_AN_STATUS = 999 THEN '삭제'
          WHEN B.EVAL_AN_STATUS = 90 THEN '종결'
          ELSE '' END eval_an_status_txt
		FROM CUST_EPIS.DJ_EVAL_COMMITTEE A
		JOIN CUST_EPIS.DJ_EVAL_COMMISSIONER B
		ON A.COMMITTEE_SEQ = B.COMMITTEE_SEQ
		AND A.ACTIVE = 'Y'
		
		<if test="search1 != ''">
		AND A.TITLE LIKE CONCAT('%',#{search1} ,'%')
		</if>
		
		AND B.ACTIVE = 'Y'
		AND B.CONFIRM_YN = 'Y'
		AND B.ATTEND_YN = 'Y'
		AND A.JANG_CONFIRM_YN = 'Y'
		JOIN CUST_EPIS.DJ_COMMISSIONER_POOL C
		ON B.COMMISSIONER_POOL_SEQ = C.COMMISSIONER_POOL_SEQ
		AND C.ACTIVE = 'Y'
		
		<if test="search2 != ''">
		AND C.NAME LIKE CONCAT('%', #{search2} ,'%')
		</if>
		
        JOIN CUST_EPIS.DJ_COMMISSIONER_DETAIL D
        ON C.COMMISSIONER_POOL_SEQ = D.COMMISSIONER_POOL_SEQ
        ORDER BY A.COMMITTEE_SEQ DESC
		LIMIT ${skip} , ${pageSize}
	</select>
	
	<select id="evalAnListSearchTotal" parameterType="map" resultType="int">
	/*evalAnListSearchTotal*/
		SELECT 
		COUNT(1)
		FROM CUST_EPIS.DJ_EVAL_COMMITTEE A
		JOIN CUST_EPIS.DJ_EVAL_COMMISSIONER B
		ON A.COMMITTEE_SEQ = B.COMMITTEE_SEQ
		AND A.ACTIVE = 'Y'
		
		<if test="search1 != ''">
		AND A.TITLE LIKE CONCAT('%',#{search1} ,'%')
		</if>
		
		AND B.ACTIVE = 'Y'
		AND B.CONFIRM_YN = 'Y'
		AND B.ATTEND_YN = 'Y'
		AND A.JANG_CONFIRM_YN = 'Y'
		JOIN CUST_EPIS.DJ_COMMISSIONER_POOL C
		ON B.COMMISSIONER_POOL_SEQ = C.COMMISSIONER_POOL_SEQ
		AND C.ACTIVE = 'Y'
		<if test="search2 != ''">
		AND C.NAME LIKE CONCAT('%', #{search2} ,'%')
		</if>
	</select>
	
	<insert id="setEvalAnInsert" parameterType="map" useGeneratedKeys="true" keyProperty="eval_an_no">
	/*setEvalAnInsert*/
		INSERT INTO CUST_EPIS.DJ_EVAL_AN_INFO(
		ERP_MGT_NAME
		, ERP_MGT_CODE
		, ERP_BUDGET_NAME
		, ERP_BUDGET_CODE
		, RES_DATE
		, RES_NOTE

		, BGT01_CD
		, BGT01_NM
		, BGT02_CD
		, BGT02_NM
		, BGT03_CD
		, BGT03_NM
		
		, FILE_KEY
		
		)VALUES(
		#{erp_mgt_name}
		, #{erp_mgt_code}
		, #{erp_budget_name}
		, #{erp_budget_code}
		, #{res_date}
		, #{res_note}
		, #{BGT01_CD}
		, #{BGT01_NM}
		, #{BGT02_CD}
		, #{BGT02_NM}
		, #{BGT03_CD}
		, #{BGT03_NM}
		, #{fileKey}
		)
	</insert>
	
	<update id="setEvalAnUpdate" parameterType="map">
	/*setEvalAnUpdate*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMISSIONER SET
		EVAL_AN_NO = #{eval_an_no}
		WHERE COMMISSIONER_SEQ IN (${commissioner_seq})
	</update>
	
	<select id="getCommissionerAnUserList" parameterType="map" resultType="map">
	/*getCommissionerAnUserList*/
		SELECT 
		A.*
		, B.name
		, B.birth_date 
		FROM CUST_EPIS.DJ_EVAL_COMMISSIONER A
		JOIN CUST_EPIS.DJ_COMMISSIONER_POOL B
		ON A.COMMISSIONER_POOL_SEQ = B.COMMISSIONER_POOL_SEQ
		AND A.EVAL_AN_NO = #{outProcessInterfaceMId}
		AND A.ACTIVE = 'Y'
		AND B.ACTIVE = 'Y'
	</select>
	
	<select id="getEvalAnData" parameterType="map" resultType="map">
	/*getEvalAnData*/
		SELECT 
		ERP_MGT_NAME AS erpMgtName
		, ERP_MGT_CODE AS erpMgtSeq
		, ERP_BUDGET_NAME AS erpBudgetName
		, ERP_BUDGET_CODE AS erpBudgetSeq
		, RES_DATE AS resDate
		, RES_NOTE AS resNote
		, BGT01_CD AS erpBgt1Seq
		, BGT01_NM AS erpBgt1Name
		, BGT02_CD AS erpBgt2Seq
		, BGT02_NM AS erpBgt2Name
		, BGT03_CD AS erpBgt3Seq
		, BGT03_NM AS erpBgt3Name
		, file_key
		FROM CUST_EPIS.DJ_EVAL_AN_INFO WHERE EVAL_AN_NO = #{outProcessInterfaceMId}
	</select>
	
	<select id="getCommissionerList" parameterType="map" resultType="map">
	/*getCommissionerList*/
		SELECT A.*, B.NAME FROM CUST_EPIS.DJ_EVAL_COMMISSIONER A
        JOIN CUST_EPIS.DJ_COMMISSIONER_POOL B
        ON A.COMMISSIONER_POOL_SEQ = B.COMMISSIONER_POOL_SEQ
        AND A.COMMITTEE_SEQ = #{COMMITTEE_SEQ}
        AND A.ACTIVE = 'Y'
        AND B.ACTIVE = 'Y'
        AND A.CONFIRM_YN = 'Y'
        AND A.ATTEND_YN = 'Y'
	</select>
	
	<select id="getEvalConfirmData" parameterType="map" resultType="map">
	/*getEvalConfirmData*/
		SELECT 
		T.*
		, #{userCnt} AS USER_CNT
		
		, SUM(T.SUM_SCORE) / #{userCntTotal} TOTAL_SUM
		
		<foreach collection="colList" item="col">
			, MAX(CASE WHEN T.ITEM_SEQ = #{col.item_seq} THEN T.SUM_SCORE / #{userCntTotal} END) AS ITME_SCORE_#{col.item_seq}
		</foreach>
		FROM (
		SELECT 
		A.EVAL_COMPANY_SEQ
		, A.DISPLAY_TITLE
		, C.SCORE
		, C.ITEM_NAME
		, C.ITEM_SEQ
        /*,SUM(B.SCORE) AS SUM_SCORE*/
        <choose>
			<when test="userCnt &gt; 4">
				,SUM(B.SCORE) - MAX(B.SCORE) - MIN(B.SCORE) SUM_SCORE
			</when>
			<otherwise>
                ,SUM(B.SCORE) AS SUM_SCORE
			</otherwise>
		</choose>
		FROM CUST_EPIS.DJ_EVAL_COMPANY A
		JOIN CUST_EPIS.DJ_EVAL_ITEM_RESULT B
		ON A.EVAL_COMPANY_SEQ = B.EVAL_COMPANY_SEQ
		AND A.COMMITTEE_SEQ = #{COMMITTEE_SEQ}
		AND B.ACTIVE = 'Y'
		
<!--		<if test="userCnt &gt; 5">-->
<!--			AND B.RANK_CODE = 'Y'-->
<!--		</if>-->
		
		JOIN CUST_EPIS.DJ_EVAL_COMMITTEE_ITEM C
		ON B.ITEM_SEQ = C.ITEM_SEQ
		AND C.ACTIVE = 'Y'
		JOIN CUST_EPIS.DJ_EVAL_COMMISSIONER D
		ON B.COMMISSIONER_SEQ = D.COMMISSIONER_SEQ
        AND D.EVAL_SAVE = 'Y'
        AND D.CONFIRM_YN = 'Y'
		AND D.CONTACT = 'N'
		AND D.ATTEND_YN = 'Y'
		AND D.EVAL_AVOID = 'N'
		GROUP BY A.EVAL_COMPANY_SEQ, C.ITEM_SEQ ) T
		GROUP BY T.EVAL_COMPANY_SEQ
	</select>
	
	<select id="getCommissionerAnUserListTemp" parameterType="map" resultType="map">
	/*getCommissionerAnUserListTemp*/
		SELECT 
		A.*
		, B.name
		, B.birth_date 
		, B.NAME AS DEPOSITOR
        , C.BANK_NO AS BA_NB
		, C.BANK_NAME AS BANK_NM
		, C.BANK_CD AS JIRO_CD
		FROM CUST_EPIS.DJ_EVAL_COMMISSIONER A
		JOIN CUST_EPIS.DJ_COMMISSIONER_POOL B
		ON A.COMMISSIONER_POOL_SEQ = B.COMMISSIONER_POOL_SEQ
		AND A.COMMISSIONER_SEQ IN (${commissioner_seq})
		AND A.ACTIVE = 'Y'
		AND B.ACTIVE = 'Y'
		JOIN CUST_EPIS.DJ_COMMISSIONER_DETAIL C
        ON B.COMMISSIONER_POOL_SEQ = C.COMMISSIONER_POOL_SEQ
	</select>
	
	<update id="evalAnOutProcess" parameterType="map">
	/*evalAnOutProcess*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMISSIONER SET
		EVAL_AN_STATUS = #{docSts}
		WHERE EVAL_AN_NO = #{outProcessInterfaceMId}
	</update>
	
	<select id="getEvalCommissionerList" parameterType="map" resultType="map">
	/*getEvalCommissionerList*/
		SELECT 
		A.*
		, B.NAME 
		, C.EVAL_DOC_NUM
		FROM CUST_EPIS.DJ_EVAL_COMMISSIONER A
		JOIN CUST_EPIS.DJ_COMMISSIONER_POOL B
		ON A.COMMISSIONER_POOL_SEQ = B.COMMISSIONER_POOL_SEQ
		AND A.COMMITTEE_SEQ = 86
		AND A.COMMISSIONER_SEQ IN (${commissioner_seq})
		AND B.ACTIVE = 'Y'
		AND A.ACTIVE = 'Y'
		JOIN CUST_EPIS.DJ_EVAL_COMMITTEE C
        ON A.COMMITTEE_SEQ = C.COMMITTEE_SEQ
	</select>
	
	<update id="evalCommissionerCntReSum" parameterType="map">
	/*evalCommissionerCntReSum*/
		UPDATE CUST_EPIS.DJ_EVAL_COMMITTEE
		SET COMMISSIONER_CNT = (SELECT COUNT(1) FROM CUST_EPIS.DJ_EVAL_COMMISSIONER WHERE COMMITTEE_SEQ = #{committee_seq})
		WHERE COMMITTEE_SEQ = #{committee_seq}
	</update>
	
	<select id="evalProposalModFileDownload" parameterType="map" resultType="map">
	/*evalProposalModFileDownload*/
	 	SELECT A.*
        , (SELECT TITLE FROM CUST_EPIS.DJ_EVAL_COMMITTEE WHERE COMMITTEE_SEQ = A.COMMITTEE_SEQ) TITLE
        , (SELECT NAME FROM CUST_EPIS.DJ_COMMISSIONER_POOL WHERE COMMISSIONER_POOL_SEQ = A.COMMISSIONER_POOL_SEQ) NAME
        FROM CUST_EPIS.DJ_EVAL_COMMISSIONER A
		where COMMISSIONER_SEQ = #{commissioner_seq} AND active = "Y"
	</select>
	
	<select id="evalProposalModFileDownload2" parameterType="map" resultType="map">
	/*evalProposalModFileDownload2*/
	 	SELECT A.*
        , (SELECT TITLE FROM CUST_EPIS.DJ_EVAL_COMMITTEE WHERE COMMITTEE_SEQ = A.COMMITTEE_SEQ) TITLE
        , (SELECT NAME FROM CUST_EPIS.DJ_COMMISSIONER_POOL WHERE COMMISSIONER_POOL_SEQ = A.COMMISSIONER_POOL_SEQ) NAME
        FROM CUST_EPIS.DJ_EVAL_COMMISSIONER A
		WHERE committee_seq = #{committee_seq} 
		AND active = "Y"
		AND eval_jang = "Y"
	</select>
	
	<insert id="insertCommissionerPoolExcel" parameterType="map" useGeneratedKeys="true" keyProperty="commissioner_pool_seq">
	/*insertCommissionerPoolExcel*/
		INSERT INTO CUST_EPIS.DJ_COMMISSIONER_POOL(
		NAME
		, BIRTH_DATE
		, CREATE_DATE
		, GENDER
		)values(
		#{eval_name}
		, #{birth_date}
		, NOW()
		, #{gender}
		)
	</insert>
	
	<insert id="insertCommissionerDetailExcel" parameterType="map">
	/*insertCommissionerDetailExcel*/
		INSERT INTO CUST_EPIS.DJ_COMMISSIONER_DETAIL(
		COMMISSIONER_POOL_SEQ
		, ZIP_CODE1
		, ZIP_CODE2
		, ADDR1
		, ADDR2
		, TEL
		, MOBILE
		, EMAIL
		, ORG_NAME
		, ORG_DEPT
		, ORG_GRADE
		, ORG_RANK
		, ORG_ZIP_CODE1
		, ORG_ZIP_CODE2
		, ORG_ADDR1
		, ORG_ADDR2
		, ORG_TEL
		, ORG_FAX
		, ORG_EMAIL
		, REMARK
		, BANK_NO
		, BANK_NAME
		, BANK_CD
		, JOB_TYPE
		)VALUES(
		#{commissioner_pool_seq}
		, #{zip_code1}
		, #{zip_code2}
		, #{addr1}
		, #{addr2}
		, #{tel}
		, #{mobile}
		, #{email}
		, #{org_name}
		, #{org_dept}
		, #{org_grade}
		, #{org_rank}
		, #{org_zip_code1}
		, #{org_zip_code2}
		, #{org_addr1}
		, #{org_addr2}
		, #{org_tel}
		, #{org_fax}
		, #{org_email}
		, #{remark}
		, #{bank_no}
		, #{bank_name}
		, #{bank_cd}
		, #{job_type}
		)
	</insert>
	
	<insert id="insertBizTypeCodeExcel" parameterType="list">
	/*insertBizTypeCodeExcel*/
		INSERT INTO CUST_EPIS.DJ_COMMISSIONER_BIZ_TYPE(
			COMMISSIONER_POOL_SEQ
			, BIZ_TYPE_ARRAY
			, BIZ_TYPE_CODE_ID
			, CREATE_DATE
			, ACTIVE
		)VALUES
		<foreach collection="list" item="item" separator=",">
		(
			#{item.commissioner_pool_seq}
			
			<choose>
				<when test="item.biz_type_array != null and item.biz_type_array != ''">
				, (SELECT CODE_KR
			        FROM cust_epis.COMMON_CODE
			        WHERE ACTIVE = 'Y'
			        AND CODE IS NOT NULL
			        AND CODE != ''
			        AND GROUP_CODE = 'EVAL_BIZ_TYPE'
			        AND REPLACE(REPLACE(trim(code_kr)," ",""), char(10), "") LIKE CONCAT('%', #{item.biz_type_array}, '%'))
			        , (SELECT CODE
			        FROM cust_epis.COMMON_CODE
			        WHERE ACTIVE = 'Y'
			        AND CODE IS NOT NULL
			        AND CODE != ''
			        AND GROUP_CODE = 'EVAL_BIZ_TYPE'
			        AND REPLACE(REPLACE(trim(code_kr)," ",""), char(10), "") LIKE CONCAT('%', #{item.biz_type_array}, '%'))	
				</when>
				<otherwise>
				, null
				, null
				</otherwise>
			</choose>
			, NOW()
			, 'Y'
		)
		</foreach>
	</insert>
	
	<select id="selectBirthDateYN" resultType="map" parameterType="map">
	/*selectBirthDateYN*/
		SELECT * FROM CUST_EPIS.DJ_COMMISSIONER_POOL WHERE ACTIVE = 'Y' AND BIRTH_DATE = #{birth_date}
	</select>
	
	<update id="updateCommissionerPoolExcel" parameterType="map">
	/*updateCommissionerPoolExcel*/
		UPDATE CUST_EPIS.DJ_COMMISSIONER_POOL SET
		NAME = #{eval_name}
		WHERE COMMISSIONER_POOL_SEQ = #{commissioner_pool_seq}
	</update>
	
	<update id="updateCommissionerDetailExcel" parameterType="map">
	/*setCommissionerDetailUpdate*/
		UPDATE CUST_EPIS.DJ_COMMISSIONER_DETAIL SET
		ZIP_CODE1 = #{zip_code1}
		, ADDR1 = #{addr1}
		, ADDR2 = #{addr2}
		, TEL = #{tel}
		, MOBILE = #{mobile}
		, EMAIL = #{email}
		, ORG_NAME = #{org_name}
		, ORG_GRADE = #{org_grade}
		, ORG_ZIP_CODE1 = #{org_zip_code1}
		, ORG_ADDR1 = #{org_addr1}
		, ORG_ADDR2 = #{org_addr2}
		, ORG_TEL = #{org_tel}
		, ORG_FAX = #{org_fax}
		, REMARK = #{remark}
		, THESIS = #{thesis}
		, BANK_NO = #{bank_no}
		, BANK_NAME = #{bank_name}
		, BANK_CD = #{bank_cd}
		, JOB_TYPE = #{job_type}
		WHERE COMMISSIONER_POOL_SEQ = #{commissioner_pool_seq}
	</update>
	
	<delete id="deleteBizTypeCodeExcel" parameterType="map">
		DELETE FROM CUST_EPIS.DJ_COMMISSIONER_BIZ_TYPE WHERE COMMISSIONER_POOL_SEQ = #{commissioner_pool_seq}
	</delete>

	<update id="setEvalDocInfoUpD" parameterType="map">
		/* setBustripDocInfoUpD */

		UPDATE
		CUST_EPIS.dj_eval_committee
		SET
		STATUS = #{approveStatCode},
		DOC_STS = #{approveStatCode},
		DOC_CONTENT = #{docContent}
		WHERE
		committee_seq = #{evalReqId}
	</update>

	<update id="setEvalChangeDocApproveUp" parameterType="map">
		/* setEvalChangeDocApproveUp */

		UPDATE
		CUST_EPIS.dj_eval_committee
		SET
		<if test='approveStatCodeDesc != null and "최종결재".equals(approveStatCodeDesc)'>
			APPROVAL_EMP_SEQ = #{approveEmpSeq},
			APPROVAL_DATE = NOW(),
			STEP = 'K',
		</if>
		STATUS = #{approveStatCode},
		DOC_STS = #{approveStatCode}
		WHERE
		committee_seq = #{id}
	</update>

	<update id="setEvalDocApproveRetrieve" parameterType="map">
		/* setEvalDocApproveRetrieve */

		UPDATE
			CUST_EPIS.dj_eval_committee
		SET
			STATUS = #{approveStatCode},
			DOC_STS = #{approveStatCode},
			MOD_EMP_SEQ = #{empSeq},
			MOD_DATE = NOW()
		WHERE
			committee_seq = #{evalReqId}
	</update>

	<select id="getEvalCommOne" parameterType="map" resultType="map">
		/*getEvalCommTypeList*/
		SELECT * FROM CUST_EPIS.dj_eval_committee WHERE committee_seq = #{id} AND ACTIVE = 'Y'
	</select>

	<select id="getJangName" parameterType="map" resultType="map">
		/*getJangName*/

		SELECT
			EMP_NAME as EMP_NAME_KR
		FROM
			NEOS.V_USER_INFO
		WHERE
			DEPT_SEQ = #{loginVO.dept_seq}
		ORDER BY POSITION_CODE ASC
		LIMIT 1;
	</select>

</mapper>    