<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="resalphag20_Ms">

	<select id="selectETaxDetailInfo" parameterType="map" resultType="map">
	/* exoebd/np/user/resalphag20_Ms_SQL.xml -  selectETaxDetailInfo */
		SELECT	
			etax.ISS_NO				AS 'authNum'
			
			, isnull(etax.TRREG_NB,'')		AS 'lSaupNum'
			, isnull(etax.TR_NM,'')		AS 'lTrName'
			, isnull(etax.TRCEO_NM,'')			AS 'lCeoName'
			, isnull(ltrade.DIV_ADDR1,'')		AS 'lDivAddr'
			, isnull(ltrade.ADDR2,'')			AS 'lDivAddr2'
			, isnull(ltrade.BUSINESS,'')		AS 'lBusinessType'
			, isnull(ltrade.JONGMOK,'')	AS 'lJongmokName'
			, isnull(etax.TRSUB_NB,'')			AS 'lJongmokNum'
			, isnull(ltrade.DEPOSIT_NM,'')		AS 'lDeptName'
			, isnull(ltrade.TEL,'')			AS 'lTell'
			, ''					AS 'lEmpName'
			, ''					AS 'lCellPhone'
			, isnull(etax.EMAIL_DC,'')			AS 'lEmail'
		
			, isnull(etax.DIVREG_NB,'')		AS 'rSaupNum'
			, isnull(etax.DIV_NM,'')			AS 'rTrName'
			, isnull(etax.DIVCEO_NM,'')		AS 'rCeoName'
			, isnull(rtrade.DIV_ADDR,'')		AS 'rDivAddr'
			, isnull(rtrade.DIV_ADDR1,'')		AS 'rDivAddr2'
			, isnull(rtrade.BUSINESS,'')		AS 'rBusinessType'
			, isnull(rtrade.JONGMOK,'')	AS 'rJongmokName'
			, isnull(etax.DIVSUB_NB,'')		AS 'rJongmokNum'
			, isnull(rtrade.DIV_NM,'')			AS 'rDeptName'
			, isnull(rtrade.DIV_TEL,'')		AS 'rTell'
			, ''					AS 'rEmpName'
			, ''					AS 'rCellPhone'
			, isnull(etax.TRCHARGE_EMAIL,'')	AS 'rEmail'
		
			, isnull(etax.ISS_DT,'')			AS 'issDate'
			, FLOOR(isnull(etax.SUP_AM,0))			AS 'stdAmt'
			, FLOOR(isnull(etax.VAT_AM,0))			AS 'vatAmt'
			, isnull(etax.ITEM_DC,'') 			AS 'mainItemDc'
		
			, isnull(item.ITEM_DT,'')			AS 'itemDate'
			, isnull(item.ITEM_NM,'')			AS 'itemName'
			, isnull(item.ITEM_DC,'')			AS 'itemStendard'
			, FLOOR(isnull(item.ITEM_QT,0))			AS 'itemCnt'
			, FLOOR(isnull(item.ITEM_UM,0))			AS 'itemUnitAmt'
			, FLOOR(isnull(item.SUP_AM,0))			AS 'itemStdAmt'
			, FLOOR(isnull(item.VAT_AM,0))			AS 'itemVatAmt'
			, isnull(item.RMK_DC,'')			AS 'itemNote'
				
			, FLOOR(isnull(etax.SUM_AM,0))			AS 'amt'
			, isnull(etax.DUMMY1,'')			AS 'dummy1'
			, isnull(etax.DUMMY2,'')			AS 'dummy2'
			
			, isnull(etax.TAX_TY,'')			AS 'taxTy'
		FROM	ETAXUP	etax						/* 전자 세금계산서 정보 */
		 LEFT JOIN	ZA_TRADE_DAIKIN ltrade			/* 공급자 정보 */
		 ON		etax.CO_CD = ltrade.CO_CD
		  AND	etax.TR_CD = ltrade.TR_CD
		 LEFT JOIN	ZA_DIV_DAIKIN	rtrade			/* 공급받는자 정보 */
		 ON		etax.CO_CD = rtrade.CO_CD
		  AND	etax.DIV_CD	= rtrade.DIV_CD
		 LEFT JOIN	ETAXUP_ITEM item				/* 품목 항목 정보 */
		 ON		etax.ISS_NO = item.ISS_NO
		WHERE	etax.ISS_NO	= #{iss_no}
	</select>
	
	<select id="resalphag20_Ms.getTaxTy" parameterType="Map" resultType="String">
		/*resalphag20_Ms.getTaxTy*/
		select TAX_TY from etaxup
		where iss_no = #{iss_no}
	</select>
	
	<select id="resalphag20_Ms.getCardInfoG20" parameterType="map" statementType="CALLABLE">
		EXEC 	HIS_GET_CARD_INFO
			@V_IN_CARD_NO  = #{CARD_NUM},
			@V_OUT_BANK_CD = #{BANK_CD, mode = OUT, jdbcType=VARCHAR },
			@V_OUT_BANK_NM = #{BANK_NM, mode = OUT, jdbcType=VARCHAR },
			@V_OUT_ACCT_NO = #{ACCT_NO, mode = OUT, jdbcType=VARCHAR }
	</select>
	
	<select id="resalphag20_Ms.getUnRegisteredSaupList" parameterType="map" resultType="map">
	select * from
	(
		select CHAIN_NAME, CHAIN_REGNB,
		(
			select count(reg_nb) as cnt from strade b
			where b.co_cd = 5000
			and a.CHAIN_REGNB = b.REG_NB
			group by REG_NB, CHAIN_NAME
		) AS cnt2
		from acard_sungin a
		where iss_dt between #{fromDate} and #{toDate} and co_cd = #{CO_CD}
		group by CHAIN_REGNB, CHAIN_NAME
	) AA where AA.cnt2 is null
	</select>
	
	<select id="resalphag20_Ms.selectErpTradeInfo" parameterType="java.util.Map" resultType="java.util.Map">
		/*resalphag20_Ms.selectErpTradeInfo*/
		select top 1 * from strade where reg_nb = #{mercSaupNo} and CO_CD = #{CO_CD} order by INSERT_DT DESC
	</select>
	
	<select id="resalphag20_Ms.selectTradeAddrInfo" parameterType="map" resultType="map">
		/* resalphag20_Ms.selectTradeAddrInfo */
		select top 1 * from CCM_APPR
			WHERE CHAIN_ID = #{mercSaupNo} AND CHAIN_ADDR1 is not null order by APPR_DATE desc
	</select>

	<select id="resalphag20_Ms.selectTradeAddrInfo2" parameterType="map" resultType="map">
		/* resalphag20_Ms.selectTradeAddrInfo2 */
		select * from CCM_APPR
			WHERE APPR_DATE BETWEEN #{cardAuthDateFrom} AND #{cardAuthDateTo}
		<if test="authNumLength != null and authNumLength != ''">
			AND LEN(APPR_NO) = #{authNumLength}
		</if>
		  AND CHAIN_ADDR1 is not null order by APPR_DATE desc
	</select>
	
	<select id="resalphag20_Ms.selectCardSeunginTrList" parameterType="map" resultType="map">
		/* resalphag20_Ms.selectCardSeunginTrList */
		SELECT CHAIN_ID, CHAIN_NM, MAX(APPR_DATE) AS AD, CHAIN_ADDR1, CHAIN_ADDR2, CHAIN_TEL, CHAIN_CEO FROM CCM_APPR
		WHERE APPR_DATE BETWEEN #{fromDate} and #{toDate}
			and CANCEL_YN = 'N' and CHAIN_ID != '' 
			group by CHAIN_ID, CHAIN_NM, CHAIN_ADDR1, CHAIN_ADDR2, CHAIN_TEL, CHAIN_CEO
	</select>
	
	<select id="resalphag20_Ms.checkUnRegister" parameterType="map" resultType="String">
		/* resalphag20_Ms.checkUnRegister */
		SELECT top 1 count(*) as cnt
		 FROM STRADE
		  WHERE CO_CD = #{CO_CD} and REG_NB is not null and REG_NB != '' and REG_NB = #{CHAIN_ID}
	</select>
	
	<select id="resalphag20_Ms.selectCardSeunginList" parameterType="map" resultType="map">
		/* resalphag20_Ms.selectCardSeunginList */
		SELECT *
		 FROM CCM_APPR
		  WHERE CANCEL_YN = 'N' AND CHAIN_ID != '' AND CHAIN_ID = #{params}
	</select>
	
	<select id="resalphag20_Ms.selectAdocuListByFillDt" parameterType="map" resultType="map">
		/* resalphag20_Ms.selectAdocuListByFillDt */
		select DISTINCT 'DJADOCUEA_' + ISU_DT + '_' + CONVERT(NVARCHAR(10),ISU_SQ) AS docx_numb
				,FILL_DT as fill_dt
				,FILL_NB as fill_nb
			from adocud
			where fill_dt = #{fill_dt} order by fill_dt, fill_nb
	</select>
	
	<select id="resalphag20_Ms.getMoniteringEtaxList" parameterType="map" resultType="map">
		/*resalphag20_Ms.getMoniteringEtaxList*/
		SELECT *
			FROM ETAXUP
			WHERE ISS_DT BETWEEN #{fromDate} AND #{toDate}
			<if test="trName != null and !trName.equals('')">
			AND tr_nm like '%' + #{trName} + '%'
			</if>
			<if test="issNo != null and !issNo.equals('')">
			AND iss_no like '%' + #{issNo} + '%'
			</if>
			<if test="trRegNb != null and !trRegNb.equals('')">
			AND trreg_no like '%' + #{trRegNb} + '%'
			</if>
			ORDER BY ISS_DT DESC
	</select>
	
	<select id="resalphag20_Ms.getAdocuTradeList" parameterType="map" resultType="map">
	/* resalphag20_Ms.getAdocuTradeList */
	
	select 
			A.CO_CD
			,A.ISU_DT
			,A.ISU_SQ
			,A.LN_SQ
			,A.TR_CD
			,A.TR_NM
			,A.CEO_NM
			,A.UNIT_AM
			,A.SUP_AM
			,A.VAT_AM
			,A.BA_NB
			,A.DEPOSITOR
			,A.BTR_CD
			,A.BTR_NM
			,A.CTR_CD
			,A.CTR_NM
			,A.BG_SQ
			,A.TR_NMK
			,A.CEO_NMK
			,A.BTR_NMK
			,A.CTR_NMK
			,B.FILL_DT
			,B.FILL_NB
			,B.RMK_DC
			,C.REG_NB
	from abdocu_t A
	inner join adocud B
	on A.ISU_DT = B.ISU_DT
	inner join STRADE C
	on A.TR_CD = C.TR_CD and C.CO_CD = #{CO_CD}
	and A.ISU_SQ = B.ISU_SQ
	and A.LN_SQ = B.LN_SQ 
	WHERE A.CO_CD = #{CO_CD}
	<if test='TR_CD != null and !TR_CD.equals("")'>
		AND A.TR_CD = #{TR_CD}
	</if>
	<if test='TR_NM != null and !TR_NM.equals("")'>
		AND A.TR_NM LIKE  '%' + #{TR_NM} + '%'
	</if>
	<if test='REG_NB != null and !REG_NB.equals("")'>
		AND C.REG_NB LIKE '%' + #{REG_NB} + '%'
	</if>
	<![CDATA[
	AND B.FILL_DT >= #{FROM_FILL_DT} AND B.FILL_DT <= #{TO_FILL_DT} 
	]]>
	<if test='TO_DRAFT_DT != null and !TO_DRAFT_DT.equals("")'>
		<![CDATA[
		AND B.ISU_DT >= #{FROM_DRAFT_DT} AND B.ISU_DT <= #{TO_DRAFT_DT} 
		]]>
	</if>
	
	</select>
	
	<select id="resalphag20_Ms.getAdocuTradeListCnt" parameterType="map" resultType="String">
	/* resalphag20_Ms.getAdocuTradeListCnt */
	
	select 
			count(*) as cnt
	from abdocu_t A
	inner join adocud B
	on A.ISU_DT = B.ISU_DT
	inner join STRADE C
	on A.TR_CD = C.TR_CD and C.CO_CD = #{CO_CD}
	and A.ISU_SQ = B.ISU_SQ
	and A.LN_SQ = B.LN_SQ 
	WHERE A.CO_CD = #{CO_CD}
	<if test='TR_CD != null and !TR_CD.equals("")'>
		AND A.TR_CD = #{TR_CD}
	</if>
	<if test='TR_NM != null and !TR_NM.equals("")'>
		AND A.TR_NM LIKE  '%' + #{TR_NM} + '%'
	</if>
	<if test='REG_NB != null and !REG_NB.equals("")'>
		AND C.REG_NB LIKE '%' + #{REG_NB} + '%'
	</if>
	<![CDATA[
	AND B.FILL_DT >= #{FROM_FILL_DT} AND B.FILL_DT <= #{TO_FILL_DT} 
	]]>
	<if test='TO_DRAFT_DT != null and !TO_DRAFT_DT.equals("")'>
		<![CDATA[
		AND B.ISU_DT >= #{FROM_DRAFT_DT} AND B.ISU_DT <= #{TO_DRAFT_DT} 
		]]>
	</if>
	
	</select>
	
</mapper>