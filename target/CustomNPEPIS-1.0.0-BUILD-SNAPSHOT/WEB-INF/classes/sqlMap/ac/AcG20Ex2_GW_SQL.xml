<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="AcG20Ex2Gw">

    <typeAlias alias="abdocu_H" type="ac.g20.ex.vo.Abdocu_H" />
    <typeAlias alias="abdocu_B" type="ac.g20.ex.vo.Abdocu_B" />
    <typeAlias alias="abdocu_T" type="ac.g20.ex.vo.Abdocu_T" />
    <typeAlias alias="abdocu_D" type="ac.g20.ex.vo.Abdocu_D" />
    <typeAlias alias="abdocu_TH" type="ac.g20.ex.vo.Abdocu_TH" />
    <typeAlias alias="abdocu_TD" type="ac.g20.ex.vo.Abdocu_TD" />
    <typeAlias alias="abdocu_TD2" type="ac.g20.ex.vo.Abdocu_TD2" />
    <typeAlias alias="aCardVO" type="ac.g20.ex.vo.ACardVO" />
    <typeAlias alias="payDataVO" type="ac.g20.ex.vo.PayDataVO" />
    <typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
    
    <insert id="AcG20Ex2Gw.insertConsDoc" parameterClass="Map" >
		/* AcG20Ex2Gw.insertConsDoc */
		/* 품의 문서 신규 생성 */
		INSERT INTO neos.t_exnp_consdoc (
			expend_date, 
			erp_comp_seq, 
			erp_dept_seq, 
			erp_emp_seq, 
			erp_gisu, 
			erp_expend_year, 
			comp_seq, 
			comp_name, 
			dept_seq, 
			dept_name, 
			emp_seq, 
			emp_name,
			create_seq,
			erp_div_seq,
			erp_div_name,
			out_process_interface_id,
			out_process_interface_m_id,
			out_process_interface_d_id
		)
		VALUES	(
			NOW(), 
			#erp_co_cd#, 
			#erp_dept_cd#, 
			#erp_emp_cd#, 
			#erp_gisu#, 
			#erp_year#, 
			#compSeq#, 
			#compName#, 
			#deptSeq#, 
			#deptName#, 
			#empSeq#, 
			#empName#,
			#empSeq#,
			#erp_div_cd#,
			#erp_div_nm#,
			#outProcessInterfaceId#,
			#outProcessInterfaceMId#,
			#outProcessInterfaceDId#
		);	 
	    <selectKey resultClass="String" keyProperty="consDocSeq" >
	        SELECT MAX(cons_doc_seq) FROM neos.t_exnp_consdoc;       
	    </selectKey> 
	</insert>
	
	<update id="AcG20Ex2Gw.updateConsDoc" parameterClass="Map">
		/* AcG20Ex2Gw.updateConsDoc */
		/* 품의 문서 정보 갱신 */
		UPDATE neos.t_exnp_consdoc
		SET
			erp_comp_seq               = IFNULL(#erp_co_cd#,                erp_comp_seq               ) ,
			erp_dept_seq               = IFNULL(#erp_dept_cd#,              erp_dept_seq               ) ,
			erp_emp_seq                = IFNULL(#erp_emp_cd#,               erp_emp_seq                ) ,
			erp_gisu                   = IFNULL(#erp_gisu#,                 erp_gisu                   ) ,
			erp_expend_year            = IFNULL(#erp_year#,                 erp_expend_year            ) ,
			comp_seq                   = IFNULL(#compSeq#,                  comp_seq                   ) ,
			comp_name                  = IFNULL(#compName#,                 comp_name                  ) ,
			dept_seq                   = IFNULL(#deptSeq#,                  dept_seq                   ) ,
			dept_name                  = IFNULL(#deptName#,                 dept_name                  ) ,
			emp_seq                    = IFNULL(#empSeq#,                   emp_seq                    ) ,
			emp_name                   = IFNULL(#empName#,                  emp_name                   ) ,
			modify_seq                 = IFNULL(#empSeq#,                   modify_seq                 ) ,
			erp_div_seq                = IFNULL(#erp_div_cd#,               erp_div_seq                ) ,
			erp_div_name               = IFNULL(#erp_div_nm#,               erp_div_name               ) ,
			out_process_interface_id   = IFNULL(#outProcessInterfaceId#,    out_process_interface_id   ) ,
			out_process_interface_m_id = IFNULL(#outProcessInterfaceMId#,   out_process_interface_m_id ) ,
			out_process_interface_d_id = IFNULL(#outProcessInterfaceDId#,   out_process_interface_d_id ) ,
			modify_seq 			       = IFNULL(#empSeq# , modify_seq ) 
		WHERE cons_doc_seq = #consDocSeq#
	</update>
    
    <insert id="AcG20Ex2Gw.insertConsHead" parameterClass="Map">
		/* AcG20Ex2Gw.insertConsHead */
		/* 각개 품의서 정보 생성 */
		INSERT INTO neos.t_exnp_conshead	(
			cons_doc_seq,
			cons_date, 
			mgt_seq, 
			mgt_name, 
			docu_fg_code,
			docu_fg_name, 
			cons_note,  
			erp_comp_seq, 
			erp_comp_name, 
			erp_emp_seq, 
			erp_emp_name, 
			erp_div_seq, 
			erp_div_name, 
			erp_dept_seq, 
			erp_dept_name, 
			erp_gisu, 
			erp_gisu_from_date, 
			erp_gisu_to_date, 
			erp_year, 
			btr_seq, 
			bottom_seq, 
			btr_nb, 
			btr_name, 
			bottom_name, 
			create_seq
		)
		VALUES	(
			#consDocSeq#, 
			#erp_gisu_dt#,
			#mgt_cd#, 
			#mgt_nm#, 
			#docu_fg#,
			#docu_fg_text#, 
			#rmk_dc#, 
			#erp_co_cd#, 
			#erp_co_nm#, 
			#erp_emp_cd#, 
			#erp_emp_nm#, 
			#erp_div_cd#, 
			#erp_div_nm#, 
			#erp_dept_cd#, 
			#erp_dept_nm#, 
			#erp_gisu#, 
			#erp_gisu_from_dt#, 
			#erp_gisu_to_dt#, 
			#erp_year#, 
			#btr_cd#, 
			#bottom_cd#, 
			#btr_nb#, 
			#btr_nm#, 
			#bottom_nm#, 
			#empSeq#
		);
	    <selectKey resultClass="String" keyProperty="consSeq" >
	        SELECT MAX(cons_seq) FROM neos.t_exnp_conshead;       
	    </selectKey> 
	</insert>
	
	<update id="AcG20Ex2Gw.updateConsHead" parameterClass="java.util.HashMap">
		/* AcG20Ex2Gw.updateConsHead */
		/* 각개 품의서 정보 갱신 */
		UPDATE neos.t_exnp_conshead 
		SET
			cons_date 			= IFNULL(#erp_gisu_dt# , cons_date ) ,
			mgt_seq 			= IFNULL(#mgt_cd# , mgt_seq ) ,
			mgt_name 			= IFNULL(#mgt_nm# , mgt_name ) ,
			docu_fg_code 		= IFNULL(#docu_fg# , docu_fg_code ) ,
			docu_fg_name 		= IFNULL(#docu_fg_text# , docu_fg_name ) ,
			cons_note 			= IFNULL(#rmk_dc# , cons_note ) ,
			erp_comp_seq 		= IFNULL(#erp_co_cd# , erp_comp_seq ) ,
			erp_comp_name		= IFNULL(#erp_co_nm# , erp_comp_name ) ,
			erp_div_seq 		= IFNULL(#erp_div_cd# , erp_div_seq ) ,	/* G20회계단위 */
			erp_div_name 		= IFNULL(#erp_div_nm# , erp_div_name ) ,/* G20회계단위 */
			erp_emp_seq 		= IFNULL(#erp_emp_cd# , erp_emp_seq ) ,
			erp_emp_name 		= IFNULL(#erp_emp_nm# , erp_emp_name ) ,
			erp_dept_seq 		= IFNULL(#erp_dept_cd# , erp_dept_seq ) ,
			erp_dept_name 		= IFNULL(#erp_dept_nm# , erp_dept_name ) ,
			erp_gisu 			= IFNULL(#erp_gisu# , erp_gisu ) ,
			erp_gisu_from_date	= IFNULL(#erp_gisu_from_dt# , erp_gisu_from_date ) ,
			erp_gisu_to_date	= IFNULL(#erp_gisu_to_dt# , erp_gisu_to_date ) ,
			erp_year 			= IFNULL(#erp_year# , erp_year ) ,
			btr_seq 			= IFNULL(#btr_cd# , btr_seq ) ,
			bottom_seq 			= IFNULL(#bottom_cd# , bottom_seq ) ,
			btr_nb 				= IFNULL(#btr_nb# , btr_nb ) ,
			btr_name 			= IFNULL(#btr_nm# , btr_name ) ,
			bottom_name 		= IFNULL(#bottom_nm# , bottom_name ) ,
			modify_seq 			= IFNULL(#empSeq# , modify_seq ) 
		WHERE 	cons_seq = #abdocu_no#
	</update>
	
	<select id="AcG20Ex2Gw.getPurcReqH" parameterClass="HashMap" resultClass="abdocu_H">
		/* AcG20Ex2Gw.getPurcReqH - mariaDB */
		SELECT 
			A.purc_req_h_id			as purc_req_h_id, 
			A.purc_req_id			as purc_req_id,
       		B.cons_doc_seq			as cons_doc_seq, 
       		B.cons_seq 				as abdocu_no,
       		B.cons_date 			as erp_gisu_dt,
			B.mgt_seq 				as mgt_cd,
			B.mgt_name 				as mgt_nm,
			B.docu_fg_code 			as docu_fg,
			B.docu_fg_name 			as docu_fg_text,
			B.cons_note 			as rmk_dc,
			B.erp_comp_seq 			as erp_co_cd,
			B.erp_comp_name			as erp_co_nm,
			B.erp_div_seq 			as erp_div_cd,
			B.erp_div_name 			as erp_div_nm,
			B.erp_emp_seq 			as erp_emp_cd,
			B.erp_emp_name 			as erp_emp_nm,
			B.erp_dept_seq 			as erp_dept_cd,
			B.erp_dept_name 		as erp_dept_nm,
			B.erp_gisu 				as erp_gisu,
			B.erp_gisu_from_date	as erp_gisu_from_dt,
			B.erp_gisu_to_date		as erp_gisu_to_dt,
			B.erp_year 				as erp_year,
			B.btr_seq 				as btr_cd,
			B.bottom_seq 			as bottom_cd,
			B.btr_nb 				as btr_nb,
			B.btr_name 				as btr_nm,
			B.bottom_name 			as bottom_nm,
			(SELECT SUM(budget_amt) FROM NEOS.T_EXNP_CONSBUDGET WHERE cons_doc_seq = B.cons_doc_seq AND cons_seq = B.cons_seq) as totalAmt
		FROM dj_PURC_REQ_H A, NEOS.T_EXNP_CONSHEAD B
		WHERE A.ABDOCU_NO = B.CONS_SEQ
		AND A.ACTIVE = 'Y'
		AND A.PURC_REQ_ID = #purcReqId#
		ORDER BY A.ABDOCU_NO
	</select>
	
	<select id="AcG20Ex2Gw.getPurcContH" parameterClass="HashMap" resultClass="abdocu_H">
		/* AcG20Ex2Gw.getPurcContH - mariaDB */
		SELECT DISTINCT
			A.purc_req_h_id			as purc_req_h_id, 
			A.purc_req_id			as purc_req_id,
       		B.cons_doc_seq			as cons_doc_seq, 
       		B.cons_seq 				as abdocu_no,
       		B.cons_date 			as erp_gisu_dt,
			B.mgt_seq 				as mgt_cd,
			B.mgt_name 				as mgt_nm,
			B.docu_fg_code 			as docu_fg,
			B.docu_fg_name 			as docu_fg_text,
			B.cons_note 			as rmk_dc,
			B.erp_comp_seq 			as erp_co_cd,
			B.erp_comp_name			as erp_co_nm,
			B.erp_div_seq 			as erp_div_cd,
			B.erp_div_name 			as erp_div_nm,
			B.erp_emp_seq 			as erp_emp_cd,
			B.erp_emp_name 			as erp_emp_nm,
			B.erp_dept_seq 			as erp_dept_cd,
			B.erp_dept_name 		as erp_dept_nm,
			B.erp_gisu 				as erp_gisu,
			B.erp_gisu_from_date	as erp_gisu_from_dt,
			B.erp_gisu_to_date		as erp_gisu_to_dt,
			B.erp_year 				as erp_year,
			B.btr_seq 				as btr_cd,
			B.bottom_seq 			as bottom_cd,
			B.btr_nb 				as btr_nb,
			B.btr_name 				as btr_nm,
			B.bottom_name 			as bottom_nm
		FROM dj_PURC_CONT_B A, NEOS.T_EXNP_CONSHEAD B, NEOS.T_EXNP_CONSBUDGET C
		WHERE A.ABDOCU_B_NO = C.BUDGET_SEQ
        AND B.CONS_SEQ = C.CONS_SEQ
		AND A.ACTIVE = 'Y'
		AND A.PURC_CONT_ID = #purcContId#
		ORDER BY B.CONS_SEQ
	</select>
	
	<select id="AcG20Ex2Gw.getAbdocuH" parameterClass="abdocu_H" resultClass="abdocu_H">
        /* AcG20Ex2Gw.Abdocu_H_SELECT - mariaDB */
        SELECT 
       		cons_doc_seq		as cons_doc_seq, 
       		cons_seq 			as abdocu_no,
       		cons_date 			as erp_gisu_dt,
			mgt_seq 			as mgt_cd,
			mgt_name 			as mgt_nm,
			docu_fg_code 		as docu_fg,
			docu_fg_name 		as docu_fg_text,
			cons_note 			as rmk_dc,
			erp_comp_seq 		as erp_co_cd,
			erp_comp_name		as erp_co_nm,
			erp_div_seq 		as erp_div_cd,
			erp_div_name 		as erp_div_nm,
			erp_emp_seq 		as erp_emp_cd,
			erp_emp_name 		as erp_emp_nm,
			erp_dept_seq 		as erp_dept_cd,
			erp_dept_name 		as erp_dept_nm,
			erp_gisu 			as erp_gisu,
			erp_gisu_from_date	as erp_gisu_from_dt,
			erp_gisu_to_date	as erp_gisu_to_dt,
			erp_year 			as erp_year,
			btr_seq 			as btr_cd,
			bottom_seq 			as bottom_cd,
			btr_nb 				as btr_nb,
			btr_name 			as btr_nm,
			bottom_name 		as bottom_nm
        FROM	NEOS.T_EXNP_CONSHEAD
        WHERE	CONS_SEQ	=	#abdocu_no#
    </select>
    
    <select id="AcG20Ex2Gw.getPurcReqB" parameterClass="abdocu_H" resultClass="abdocu_B">
        /* AcG20Ex2Gw.getPurcReqB - mariaDB 결의서 예산리스트 */
        SELECT 
        	A.cons_doc_seq        AS cons_doc_seq,
        	A.cons_seq            AS abdocu_no   ,
        	A.budget_seq          AS abdocu_b_no ,
            A.erp_budget_name     AS abgt_nm     ,
            A.erp_budget_seq      AS abgt_cd     ,
            A.erp_bgt1_name       AS erp_bgt_nm1 ,
            A.erp_bgt2_name       AS erp_bgt_nm2 ,
            A.erp_bgt3_name       AS erp_bgt_nm3 ,
            A.erp_bgt4_name       AS erp_bgt_nm4 ,
            A.erp_bgt1_seq        AS erp_bgt_cd1 ,
            A.erp_bgt2_seq        AS erp_bgt_cd2 ,
            A.erp_bgt3_seq        AS erp_bgt_cd3 ,
            A.erp_bgt4_seq        AS erp_bgt_cd4 ,
            A.ctl_fg_code         AS ctl_fg      ,
            A.set_fg_code         AS set_fg      ,
            A.vat_fg_code         AS vat_fg      ,
            A.tr_fg_code          AS tr_fg       ,
            A.ctl_fg_name         AS ctl_fg_nm   ,
            A.set_fg_name         AS set_fg_nm   ,
            A.vat_fg_name         AS vat_fg_nm   ,
            A.tr_fg_name          AS tr_fg_nm    ,
            A.erp_div_name        AS div_nm2     ,
            A.erp_div_seq         AS div_cd2     ,
            A.budget_note         AS rmk_dc      ,
            A.erp_open_amt        AS open_am     ,
            A.budget_amt       	  AS apply_am    ,
        	B.return_yn 		  AS return_yn   ,
        	B.apply_am 			  AS apply_am2   ,
        	B.next_am			  AS next_am     ,
        	B.purc_req_b_id 	  AS purc_req_b_id
		FROM NEOS.T_EXNP_CONSBUDGET A, dj_PURC_REQ_B B, dj_PURC_REQ_H H
		WHERE A.budget_seq = B.ABDOCU_B_NO 
		AND A.cons_seq = H.ABDOCU_NO
		<isNotEmpty property="purc_req_id">
        AND H.PURC_REQ_ID = #purc_req_id#
        </isNotEmpty>
		<isNotEmpty property="abdocu_no">
        AND A.cons_seq = #abdocu_no#
        </isNotEmpty>
        ORDER BY A.cons_seq, A.budget_seq
	</select>
	
	<delete id="AcG20Ex2Gw.deleteAbdocu_B" parameterClass="abdocu_B">
	    /* AcG20Ex2Gw.deleteAbdocu_B - mariaDB */
	    DELETE  FROM	NEOS.t_exnp_consbudget
	    WHERE	cons_seq		= #abdocu_no#
	    <isNotEmpty property="abdocu_b_no">
	    AND 	budget_seq		= #abdocu_b_no#
	    </isNotEmpty>
	</delete>
	
	<select id="AcG20Ex2Gw.getBudgetConsUseAmt" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	    /* AcG20Ex2Gw.getBudgetConsUseAmt - mariaDB */
		/* G20 예산 품의단계 잔액 조회 */
		SELECT	
			SUM( IFNULL(consB.budget_std_amt, 0 ))		'consBudgetStdAmt'
			, SUM( IFNULL(consB.budget_tax_amt, 0 ))	'consBudgetTaxAmt'
			, SUM( IFNULL(consB.budget_amt, 0 ))		'consBudgetAmt'
			, consB.erp_budget_seq				'consErpBudgetSeq'
			, SUM( IFNULL(resB.budget_std_amt, 0 ))	'resBudgetStdAmt'
			, SUM( IFNULL(resB.budget_tax_amt, 0 ))	'resBudgetTaxAmt'
			, SUM( IFNULL(resB.budget_amt, 0 ))		'resBudgetAmt'
			, resB.erp_budget_seq				'resErpBudgetSeq'
			, 	( CASE consB.conffer_budget_return_yn WHEN 'Y' THEN 0
				ELSE SUM( IFNULL(consB.budget_std_amt, 0 )) 	- SUM( IFNULL(resB.budget_std_amt, 0 ))
				END	)	AS 'balanceStdAmt'
			, 	( CASE consB.conffer_budget_return_yn WHEN 'Y' THEN 0
				ELSE SUM( IFNULL(consB.budget_tax_amt, 0 )) 	- SUM( IFNULL(resB.budget_tax_amt, 0 ))
				END	)	AS 'balanceTaxAmt'				
			, 	( CASE consB.conffer_budget_return_yn WHEN 'Y' THEN 0
				ELSE SUM( IFNULL(consB.budget_amt, 0 )) 		- SUM( IFNULL(resB.budget_amt, 0 ))
				END	)	AS 'balanceAmt'		
		FROM	(	
			SELECT	* 
			FROM 	neos.t_exnp_consdoc
			WHERE 	conffer_return_yn != 'Y'
			 AND	doc_status IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
			UNION	
			SELECT	* 
			FROM 	neos.t_exnp_consdoc
			WHERE	cons_doc_seq = #consDocSeq#
		)	consD
		INNER JOIN 	(
			SELECT	* 
			FROM	neos.t_exnp_conshead
			<isNotEmpty property="mgtSeq">
			WHERE	mgt_seq = #mgtSeq#
			</isNotEmpty>
		)	consH		
		 ON	consD.cons_doc_seq = consH.cons_doc_seq
		INNER JOIN	(
			SELECT	*
			FROM	neos.t_exnp_consbudget
			WHERE	conffer_budget_return_yn = 'N' 
			<isNotEmpty property="consDocSeq">
			<isNotEmpty property="budgetSeq">
			 AND	budget_seq != #budgetSeq#
			 </isNotEmpty>
			</isNotEmpty>
		)	consB
		 ON		consD.cons_doc_seq	= consB.cons_doc_seq
		 AND	consH.cons_seq		= consB.cons_seq
		 AND 	consB.erp_budget_seq = #erpBudgetSeq#
		LEFT JOIN	(
			SELECT	
				rb.conffer_doc_seq
				, rb.conffer_seq
				, rb.conffer_budget_seq
				, rb.erp_budget_seq
				, IFNULL(rb.erp_bgacct_seq, '')	AS erp_bgacct_seq
				, SUM( rb.budget_std_amt ) 	AS budget_std_amt
				, SUM( rb.budget_tax_amt )AS budget_tax_amt			
				, SUM( (CASE IFNULL(rb.ctl_fg_code, '1') 
							WHEN '0'	THEN 	IFNULL(rb.budget_std_amt, 0)
							ELSE		IFNULL(rb.budget_amt, 0)	/* emptyStr or '1' */
						END)
				)	AS budget_amt
			FROM	neos.t_exnp_resbudget rb
			 INNER JOIN neos.t_exnp_resdoc rd
			 ON 	rd.res_doc_seq = rb.res_doc_seq
			  AND	IFNULL(rd.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
			  AND	rd.doc_seq IS NOT NULL
			<isNotEmpty property="resDocSeq">			  
			  AND	rd.doc_seq IS NOT NULL
			  AND	( rd.res_doc_seq != #resDocSeq# OR IFNULL(rd.doc_seq, '') = '')
			</isNotEmpty>			  
			WHERE	IFNULL(rb.conffer_doc_seq, '') != ''	
			GROUP	BY 	rb.conffer_doc_seq
						, rb.conffer_seq
						, rb.conffer_budget_seq
						, (CASE IFNULL(rb.erp_budget_seq, '') WHEN '' THEN -1 ELSE IFNULL(rb.erp_budget_seq,'') END)
						, (CASE IFNULL(rb.erp_bgacct_seq, '') WHEN '' THEN -1 ELSE IFNULL(rb.erp_bgacct_seq,'') END)
			HAVING 	budget_amt != 0
		) resB
		 ON 	consB.cons_doc_seq = resB.conffer_doc_seq
		 AND	consB.cons_seq = resB.conffer_seq
		 AND	consB.budget_seq = resB.conffer_budget_seq
		WHERE	consD.erp_gisu = #gisu#
		 AND	IFNULL(consH.bottom_seq, '') like '%$bottomSeq$%'
		GROUP BY  consB.erp_budget_seq	;
	</select>

	<select id="AcG20Ex2Gw.getBudgetRefResUseAmt" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	    /* AcG20Ex2Gw.getBudgetRefResUseAmt - mariaDB */
		/* iCUBE G20 예산별 결의서 미전송 사용량 조회 */
		SELECT	
			resB.erp_budget_seq						AS	'resErpBudgetSeq'
			, SUM( IFNULL(resB.budget_std_amt, 0 ))	AS	'resBudgetStdAmt'
			, SUM( IFNULL(resB.budget_tax_amt, 0 ))	AS	'resBudgetTaxAmt'
			, SUM( (CASE IFNULL(ctl_fg_code, '1') 
						WHEN '0'	THEN 	IFNULL(budget_std_amt, 0)
						ELSE		IFNULL(budget_amt, 0)	/* emptyStr or '1' */
					END)
			)	AS 'resBudgetAmt'
		FROM	(
			SELECT	*
			FROM	neos.t_exnp_resdoc
			WHERE	res_doc_seq = #resDocSeq#
			UNION		
			SELECT	* 
			FROM 	neos.t_exnp_resdoc
			WHERE 	erp_send_yn != 'Y'
			AND		IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
			AND		doc_seq IS NOT NULL
			AND		erp_gisu = #gisu#
		)	resD
		INNER JOIN	(
			SELECT	*
			FROM	neos.t_exnp_reshead
			<isNotEmpty property="mgtSeq">
			WHERE	mgt_seq = #mgtSeq#
			</isNotEmpty>
		)	resH
		 ON	resD.res_doc_seq = resH.res_doc_seq		
		INNER JOIN	( 
			SELECT	*
			FROM	neos.t_exnp_resbudget
			WHERE	1 = 1
			<isNotEmpty property="resDocSeq">
			<isNotEmpty property="budgetSeq">
			AND	budget_seq != #budgetSeq#
			 </isNotEmpty>
			</isNotEmpty>
			
			<isNotEmpty property="resDocSeq">
			AND	res_doc_seq != #resDocSeq#
			</isNotEmpty>
		)	resB
		 ON	resD.res_doc_seq = resB.res_doc_seq
		 AND	resH.res_seq = resB.res_seq
		 AND 	resB.erp_budget_seq = #erpBudgetSeq#
		 AND	IFNULL(resH.bottom_seq, '') like '%$bottomSeq$%'
		GROUP BY  resB.erp_budget_seq
	</select>
	
	<insert id="AcG20Ex2Gw.insertAbdocu_B" parameterClass="abdocu_B">
        /* AcG20Ex2Gw.insertAbdocu_B - mariaDB */	
        INSERT INTO	NEOS.t_exnp_consbudget
        (
        	cons_doc_seq       ,
            cons_seq           ,
            erp_budget_name    ,
            erp_budget_seq     ,
            erp_bgt1_name      ,
            erp_bgt2_name      ,
            erp_bgt3_name      ,
            erp_bgt4_name      ,
            erp_bgt1_seq       ,
            erp_bgt2_seq       ,
            erp_bgt3_seq       ,
            erp_bgt4_seq       ,
            ctl_fg_code        ,
            set_fg_code        ,
            vat_fg_code        ,
            tr_fg_code         ,
            ctl_fg_name        ,
            set_fg_name        ,
            vat_fg_name        ,
            tr_fg_name         ,
            erp_div_name       ,
            erp_div_seq        ,
            budget_note        ,
            erp_open_amt       ,
            erp_apply_amt      ,
            erp_res_amt        ,
            erp_left_amt       ,
            gw_balance_amt     ,
            budget_std_amt     ,
            budget_tax_amt     ,
            budget_amt         ,
            create_seq         , 
            create_date
        )
        VALUES
        (
            #cons_doc_seq#              ,
            #abdocu_no#                 ,
            #abgt_nm#                   ,
            #abgt_cd#                   ,
            #erp_bgt_nm1#               ,
            #erp_bgt_nm2#               ,
            #erp_bgt_nm3#               ,
			#erp_bgt_nm4#               ,
            #erp_bgt_cd1#               ,
			#erp_bgt_cd2#               ,
			#erp_bgt_cd3#               ,
			#erp_bgt_cd4#               ,
            #ctl_fg#                    ,
			IFNULL(#set_fg#, '1')       ,
			#vat_fg#                    ,
			IFNULL(#tr_fg#, '1')        ,    
            #ctl_fg_nm#                 ,
            (select detail_name from neos.t_co_code_detail_multi where code = 'G20SET' and lang_code = 'kr' and detail_code = IFNULL(#set_fg#, '1') limit 1),
            (select detail_name from neos.t_co_code_detail_multi where code = 'G20VAT' and lang_code = 'kr' and detail_code = IFNULL(#vat_fg#, '1') limit 1),
            (select detail_name from neos.t_co_code_detail_multi where code = 'G20_TR' and lang_code = 'kr' and detail_code = IFNULL(#tr_fg#, '1') limit 1),
            #div_nm2#                   ,
			#div_cd2#                   ,
			#rmk_dc#                    ,
            IFNULL(#erp_open_amt#, 0)   ,
			IFNULL(#erp_apply_amt#, 0)  ,
			IFNULL(#erp_res_amt#, 0)    ,
			IFNULL(#erp_left_amt#, 0)   ,
			IFNULL(#gw_balance_amt#, 0) ,
			IFNULL(#budget_std_amt#, 0) ,
			IFNULL(#budget_tax_amt#, 0) ,
			IFNULL(#budget_amt#, 0)     ,
            #insert_id#                 ,
			NOW()
        )
        <selectKey keyProperty="abdocu_b_no" resultClass="java.lang.String">
             SELECT MAX(budget_seq) FROM neos.t_exnp_consbudget;
        </selectKey>
	</insert>
	
	<update id="AcG20Ex2Gw.updateAbdocu_B" parameterClass="abdocu_B">
		/* AcG20Ex2Gw.updateAbdocu_B - mariaDB */
		UPDATE	NEOS.t_exnp_consbudget
	    SET 
            erp_budget_name     = IFNULL(#abgt_nm#        , erp_budget_name),
            erp_budget_seq      = IFNULL(#abgt_cd#        , erp_budget_seq ),
            erp_bgt1_name       = IFNULL(#erp_bgt_nm1#    , erp_bgt1_name  ),
            erp_bgt2_name       = IFNULL(#erp_bgt_nm2#    , erp_bgt2_name  ),
            erp_bgt3_name       = IFNULL(#erp_bgt_nm3#    , erp_bgt3_name  ),
            erp_bgt4_name       = IFNULL(#erp_bgt_nm4#    , erp_bgt4_name  ),
            erp_bgt1_seq        = IFNULL(#erp_bgt_cd1#    , erp_bgt1_seq   ),
            erp_bgt2_seq        = IFNULL(#erp_bgt_cd2#    , erp_bgt2_seq   ),
            erp_bgt3_seq        = IFNULL(#erp_bgt_cd3#    , erp_bgt3_seq   ),
            erp_bgt4_seq        = IFNULL(#erp_bgt_cd4#    , erp_bgt4_seq   ),
            ctl_fg_code         = IFNULL(#ctl_fg#         , ctl_fg_code    ),
            set_fg_code         = IFNULL(#set_fg#         , set_fg_code    ),
            vat_fg_code         = IFNULL(#vat_fg#         , vat_fg_code    ),
            tr_fg_code          = IFNULL(#tr_fg#          , tr_fg_code     ),
            ctl_fg_name         = IFNULL(#ctl_fg_nm#      , ctl_fg_name    ),
            set_fg_name         = IFNULL((select detail_name from neos.t_co_code_detail_multi where code = 'G20SET' and lang_code = 'kr' and detail_code = IFNULL(#set_fg#, '1') limit 1), set_fg_name    ),
            vat_fg_name         = IFNULL((select detail_name from neos.t_co_code_detail_multi where code = 'G20VAT' and lang_code = 'kr' and detail_code = IFNULL(#vat_fg#, '1') limit 1), vat_fg_name    ),
            tr_fg_name          = IFNULL((select detail_name from neos.t_co_code_detail_multi where code = 'G20_TR' and lang_code = 'kr' and detail_code = IFNULL(#tr_fg#, '1') limit 1), tr_fg_name     ),
            erp_div_name        = IFNULL(#div_nm2#        , erp_div_name   ),
            erp_div_seq         = IFNULL(#div_cd2#        , erp_div_seq    ),
            budget_note         = IFNULL(#rmk_dc#         , budget_note    ),
            erp_open_amt        = IFNULL(#erp_open_amt#   , erp_open_amt   ),
            erp_apply_amt       = IFNULL(#erp_apply_amt#  , erp_apply_amt  ),
            erp_res_amt         = IFNULL(#erp_res_amt#    , erp_res_amt    ),
            erp_left_amt        = IFNULL(#erp_left_amt#   , erp_left_amt   ),
            gw_balance_amt      = IFNULL(#gw_balance_amt# , gw_balance_amt ),
            budget_std_amt      = IFNULL(#budget_std_amt# , budget_std_amt ),
            budget_tax_amt      = IFNULL(#budget_tax_amt# , budget_tax_amt ),
            budget_amt          = IFNULL(#budget_amt#     , budget_amt     ),
            modify_seq			= #modify_id#,
	        modify_date			= NOW()
		WHERE	budget_seq		= #abdocu_b_no#
	</update>
	
	<select id="AcG20Ex2Gw.getPurcReqT" parameterClass="abdocu_B" resultClass="abdocu_T">
	    /* AcG20Ex2Gw.getPurcReqT - mariaDB */
  		SELECT	
  			T.cons_doc_seq     as   cons_doc_seq, 
			T.cons_seq         as   abdocu_no, 
			T.budget_seq       as   abdocu_b_no, 
			T.item_name        as   item_nm, 
			a.item_cnt         as   item_cnt, 
			T.emp_name         as   emp_nm, 
			T.tr_seq           as   tr_cd, 
			T.tr_name          as   tr_nm, 
			T.ceo_name         as   ceo_nm, 
			T.trade_unit_amt   as   unit_am, 
			T.trade_std_amt    as   sup_am, 
			T.trade_vat_amt    as   vat_am, 
			T.jiro_seq         as   jiro_cd, 
			T.jiro_name        as   jiro_nm, 
			T.ba_nb            as   ba_nb, 
			T.btr_seq          as   btr_cd, 
			T.btr_name         as   btr_nm, 
			T.depositor        as   depositor, 
			T.trade_note       as   rmk_dc, 
			T.ctr_seq          as   ctr_cd, 
			T.ctr_name         as   ctr_nm, 
			T.create_seq       as   insert_id,
			A.purc_req_t_id,
			A.purc_req_b_id,
			A.abdocu_t_no,
			A.pps_id_no,
			A.item_type,
			A.item_type_code_id,
			A.standard,
			A.contents,
			CAST(CAST(A.START_DATE AS DATE) AS CHAR(10)) AS start_date,
			CAST(CAST(A.END_DATE AS DATE) AS CHAR(10)) AS end_date,
			A.pps_fees,
			A.remark,
			A.write_emp_seq,
			A.write_emp_ip,
			A.write_date,
			A.last_update_emp_seq,
			A.last_update_emp_ip,
			A.update_date,
			A.active,
			A.purc_tr_type,
			A.tr_cd as tr_cd2,
			A.tr_nm as tr_nm2,
			A.reg_nb as reg_nb2,
			A.ceo_nm as ceo_nm2,
			A.item_nm as item_nm2,
			A.item_cnt as item_cnt2,
			A.item_am as item_am,
			A.item_am as item_am2,
			A.unit_am as unit_am2,
			A.sup_am as sup_am2,
			A.vat_am as vat_am2,
			A.next_am
		FROM	NEOS.t_exnp_constrade T
			JOIN dj_PURC_REQ_T A
			ON T.trade_seq = A.ABDOCU_T_NO
		WHERE 	A.PURC_TR_TYPE = #purc_tr_type#
		AND T.budget_seq	=	#abdocu_b_no#
		ORDER BY T.trade_seq ASC;
	</select>
	
	<delete id="AcG20Ex2Gw.delAbdocu_H" parameterClass="abdocu_H">
		/*AcG20Ex2Gw.delAbdocu_H*/
		DELETE  FROM	NEOS.t_exnp_conshead
	    WHERE	cons_seq		= #abdocu_no#
	</delete>
	
	<insert id="AcG20Ex2Gw.insertAbdocu_T" parameterClass="abdocu_T">
		/* AcG20Ex2Gw.insertAbdocu_T */
		/* 품의서 거래처 정보 생성 */
		INSERT INTO neos.t_exnp_constrade
		(
			cons_doc_seq, 
			cons_seq, 
			budget_seq, 
			item_name, 
			item_cnt, 
			emp_name, 
			tr_seq, 
			tr_name, 
			ceo_name, 
			trade_unit_amt, 
			trade_std_amt, 
			trade_vat_amt, 
			jiro_seq, 
			jiro_name, 
			ba_nb, 
			btr_seq, 
			btr_name, 
			depositor, 
			trade_note, 
			ctr_seq, 
			ctr_name, 
			create_seq
		)
		VALUES
		(
			#cons_doc_seq#, 
			#abdocu_no#, 
			#abdocu_b_no#, 
			#item_nm#, 
			'1', 
			#emp_nm#, 
			#tr_cd#, 
			#tr_nm#, 
			#ceo_nm#, 
			#unit_am#,
			#sup_am#, 
			#vat_am#, 
			#jiro_cd#, 
			#jiro_nm#, 
			#ba_nb#, 
			#btr_cd#, 
			#btr_nm#, 
			#depositor#, 
			#rmk_dc#, 
			#ctr_cd#, 
			#ctr_nm#, 
			#insert_id#
		);
	    <selectKey resultClass="String" keyProperty="abdocu_t_no" >
	        SELECT MAX(trade_seq) FROM neos.t_exnp_constrade;       
	    </selectKey> 		
	</insert>
	
	<update id="AcG20Ex2Gw.updateAbdocu_T" parameterClass="abdocu_T">
	    /* AcG20Ex2Gw.updateAbdocu_T - mariaDB */
	    UPDATE neos.t_exnp_constrade
		SET
			item_name 		= IFNULL(#item_nm# , item_name ) ,
			item_cnt 		= '1' ,
			emp_name 		= IFNULL(#emp_nm# , emp_name ) ,
			tr_seq 			= IFNULL(#tr_cd# , tr_seq ) ,
			tr_name 		= IFNULL(#tr_nm# , tr_name ) ,
			ceo_name 		= IFNULL(#ceo_nm# , ceo_name ) ,
			trade_unit_amt	= IFNULL(#unit_am#, trade_unit_amt ) ,
			trade_std_amt	= IFNULL(#sup_am# , trade_std_amt ) ,
			trade_vat_amt 	= IFNULL(#vat_am# , trade_vat_amt ) ,
			jiro_seq 		= IFNULL(#jiro_cd# , jiro_seq ) ,
			jiro_name 		= IFNULL(#jiro_nm# , jiro_name ) ,
			ba_nb 			= IFNULL(#ba_nb# , ba_nb ) ,
			btr_seq 		= IFNULL(#btr_cd# , btr_seq ) ,
			btr_name 		= IFNULL(#btr_nm# , btr_name ) ,
			depositor 		= IFNULL(#depositor# , depositor ) ,
			trade_note 		= IFNULL(#rmk_dc# , trade_note ) ,
			ctr_seq 		= IFNULL(#ctr_cd# , ctr_seq ) ,
			ctr_name 		= IFNULL(#ctr_nm# , ctr_name ) ,
			modify_seq 		= IFNULL(#insert_id# , modify_seq )
		WHERE 	cons_doc_seq = #cons_doc_seq#
		 AND	cons_seq = #abdocu_no#
		 AND	budget_seq = #abdocu_b_no#
		 AND	trade_seq = #abdocu_t_no#
	</update>
	
	<update id="AcG20Ex2Gw.updateAbdocuB_ApplyAm" parameterClass="abdocu_T">
	    /* AcG20Ex2Gw.updateAbdocuB_ApplyAm - mariaDB */
	    UPDATE	NEOS.t_exnp_consbudget
	    SET		budget_amt = (SELECT SUM(IFNULL(trade_unit_amt,0)) FROM NEOS.t_exnp_constrade WHERE budget_seq = #abdocu_b_no#),
	    		budget_tax_amt = (SELECT SUM(IFNULL(trade_vat_amt,0)) FROM NEOS.t_exnp_constrade WHERE budget_seq = #abdocu_b_no#),
	    		budget_std_amt = (SELECT SUM(IFNULL(trade_std_amt,0)) FROM NEOS.t_exnp_constrade WHERE budget_seq = #abdocu_b_no#)
	    WHERE budget_seq	= #abdocu_b_no#
	</update>
	
	<update id="AcG20Ex2Gw.updatePurcReqB_ApplyAm" parameterClass="abdocu_T">
		/*AcG20Ex2Gw.updatePurcReqB_ApplyAm*/
		UPDATE dj_PURC_REQ_B
	    SET		APPLY_AM = (SELECT SUM(IFNULL(trade_unit_amt,0)) FROM NEOS.t_exnp_constrade WHERE budget_seq = #abdocu_b_no#)
	    WHERE PURC_REQ_B_ID = #purc_req_b_id#
	</update>
	
	<select id="AcG20Ex2Gw.getAbdocuB_One" parameterClass="String" resultClass="abdocu_B">
        SELECT  
        	A.cons_doc_seq        AS cons_doc_seq,
        	A.cons_seq            AS abdocu_no   ,
        	A.budget_seq          AS abdocu_b_no ,
            A.erp_budget_name     AS abgt_nm     ,
            A.erp_budget_seq      AS abgt_cd     ,
            A.erp_bgt1_name       AS erp_bgt_nm1 ,
            A.erp_bgt2_name       AS erp_bgt_nm2 ,
            A.erp_bgt3_name       AS erp_bgt_nm3 ,
            A.erp_bgt4_name       AS erp_bgt_nm4 ,
            A.erp_bgt1_seq        AS erp_bgt_cd1 ,
            A.erp_bgt2_seq        AS erp_bgt_cd2 ,
            A.erp_bgt3_seq        AS erp_bgt_cd3 ,
            A.erp_bgt4_seq        AS erp_bgt_cd4 ,
            A.ctl_fg_code         AS ctl_fg      ,
            A.set_fg_code         AS set_fg      ,
            A.vat_fg_code         AS vat_fg      ,
            A.tr_fg_code          AS tr_fg       ,
            A.ctl_fg_name         AS ctl_fg_nm   ,
            A.set_fg_name         AS set_fg_nm   ,
            A.vat_fg_name         AS vat_fg_nm   ,
            A.tr_fg_name          AS tr_fg_nm    ,
            A.erp_div_name        AS div_nm2     ,
            A.erp_div_seq         AS div_cd2     ,
            A.budget_note         AS rmk_dc      ,
            A.erp_open_amt        AS open_am     ,
            A.budget_amt       	  AS apply_am    
		FROM 	NEOS.t_exnp_consbudget A
		WHERE 	budget_seq		= #abdocu_b_no#	
	</select>
	
	<delete id="AcG20Ex2Gw.deleteAbdocu_T" parameterClass="abdocu_T">
	    /* AcG20Ex2Gw.deleteAbdocu_T - mariaDB */
	    DELETE  FROM	NEOS.t_exnp_constrade
	    WHERE	trade_seq		= #abdocu_t_no#
	</delete>
	
	<select id="AcG20Ex2Gw.getBgtApplyAmSumThis" parameterClass="Abdocu_B" resultClass="Abdocu_B">
	    /* AcG20Ex2Gw.getBudgetApplyAmSumThis - mariaDB 예산별 집행액 총합 */
	    SELECT 
		    (CASE (SELECT 
		            MAX(CODE) IS NULL
		        FROM
		            neos.t_co_code
		        WHERE
		            CODE = 'EXNP_VAT01')
		        WHEN 1 THEN IFNULL(SUM(IFNULL(T.trade_unit_amt, 0)), 0)
		        ELSE IFNULL(SUM(IFNULL(T.trade_unit_amt, 0)), 0) - IFNULL(SUM(IFNULL(T.trade_vat_amt, 0)), 0)
		    END) AS APPLY_AM,
		    COUNT(*) AS TR_CNT
		FROM
		    NEOS.t_exnp_consbudget B
		        JOIN
		    NEOS.t_exnp_constrade T ON B.budget_seq = T.budget_seq
		        AND B.cons_seq = T.cons_seq
		WHERE
		    B.CONS_SEQ = #abdocu_no#
		        AND B.erp_budget_seq = #abgt_cd#
	</select>
	
	<select id="AcG20Ex2Gw.getTradeCnt" resultClass="int">
		/*AcG20Ex2Gw.getTradeCnt*/
		select count(*) from neos.t_exnp_constrade where budget_seq = #abdocu_b_no#
	</select>
	
	<select id="AcG20Ex2Gw.getPurcReqHBList" parameterClass="Map" resultClass="abdocu_B">
		/*AcG20Ex2Gw.getPurcReqHBList*/
		SELECT 
			A.mgt_name AS MGT_NM, 
			A.bottom_name AS BOTTOM_NM, 
			B.erp_bgt1_name AS ERP_BGT_NM1, 
			B.erp_bgt2_name AS ERP_BGT_NM2, 
			B.erp_bgt3_name AS ERP_BGT_NM3, 
			B.erp_bgt4_name AS ERP_BGT_NM4, 
			B.erp_budget_name AS ABGT_NM, 
			B.budget_amt AS APPLY_AM,
		    E.OPEN_AM, 
		    E.EXEC_AM, 
		    E.REFER_AM, 
		    E.LEFT_AM, 
		    E.NEXT_AM
		FROM NEOS.t_exnp_conshead A, NEOS.t_exnp_consbudget B, dj_PURC_REQ C, dj_PURC_REQ_H D, dj_PURC_REQ_B E
		WHERE A.cons_seq = B.cons_seq
		AND C.PURC_REQ_ID = D.PURC_REQ_ID
        AND D.PURC_REQ_H_ID = E.PURC_REQ_H_ID
		AND B.budget_seq = E.ABDOCU_B_NO
		AND C.PURC_REQ_ID = #purcReqId#
	</select>
	
	<select id="AcG20Ex2Gw.getPurcReqTList" parameterClass="Map" resultClass="egovMap">
	    /* AcG20Ex2Gw.getPurcReqTList - mariaDB */
  		SELECT	
  			T.cons_doc_seq     as   cons_doc_seq, 
			T.cons_seq         as   abdocu_no, 
			T.budget_seq       as   abdocu_b_no, 
			T.item_name        as   item_nm, 
			a.item_cnt         as   item_cnt, 
			T.emp_name         as   emp_nm, 
			T.tr_seq           as   tr_cd, 
			T.tr_name          as   tr_nm, 
			T.ceo_name         as   ceo_nm, 
			T.trade_unit_amt   as   unit_am, 
			T.trade_std_amt    as   sup_am, 
			T.trade_vat_amt    as   vat_am, 
			T.jiro_seq         as   jiro_cd, 
			T.jiro_name        as   jiro_nm, 
			T.ba_nb            as   ba_nb, 
			T.btr_seq          as   btr_cd, 
			T.btr_name         as   btr_nm, 
			T.depositor        as   depositor, 
			T.trade_note       as   rmk_dc, 
			T.ctr_seq          as   ctr_cd, 
			T.ctr_name         as   ctr_nm, 
			T.create_seq       as   insert_id
			, A.purc_req_t_id
			, A.purc_req_b_id
			, A.abdocu_t_no
			, A.pps_id_no
			, A.item_type
			, A.item_type_code_id
			, A.standard
			, A.contents
			, CAST(CAST(A.START_DATE AS DATE) AS CHAR(10)) AS start_date
			, CAST(CAST(A.END_DATE AS DATE) AS CHAR(10)) AS end_date
			, A.pps_fees
			, A.remark
			, A.write_emp_seq
			, A.write_emp_ip
			, A.write_date
			, A.last_update_emp_seq
			, A.last_update_emp_ip
			, A.update_date
			, A.active
			, A.purc_tr_type
			, A.tr_cd as tr_cd2
			, A.tr_nm as tr_nm2
			, A.reg_nb as reg_nb2
			, A.ceo_nm as ceo_nm2
			, A.item_nm as item_nm2
			, A.item_cnt as item_cnt2
			, A.item_am as item_am2
			, A.unit_am as unit_am2
			, A.sup_am as sup_am2
			, A.vat_am as vat_am2
			, A.next_am
		FROM	NEOS.t_exnp_constrade T
			JOIN dj_PURC_REQ_T A
			ON T.trade_seq = A.ABDOCU_T_NO
			JOIN dj_PURC_REQ_B B
			ON A.PURC_REQ_B_ID = B.PURC_REQ_B_ID
			JOIN dj_PURC_REQ_H C
			ON B.PURC_REQ_H_ID = C.PURC_REQ_H_ID
		WHERE 	A.PURC_TR_TYPE = #purcTrType#
		<isNotEmpty property="purcReqId">
		AND C.PURC_REQ_ID	=	#purcReqId#
		</isNotEmpty>
		ORDER BY T.trade_seq ASC;
	</select>
	
	<insert id="AcG20Ex2Gw.makePurcContB" parameterClass="HashMap">
		/*AcG20Ex2Gw.makePurcContB*/
		INSERT INTO dj_PURC_CONT_B (PURC_CONT_ID, PURC_REQ_ID, PURC_REQ_H_ID, PURC_REQ_B_ID, ABDOCU_B_NO, WRITE_EMP_SEQ, WRITE_EMP_IP)
		SELECT #purcContId#, TPR.PURC_REQ_ID, TPRH.PURC_REQ_H_ID, TPRB.PURC_REQ_B_ID, GAB.budget_seq, #empSeq#, #empIp#
		FROM dj_PURC_REQ TPR, dj_PURC_REQ_H TPRH, dj_PURC_REQ_B TPRB, NEOS.t_exnp_consbudget GAB
		WHERE TPR.PURC_REQ_ID = TPRH.PURC_REQ_ID
		AND TPRH.PURC_REQ_H_ID = TPRB.PURC_REQ_H_ID
		AND TPRB.ABDOCU_B_NO = GAB.budget_seq
		AND TPR.PURC_REQ_ID = #purcReqId#
	</insert>
	
	<insert id="AcG20Ex2Gw.makePurcContT" parameterClass="HashMap">
		/*AcG20Ex2Gw.makePurcContT*/
		INSERT INTO dj_PURC_CONT_T
		(
			PURC_CONT_ID, PURC_CONT_B_ID, PURC_REQ_ID, PURC_REQ_H_ID, PURC_REQ_B_ID, 
			PURC_REQ_T_ID, ABDOCU_T_NO, PPS_ID_NO, ITEM_TYPE, ITEM_TYPE_CODE_ID, 
			STANDARD, CONTENTS, START_DATE, END_DATE, PPS_FEES, PURC_TR_TYPE, 
			TR_CD, TR_NM, REG_NB, CEO_NM, ITEM_NM, ITEM_CNT, ITEM_AM, UNIT_AM, SUP_AM, VAT_AM, REMARK, 
			WRITE_EMP_SEQ, WRITE_EMP_IP,
			NEXT_AM
		)
		SELECT #purcContId#, TPCB.PURC_CONT_B_ID, TPCB.PURC_REQ_ID, TPCB.PURC_REQ_H_ID, TPCB.PURC_REQ_B_ID, 
			TPRT.PURC_REQ_T_ID, TPRT.ABDOCU_T_NO, TPRT.PPS_ID_NO, TPRT.ITEM_TYPE, TPRT.ITEM_TYPE_CODE_ID, 
		    TPRT.STANDARD, TPRT.CONTENTS, TPRT.START_DATE, TPRT.END_DATE, TPRT.PPS_FEES, TPRT.PURC_TR_TYPE, 
		    GAT.tr_seq, GAT.tr_name, TPRT.REG_NB, GAT.ceo_name, GAT.item_name, TPRT.item_cnt, TPRT.ITEM_AM, GAT.trade_unit_amt, GAT.trade_std_amt, GAT.trade_vat_amt, GAT.trade_note, 
		    #empSeq#, #empIp#,
		    TPRT.NEXT_AM
		FROM dj_PURC_REQ_T TPRT, dj_PURC_CONT_B TPCB, NEOS.t_exnp_constrade GAT
		WHERE TPRT.PURC_REQ_B_ID = TPCB.PURC_REQ_B_ID
		AND TPRT.ABDOCU_T_NO = GAT.trade_seq
		AND TPRT.PURC_REQ_T_ID NOT IN (
			SELECT DISTINCT A.PURC_REQ_T_ID
			FROM dj_PURC_CONT_T A, dj_PURC_CONT B, dj_PURC_REQ C
			WHERE B.C_DIKEYCODE IS NOT NULL
			AND B.CONT_STEP NOT IN ('002')
			AND A.PURC_CONT_ID = B.PURC_CONT_ID
			AND B.PURC_REQ_ID = C.PURC_REQ_ID
		)
		AND TPCB.PURC_CONT_ID = #purcContId#
	</insert>
	
	<select id="AcG20Ex2Gw.getPurcContB" parameterClass="HashMap" resultClass="abdocu_B">
        /* AcG20Ex2Gw.getPurcContB - mariaDB 결의서 예산리스트 */
        SELECT 
        	A.erp_bgt1_name as ERP_BGT_NM1, 
        	A.erp_bgt2_name as ERP_BGT_NM2, 
        	A.erp_bgt3_name as ERP_BGT_NM3, 
        	A.erp_bgt4_name as ERP_BGT_NM4, 
        	A.erp_budget_seq as ABGT_CD, A.erp_budget_name as ABGT_NM, 
        	A.vat_fg_code as VAT_FG, 
        	B.RETURN_YN, 
        	C.APPLY_AM, 
        	C.OPEN_AM,
        	A.cons_seq as ABDOCU_NO, 
        	A.budget_seq as ABDOCU_B_NO, 
        	B.PURC_REQ_B_ID, 
        	A.budget_note as RMK_DC, 
        	C.PURC_CONT_B_ID, 
        	C.PURC_CONT_ID,
        	D.erp_div_name AS DIV_NM2, 
        	D.mgt_name as MGT_NM, 
        	D.bottom_name as BOTTOM_NM,
            D.erp_div_seq AS DIV_CD2, 
            D.mgt_seq as MGT_CD, 
            D.bottom_seq as BOTTOM_CD,
            D.erp_comp_seq as ERP_CO_CD, 
            D.cons_date as ERP_GISU_DT, 
            '0' as DOCU_MODE, 
            D.erp_gisu_from_date as ERP_GISU_FROM_DT, 
            D.erp_gisu_to_date as ERP_GISU_TO_DT, 
            D.erp_gisu as ERP_GISU,
            C.NEXT_AM
		FROM 
			NEOS.t_exnp_consbudget A, 
			dj_PURC_REQ_B B, 
			dj_PURC_REQ_H H, 
			dj_PURC_CONT_B C, 
			NEOS.t_exnp_conshead D
		WHERE A.budget_seq = C.ABDOCU_B_NO
        AND A.cons_seq = D.cons_seq
        AND B.PURC_REQ_B_ID = C.PURC_REQ_B_ID
        AND B.PURC_REQ_H_ID = H.PURC_REQ_H_ID
        AND C.PURC_CONT_ID = #purcContId#
        ORDER BY A.cons_seq, A.budget_seq
	</select>
	
	<select id="AcG20Ex2Gw.getPurcContHBList" parameterClass="Map" resultClass="abdocu_B">
		/*AcG20Ex2Gw.getPurcContHBList*/
		SELECT 
			A.mgt_name as MGT_NM, 
			A.bottom_name as BOTTOM_NM, 
			B.erp_bgt1_name as ERP_BGT_NM1, 
			B.erp_bgt2_name as ERP_BGT_NM2, 
			B.erp_bgt3_name as ERP_BGT_NM3, 
			B.erp_bgt4_name as ERP_BGT_NM4, 
			B.erp_budget_name as ABGT_NM,
		    C.APPLY_AM,
            D.OPEN_AM,
            D.EXEC_AM, 
            D.REFER_AM, 
            D.LEFT_AM,
            C.NEXT_AM
		FROM NEOS.t_exnp_conshead A, NEOS.t_exnp_consbudget B, dj_PURC_CONT_B C, dj_PURC_REQ_B D
		WHERE A.cons_seq = B.cons_seq
		AND B.budget_seq = C.ABDOCU_B_NO
        AND C.PURC_REQ_B_ID = D.PURC_REQ_B_ID
		AND C.PURC_CONT_ID = #purcContId#
	</select>
	
	<insert id="AcG20Ex2Gw.makeContInspTInfo">
		/*AcG20Ex2Gw.makeContInspTInfo*/
		INSERT INTO dj_PURC_CONT_INSP_T
		(
			PURC_CONT_INSP_ID,
		    PURC_CONT_ID,
		    PURC_CONT_B_ID,
		    PURC_CONT_T_ID,
		    ITEM_CNT,
		    ORG_CNT,
		    STANDARD,
		    ITEM_AM,
		    UNIT_AM,
		    SUP_AM,
		    VAT_AM,
		    PPS_FEES,
		    WRITE_EMP_SEQ,
		    WRITE_EMP_IP,
		    WRITE_DATE
		)
		SELECT
			#purcContInspId#,
		    A.PURC_CONT_ID,
		    A.PURC_CONT_B_ID,
		    A.PURC_CONT_T_ID,
		    A.ITEM_CNT,
		    A.ITEM_CNT,
		    A.STANDARD,
		    A.ITEM_AM,
		    CASE
				WHEN A.PURC_REQ_TYPE = '2'
                THEN (A.ITEM_CNT * A.ITEM_AM) + FLOOR(A.ITEM_CNT * A.ITEM_AM * 0.0054)
                ELSE (A.ITEM_CNT * A.ITEM_AM)
			END AS UNIT_AM,
		    CASE
				WHEN A.VAT_FG = '1'
		        THEN ROUND(ROUND((A.ITEM_CNT * A.ITEM_AM)/1.1 * 10)/10)
		        ELSE (A.ITEM_CNT * A.ITEM_AM)
			END AS SUP_AM,
		    CASE
				WHEN A.VAT_FG = '1'
		        THEN (A.ITEM_CNT * A.ITEM_AM) - ROUND(ROUND((A.ITEM_CNT * A.ITEM_AM)/1.1 * 10)/10)
		        ELSE 0
		    END AS VAT_AM,
		    CASE
				WHEN A.PURC_REQ_TYPE = '2'
                THEN FLOOR(A.ITEM_CNT * A.ITEM_AM * 0.0054)
                ELSE 0
			END AS PPS_FEES,
		    #empSeq#,
			#empIp#,
		    NOW()
		FROM
		(
			SELECT 
				(SELECT PURC_REQ_TYPE_CODE_ID FROM dj_PURC_REQ AA WHERE PURC_REQ_ID = (SELECT PURC_REQ_ID FROM dj_PURC_CONT BB WHERE BB.PURC_CONT_ID = A.PURC_CONT_ID)) AS PURC_REQ_TYPE,
			    A.PURC_CONT_ID,
			    A.PURC_CONT_B_ID,
			    A.PURC_CONT_T_ID,
			    CAST(A.ITEM_CNT AS UNSIGNED) - IFNULL(CAST(B.ITEM_CNT AS UNSIGNED),0) AS ITEM_CNT,
			    A.STANDARD,
			    A.ITEM_AM,
				D.vat_fg_code as VAT_FG
			FROM dj_PURC_CONT_T A
			LEFT OUTER JOIN 
			(
				SELECT A.PURC_CONT_T_ID, SUM(A.ITEM_CNT) AS ITEM_CNT
			    FROM dj_PURC_CONT_INSP_T A, dj_PURC_CONT_INSP B
			    WHERE A.PURC_CONT_INSP_ID = B.PURC_CONT_INSP_ID
			    AND B.C_DIKEYCODE IS NOT NULL
			    AND B.INSP_STATE NOT IN ('002')
			    GROUP BY PURC_CONT_T_ID
			) B
			ON A.PURC_CONT_T_ID = B.PURC_CONT_T_ID
			JOIN dj_PURC_CONT_B C
			ON A.PURC_CONT_B_ID = C.PURC_CONT_B_ID
			JOIN NEOS.t_exnp_consbudget D
			ON C.ABDOCU_B_NO = D.budget_seq
			WHERE PURC_TR_TYPE = '002'
		) A
		WHERE A.PURC_CONT_ID = 
		(SELECT ifnull(b.purc_cont_id, a.purc_cont_id) as purc_cont_id FROM dj_PURC_CONT A
		LEFT JOIN
		(
		SELECT AA.purc_cont_id, AA.purc_cont_id_org, AA.CONT_AM, AA.mod_order_no FROM dj_PURC_CONT AA
		JOIN (SELECT purc_cont_id_org, MAX(mod_order_no) AS mod_order_no FROM dj_PURC_CONT GROUP BY purc_cont_id_org HAVING MAX(mod_order_no) > 0) BB 
		ON AA.purc_cont_id_org = BB.purc_cont_id_org
		AND AA.mod_order_no = BB.mod_order_no
		) B
		ON A.PURC_CONT_ID = B.purc_cont_id_org
		where a.purc_cont_id = #purcContId#)
	</insert>
	
	<insert id="AcG20Ex2Gw.makeContInspTInfo2">
		/*AcG20Ex2Gw.makeContInspTInfo*/
		INSERT INTO dj_PURC_CONT_INSP_T
		(
			PURC_CONT_INSP_ID,
		    PURC_CONT_ID,
		    PURC_CONT_B_ID,
		    PURC_CONT_T_ID,
		    UNIT_AM,
		    ORG_AM,
		    SUP_AM,
		    VAT_AM,
		    WRITE_EMP_SEQ,
		    WRITE_EMP_IP,
		    WRITE_DATE
		)
		SELECT
			#purcContInspId#,
		    A.PURC_CONT_ID,
		    A.PURC_CONT_B_ID,
		    A.PURC_CONT_T_ID,
		    A.UNIT_AM,
		    A.UNIT_AM,
		    CASE
				WHEN A.VAT_FG = '1'
		        THEN ROUND(ROUND((A.UNIT_AM)/1.1 * 10)/10)
		        ELSE (A.UNIT_AM)
			END AS SUP_AM,
		    CASE
				WHEN A.VAT_FG = '1'
		        THEN (A.UNIT_AM) - ROUND(ROUND((A.UNIT_AM)/1.1 * 10)/10)
		        ELSE 0
		    END AS VAT_AM,
		    #empSeq#,
			#empIp#,
		    NOW()
		FROM
		(
			SELECT 
			    A.PURC_CONT_ID,
			    A.PURC_CONT_B_ID,
			    A.PURC_CONT_T_ID,
			    CAST(A.UNIT_AM AS UNSIGNED) - IFNULL(CAST(B.UNIT_AM AS UNSIGNED),0) AS UNIT_AM,
				D.vat_fg_code as VAT_FG
			FROM dj_PURC_CONT_T A
			LEFT OUTER JOIN 
			(
				SELECT A.PURC_CONT_T_ID, SUM(A.UNIT_AM) AS UNIT_AM
			    FROM dj_PURC_CONT_INSP_T A, dj_PURC_CONT_INSP B
			    WHERE A.PURC_CONT_INSP_ID = B.PURC_CONT_INSP_ID
			    AND B.C_DIKEYCODE IS NOT NULL
			    AND B.INSP_STATE NOT IN ('002')
			    GROUP BY PURC_CONT_T_ID
			) B
			ON A.PURC_CONT_T_ID = B.PURC_CONT_T_ID
			JOIN dj_PURC_CONT_B C
			ON A.PURC_CONT_B_ID = C.PURC_CONT_B_ID
			JOIN NEOS.t_exnp_consbudget D
			ON C.ABDOCU_B_NO = D.budget_seq
			WHERE PURC_TR_TYPE = '001'
		) A
		WHERE A.PURC_CONT_ID = 
		(SELECT ifnull(b.purc_cont_id, a.purc_cont_id) as purc_cont_id FROM dj_PURC_CONT A
		LEFT JOIN
		(
		SELECT AA.purc_cont_id, AA.purc_cont_id_org, AA.CONT_AM, AA.mod_order_no FROM dj_PURC_CONT AA
		JOIN (SELECT purc_cont_id_org, MAX(mod_order_no) AS mod_order_no FROM dj_PURC_CONT GROUP BY purc_cont_id_org HAVING MAX(mod_order_no) > 0) BB 
		ON AA.purc_cont_id_org = BB.purc_cont_id_org
		AND AA.mod_order_no = BB.mod_order_no
		) B
		ON A.PURC_CONT_ID = B.purc_cont_id_org
		where a.purc_cont_id = #purcContId#)
	</insert>
	
		<select id="AcG20Ex2Gw.getContInspT" parameterClass="Map" resultClass="egovMap">
		/*AcG20Ex2Gw.getContInspT*/
		SELECT 
			B.ITEM_TYPE AS CONT_ITEM_TYPE,
            B.ITEM_TYPE_CODE_ID AS CONT_ITEM_TYPE_CODE_ID,
			B.ITEM_NM AS CONT_ITEM_NM,
            B.ITEM_CNT AS CONT_ITEM_CNT,
            B.STANDARD AS CONT_STANDARD,
            B.CONTENTS AS CONT_CONTENTS,
            B.ITEM_AM AS CONT_ITEM_AM,
            B.UNIT_AM AS CONT_UNIT_AM,
            B.SUP_AM AS CONT_SUP_AM,
            B.VAT_AM AS CONT_VAT_AM,
            B.PPS_FEES AS CONT_PPS_FEES,
            A.*,
            D.vat_fg_code as VAT_FG
		FROM dj_PURC_CONT_INSP_T A, dj_PURC_CONT_T B, dj_PURC_CONT_B C, NEOS.t_exnp_consbudget D
		WHERE PURC_CONT_INSP_ID = #purcContInspId#
        AND A.PURC_CONT_T_ID = B.PURC_CONT_T_ID
        AND B.PURC_CONT_B_ID = C.PURC_CONT_B_ID
        AND C.ABDOCU_B_NO = D.budget_seq
        AND B.PURC_TR_TYPE = #purcTrType#
	</select>
	
	<select id="AcG20Ex2Gw.getAceptAm" parameterClass="Map" resultClass="Integer">
		/*AcG20Ex2Gw.getAceptAm*/
		SELECT IFNULL(SUM(a.budget_amt),0) AS ACEPT_AM
        FROM NEOS.t_exnp_resbudget A, dj_PURC_CONT_PAY_B B, dj_PURC_CONT_PAY C
        WHERE A.budget_seq = B.ABDOCU_B_NO
        AND B.PURC_CONT_PAY_ID = C.PURC_CONT_PAY_ID
        AND C.C_DIKEYCODE IS NOT NULL
        AND C.DOC_STATE IN ('001','003')
        AND C.PURC_CONT_ID = #purcContIdOrg#
        AND A.conffer_budget_seq = #abdocuBNo#
	</select>
	
	<update id="AcG20Ex2Gw.resetAbdocuTMod" parameterClass="Map">
		/*AcG20Ex2Gw.resetAbdocuTMod*/
		UPDATE 
			NEOS.t_exnp_constrade
		SET
			item_cnt = '1',
			trade_unit_amt = 0,
			trade_std_amt = 0,
			trade_vat_amt = 0
		WHERE trade_seq IN
		(
				SELECT trade_seq
				FROM dj_PURC_CONT_T
				WHERE PURC_CONT_ID = (SELECT PURC_CONT_ID_ORG FROM dj_PURC_CONT WHERE PURC_CONT_ID = #purcContId#)
		)
	</update>
	
	<update id="AcG20Ex2Gw.updateAbdocuTMod" parameterClass="Map">
		/*AcG20Ex2Gw.updateAbdocuTMod*/
		UPDATE 
			NEOS.t_exnp_constrade A, 
			(
				SELECT A.ABDOCU_T_NO, A.ITEM_NM,  A.ITEM_CNT, A.ITEM_AM, A.UNIT_AM, A.SUP_AM, A.VAT_AM, A.REMARK
				FROM dj_PURC_CONT_T A
				WHERE A.PURC_CONT_ID =#purcContId#
			) B
		SET
			A.item_cnt = '1',
			A.trade_unit_amt = B.UNIT_AM,
			A.trade_std_amt = B.SUP_AM,
			A.trade_vat_amt = B.VAT_AM
		WHERE A.trade_seq = B.ABDOCU_T_NO
	</update>
	
	<update id="AcG20Ex2Gw.resetAbdocuT" parameterClass="Map">
		/*AcG20Ex2Gw.resetAbdocuT*/
		UPDATE 
			NEOS.t_exnp_constrade
		SET
			item_cnt = '1',
			trade_unit_amt = 0,
			trade_std_amt = 0,
			trade_vat_amt = 0
		WHERE trade_seq IN
		(
				SELECT trade_seq
				FROM dj_PURC_REQ A, dj_PURC_REQ_H B, dj_PURC_REQ_B C, dj_PURC_REQ_T D
				WHERE A.PURC_REQ_ID = B.PURC_REQ_ID
				AND B.PURC_REQ_H_ID = C.PURC_REQ_H_ID
				AND C.PURC_REQ_B_ID = D.PURC_REQ_B_ID
                AND A.PURC_REQ_ID = #purcReqId#
                AND C.RETURN_YN = 'Y'
		)
	</update>
	
	<update id="AcG20Ex2Gw.updateAbdocuT" parameterClass="Map">
		/*AcG20Ex2Gw.updateAbdocuT*/
		UPDATE 
			NEOS.t_exnp_constrade A, 
			(
				SELECT A.ABDOCU_T_NO, A.ITEM_NM,  A.ITEM_CNT, A.ITEM_AM, A.UNIT_AM, A.SUP_AM, A.VAT_AM, A.REMARK
				FROM dj_PURC_CONT_T A, dj_PURC_CONT B, dj_PURC_REQ_B C
				WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
				AND B.C_DIKEYCODE IS NOT NULL
				AND B.CONT_STEP NOT IN ('001','002')
				AND A.PURC_REQ_ID = #purcReqId#
				AND C.RETURN_YN = 'Y'
	    		AND A.PURC_REQ_B_ID = C.PURC_REQ_B_ID
			) B
		SET
			A.item_cnt = '1',
			A.trade_unit_amt = B.UNIT_AM,
			A.trade_std_amt = B.SUP_AM,
			A.trade_vat_amt = B.VAT_AM
		WHERE A.trade_seq = B.ABDOCU_T_NO
	</update>

	<update id="AcG20Ex2Gw.updateAbdocuB_ApplyAm_purc" parameterClass="Map">
	    /* AcG20Ex2Gw.updateAbdocuB_ApplyAm_purc - mariaDB */
	    UPDATE
	    	NEOS.t_exnp_consbudget A,
	    	(
	    		SELECT
	    			AA.ABDOCU_B_NO
	    		FROM dj_PURC_CONT_B AA, dj_PURC_REQ_B BB
	    		WHERE AA.PURC_REQ_ID = #purcReqId#
	    		AND BB.RETURN_YN = 'Y'
	    		AND AA.PURC_REQ_B_ID = BB.PURC_REQ_B_ID
	    	) B
	    SET		A.budget_amt = (SELECT SUM(trade_unit_amt) FROM NEOS.t_exnp_constrade WHERE budget_seq = B.ABDOCU_B_NO),
	    		A.budget_std_amt = (SELECT SUM(trade_std_amt) FROM NEOS.t_exnp_constrade WHERE budget_seq = B.ABDOCU_B_NO),
	    		A.budget_tax_amt = (SELECT SUM(trade_vat_amt) FROM NEOS.t_exnp_constrade WHERE budget_seq = B.ABDOCU_B_NO)
	    WHERE A.budget_seq	= B.ABDOCU_B_NO
	</update>
	
    <!-- 비영리 회계 - 품의서 반환 / 취소 -->
	<update id="AcG20Ex2Gw.updateConsConfferStatus" parameterClass="java.util.HashMap">
		/* AcG20Ex2Gw.updateConsConfferStatus */
		/* 품의서 반환 / 취소 진행 */	
		UPDATE neos.t_exnp_consdoc
		SET	conffer_return_yn 			= #confferReturn# 
			, conffer_return_name 		= #empName#
			, conffer_return_emp_seq 	= #empSeq#
		WHERE	cons_doc_seq = #consDocSeq#;
	</update>
	
	<!-- 비영리 회계 - 품의서 반환 / 취소 -->
	<update id="AcG20Ex2Gw.updateConsConfferBudgetStatus" parameterClass="java.util.HashMap">
		/* AcG20Ex2Gw.updateConsConfferBudgetStatus */
		/* 품의서 예산 반환 / 취소 진행 */	
		UPDATE	neos.t_exnp_consbudget		 
		SET	conffer_budget_return_yn			= #confferReturn#
			, conffer_budget_return_emp_seq		= #empSeq#
			, conffer_budget_return_emp_name	= #empName#
		WHERE	budget_seq = #abdocuBNo#
	</update>	
	
	<select id="AcG20Ex2Gw.purcContPayListData" parameterClass="Map" resultClass="egovMap">
		/*AcG20Ex2Gw.purcContPayListData*/
		SELECT 
			C.C_DITITLE AS TITLE,
            CAST(CAST(D.C_DIWRITEDAY AS DATE) AS CHAR(10)) AS REG_DT,
            A.DOC_SEQ AS C_DIKEYCODE,
            A.doc_status AS DOC_STATE,
            (SELECT detail_name  FROM neos.t_co_code_detail_multi WHERE code = 'COM109' AND detail_code = A.doc_status and lang_code = 'kr') AS DOC_STATE_NM,
            IFNULL(NEOS.F_GETDOCNUMBER(A.DOC_SEQ),'') AS DOC_NO,
            (SELECT SUM(AA.budget_amt) FROM NEOS.t_exnp_resbudget AA WHERE AA.res_doc_seq = A.res_doc_seq) AS APPLY_AM,
            E.payment_type AS PAYMENT_TYPE
        FROM NEOS.A_DOCINFO C, NEOS.A_DRAFTINFO D, NEOS.t_exnp_resdoc A, dj_purc_cont_pay E
        WHERE A.DOC_SEQ = C.C_DIKEYCODE
        AND C.C_DIKEYCODE = D.C_DIKEYCODE
        AND A.conffer_doc_seq = #consDocSeq#
        AND A.res_doc_seq = E.res_doc_seq
        ORDER BY a.res_doc_seq DESC
        LIMIT   $skip$ , $pageSize$
	</select>
	
	<select id="AcG20Ex2Gw.purcContPayListDataTotal" parameterClass="Map" resultClass="String">
		/*AcG20Ex2Gw.purcContPayListDataTotal*/
		SELECT 
			COUNT(A.res_doc_seq)
         FROM NEOS.A_DOCINFO C, NEOS.A_DRAFTINFO D, NEOS.t_exnp_resdoc A
        WHERE A.DOC_SEQ = C.C_DIKEYCODE
        AND C.C_DIKEYCODE = D.C_DIKEYCODE
        AND A.conffer_doc_seq = #consDocSeq#
	</select>
	
	<select id="AcG20Ex2Gw.checkPurcContPayComplete" parameterClass="Map" resultClass="Integer">
		/*AcG20ExGw.checkPurcContPayComplete*/
		SELECT COUNT(conffer_doc_seq) AS APPRO_CNT
		FROM NEOS.t_exnp_resdoc
		WHERE doc_seq IS NOT NULL
		AND doc_status IN ('001', '002', '003')
		AND conffer_doc_seq = #consDocSeq#
	</select>
	
	<select id="AcG20Ex2Gw.getMainGrid" parameterClass="Map" resultClass="HashMap">
		/*AcG20Ex2Gw.getMainGrid*/
		SELECT dpr.purc_req_id
			 , dpc.purc_cont_id
			 , dpc.c_dikeycode
			 , SUBSTR(dpr.purc_req_type, 1, 2) AS purc_req_type
			 , dpr.purc_req_type_code_id
    		 , dpr.form_id
		     , ar.c_ridocfullnum
		     , dpc.cont_title
		     , (
				SELECT emp_name
		        FROM neos.v_user_info
		        WHERE emp_seq = dpr.requester_emp_seq
		     ) AS requester_emp_name
		     , (
				SELECT SUBSTR(dept_name, 1, 2)
		        FROM neos.v_user_info
		        WHERE emp_seq = dpr.requester_emp_seq
		     ) AS requester_dept_name
			 , gah.mgt_name as mgt_nm
		     , dpc.tr_nm
		     , CASE WHEN dpc.reg_nb != '' THEN 
				CONCAT(SUBSTR(dpc.reg_nb, 1, 3), '-', SUBSTR(dpc.reg_nb, 4, 2), '-', SUBSTR(dpc.reg_nb, 6, 5))
			 ELSE ''
		     END AS reg_nb
		     , (
				SELECT code_kr
		        FROM common_code
		        WHERE GROUP_CODE = 'TR_PLACE'
					AND CODE = dpr.tr_place
		     ) AS tr_place
		     , dpr.reg_date as purc_req_date
		     <![CDATA[
		     , FORMAT(
		     	CASE
					WHEN dpr.cont_type_code_id = '002' THEN dpr.basic_am
			        ELSE dpc.basic_am
				END, 0) AS basic_am
			 ]]>
		     , CASE WHEN dpr.cont_type_code_id > '001' THEN CONCAT(dpr.cont_type, '계약')
		     ELSE dpr.cont_type
		     END AS cont_type
		     , CASE WHEN dpc.cont_date2 IS NOT NULL THEN dpc.cont_date2
		     ELSE dpc.cont_date
		     END AS cont_date
		     , FORMAT(dpc.cont_am, 0) AS cont_am
		     , CONCAT(TRUNCATE(dpc.cont_am /
		     	<![CDATA[
		     	CASE
					WHEN dpr.cont_type_code_id = '002' THEN dpr.basic_am
			        ELSE dpc.basic_am
				END
				]]>
			 	* 100, 3), '%') AS rate
		     , CASE WHEN dpc.cont_start_date2 IS NOT NULL THEN dpc.cont_start_date2
		     ELSE dpc.cont_start_date
		     END AS cont_start_date
		     , CASE 
				WHEN dpc.cont_end_date2 IS NOT NULL THEN dpc.cont_end_date2
				WHEN dpc.cont_end_date IS NOT NULL THEN dpc.cont_end_date
				ELSE 
					CASE
						WHEN dpc.cont_date2 IS NOT NULL THEN DATE_ADD(dpc.cont_date2, INTERVAL dpc.cont_term DAY)
		                ELSE DATE_ADD(dpc.cont_date, INTERVAL dpc.cont_term DAY)
					END
		     END AS cont_end_date 
		     , MAX(dpci.insp_date) AS insp_date
		FROM dj_purc_req dpr
			INNER JOIN dj_purc_req_h dprh
				ON dpr.purc_req_id = dprh.purc_req_id
			INNER JOIN dj_purc_cont dpc
				ON dpr.purc_req_id = dpc.purc_req_id
			LEFT JOIN dj_purc_cont_insp dpci
				ON dpc.purc_cont_id = dpci.purc_cont_id
		        AND dpci.active = 'Y'
		        AND dpci.insp_state = '003'
			INNER JOIN neos.a_recordinfo ar
				ON dpc.c_dikeycode = ar.c_dikeycode
			INNER JOIN neos.t_exnp_conshead gah
				ON dprh.abdocu_no = gah.cons_seq
		WHERE dpr.active = 'Y' AND dpc.active = 'Y' AND dprh.active = 'Y' 
			AND DATE_FORMAT(dpc.cont_date, '%Y') = #searchDt#
			AND dpc.c_dikeycode IS NOT NULL
		<isNotEmpty property="txtContTitle">
			AND CONT_TITLE LIKE CONCAT('%', #txtContTitle#, '%')
		</isNotEmpty>
		<isNotEmpty property="userSeq">
			AND requester_emp_seq = #userSeq#
		</isNotEmpty>
		GROUP BY dpc.purc_cont_id
		LIMIT $skip$, $pageSize$
	</select>
	
	<select id="AcG20Ex2Gw.getMainGridTotal" parameterClass="Map" resultClass="int">
		/*AcG20Ex2Gw.getMainGridTotal*/
		SELECT COUNT(1) 
		FROM (
			SELECT dpr.purc_req_id
			     , MAX(dpci.insp_date) AS insp_date
			FROM dj_purc_req dpr
				INNER JOIN dj_purc_req_h dprh
					ON dpr.purc_req_id = dprh.purc_req_id
				INNER JOIN dj_purc_cont dpc
					ON dpr.purc_req_id = dpc.purc_req_id
				LEFT JOIN dj_purc_cont_insp dpci
					ON dpc.purc_cont_id = dpci.purc_cont_id
			        AND dpci.active = 'Y'
			        AND dpci.insp_state = '003'
				INNER JOIN neos.a_recordinfo ar
					ON dpc.c_dikeycode = ar.c_dikeycode
				INNER JOIN neos.t_exnp_conshead gah
					ON dprh.abdocu_no = gah.cons_seq
			WHERE dpr.active = 'Y' AND dpc.active = 'Y' AND dprh.active = 'Y' 
				AND DATE_FORMAT(dpc.cont_date, '%Y') = #searchDt#
				AND dpc.c_dikeycode IS NOT NULL
			<isNotEmpty property="txtContTitle">
				AND CONT_TITLE LIKE CONCAT('%', #txtContTitle#, '%')
			</isNotEmpty>
			<isNotEmpty property="userSeq">
				AND requester_emp_seq = #userSeq#
			</isNotEmpty>
			GROUP BY dpc.purc_cont_id
		) CNT
	</select>
	
	<insert id="AcG20Ex2Gw.insertPurcReqBidding" parameterClass="Map">
		/*AcG20Ex2Gw.insertPurcReqBidding*/
		INSERT INTO dj_purc_req_bidding
		(purc_req_id, title, budget_am, dept_nm, dept_seq, parent_dept_nm, parent_dept_seq, fr_dt, to_dt, bidding_type, write_emp_seq, write_date)
		VALUES
		(#purc_req_id#, #title#, #budget_am#, #dept_nm#, #dept_seq#, #parent_dept_nm#, #parent_dept_seq#, replace(#fr_dt#, '-', ''), replace(#to_dt#, '-', ''), #bidding_type#, #write_emp_seq#, now())
		<selectKey resultClass="String" keyProperty="purc_req_bidding_id" >
	        SELECT MAX(purc_req_bidding_id) FROM dj_purc_req_bidding       
	    </selectKey>
	</insert>
	
	<select id="AcG20Ex2Gw.purcBiddingData" parameterClass="Map" resultClass="java.util.HashMap">
		/*AcG20Ex2Gw.purcBiddingData*/
		SELECT 
			A.title
			, A.budget_am
			, A.PURC_REQ_BIDDING_ID
			, B.appr_status
			, c.c_ridocfullnum
			, B.appr_dikey
			, D.c_diwriteday
			, (SELECT detail_name FROM neos.t_co_code_detail_multi where code = 'COM109' and lang_code = 'kr' and detail_code = d.c_distatus LIMIT 1) as c_distatus_nm
			, (SELECT code_kr FROM common_code WHERE GROUP_CODE = 'PURC_REQ_STATE' AND CODE = A.BIDDING_TYPE LIMIT 1) as bidding_type_nm
		FROM dj_purc_req_bidding A, neos.erpgwlink B, neos.a_recordinfo C, neos.a_draftinfo d
		WHERE A.active = 'Y'
		AND B.DOCX_NUMB LIKE CONCAT('%_', A.PURC_REQ_ID, '_', A.BIDDING_TYPE, '_', A.PURC_REQ_BIDDING_ID)
		AND B.appr_dikey = c.c_dikeycode
		AND b.appr_dikey = d.c_dikeycode
		AND A.PURC_REQ_ID = #purcReqId#
		UNION
        SELECT 
			A.cont_title
			, A.cont_am
            , 999999999999999
			, B.appr_status            
            , c.c_ridocfullnum
            , B.appr_dikey
            , D.c_diwriteday
			, (SELECT detail_name FROM neos.t_co_code_detail_multi where code = 'COM109' and lang_code = 'kr' and detail_code = d.c_distatus LIMIT 1) as c_distatus_nm
			, '계약체결보고' as bidding_type_nm
		FROM dj_purc_cont A, neos.erpgwlink B, neos.a_recordinfo C, neos.a_draftinfo d
		WHERE A.active = 'Y'
		AND B.DOCX_NUMB LIKE CONCAT('%tpfContRep', A.PURC_CONT_ID)
		AND B.appr_dikey = c.c_dikeycode
		AND b.appr_dikey = d.c_dikeycode
		AND A.PURC_REQ_ID = #purcReqId#
		UNION
		select 
			A.purc_req_title,
		    A.cont_am,
		    999999999999998,
		    '160',
		    '기술협상',
		    A.purc_req_id,
		    date_format(A.nego_date, '%Y%m%d'),
		    '제출',
		    '기술협상' AS bidding_type_nm
		from dj_purc_req A
		where A.cont_type_code_id = '001' 
		and A.req_state in ('169', '004', '006', '007', '008', '009')
		AND A.PURC_REQ_ID = #purcReqId#
		ORDER BY PURC_REQ_BIDDING_ID DESC
	</select>
	
	<select id="AcG20Ex2Gw.purcBiddingDataTotal" parameterClass="Map" resultClass="int">
		/*AcG20Ex2Gw.purcBiddingDataTotal*/
		SELECT COUNT(*)
		FROM dj_purc_req_bidding A, neos.erpgwlink B, neos.a_recordinfo C, neos.a_draftinfo d
		WHERE A.active = 'Y'
		AND B.DOCX_NUMB LIKE CONCAT('%_', A.PURC_REQ_ID, '_', A.BIDDING_TYPE, '_', A.PURC_REQ_BIDDING_ID)
		AND B.appr_dikey = c.c_dikeycode
		AND b.appr_dikey = d.c_dikeycode
		AND A.PURC_REQ_ID = #purcReqId#
	</select>
	
	<select id="AcG20Ex2Gw.checkPurcBiddingApproval" parameterClass="Map" resultClass="int">
		/*AcG20Ex2Gw.checkPurcBiddingApproval*/
		SELECT COUNT(*)
		FROM dj_purc_req_bidding A, neos.erpgwlink B, neos.a_recordinfo C, neos.a_draftinfo d
		WHERE A.active = 'Y'
		AND B.DOCX_NUMB LIKE CONCAT('%_', A.PURC_REQ_ID, '_', A.BIDDING_TYPE, '_', A.PURC_REQ_BIDDING_ID)
		AND B.appr_dikey = c.c_dikeycode
		AND b.appr_dikey = d.c_dikeycode
		AND d.c_distatus in ('001', '002', '003', '004')
		AND A.PURC_REQ_ID = #purcReqId#
	</select>
	
	<select id="AcG20Ex2Gw.selectPurcReqDept" parameterClass="Map" resultClass="java.util.HashMap">
		/*AcG20Ex2Gw.selectPurcReqDept*/
		SELECT
			A.PURC_REQ_DEPT_SEQ, A.PURC_REQ_DEPT_NAME, C.DEPT_SEQ AS PARENT_DEPT_SEQ, C.DEPT_NAME AS PARENT_DEPT_NAME
        FROM DJ_PURC_REQ A
        LEFT JOIN
        NEOS.T_CO_DEPT B
        ON A.PURC_REQ_DEPT_SEQ = B.DEPT_SEQ
        LEFT JOIN
        NEOS.T_CO_DEPT_MULTI C
        ON B.PARENT_DEPT_SEQ = C.DEPT_SEQ
        AND C.LANG_CODE = 'kr'
        WHERE  PURC_REQ_ID = #purcReqId#
        LIMIT 1
	</select>
	
	<insert id="AcG20Ex2Gw.insertPurcReqBiddingEvalTr" parameterClass="Map">
		/*AcG20Ex2Gw.insertPurcReqBiddingEvalTr*/
		INSERT INTO DJ_PURC_REQ_BIDDING_T
		(purc_req_id, tr_cd, tr_nm, reg_nb, social_biz1, social_biz2, social_biz3, social_biz4, social_biz5, social_biz6, social_biz7, social_biz8, es_date)
		values
		(#purc_req_id#, #tr_cd#, #tr_nm#, #reg_nb#, #biz2#, #biz2#, #biz3#, #biz4#, #biz5#, #biz6#, #biz7#, #biz8#, #es_date#)
		<selectKey resultClass="String" keyProperty="purc_req_bidding_t_id" >
	        SELECT MAX(purc_req_bidding_t_id) FROM DJ_PURC_REQ_BIDDING_T       
	    </selectKey>
	</insert>
	
	<insert id="AcG20Ex2Gw.insertPurcReqBiddingEvalSubTr" parameterClass="Map">
		/*AcG20Ex2Gw.insertPurcReqBiddingEvalSubTr*/
		INSERT INTO DJ_PURC_REQ_BIDDING_T_SUB
		(purc_req_bidding_t_id, purc_req_id, tr_cd, tr_nm, reg_nb, social_biz1, social_biz2, social_biz3, social_biz4, social_biz5, social_biz6, social_biz7, social_biz8, es_date)
		values
		(#purc_req_bidding_t_id#, #purc_req_id#, #tr_cd#, #tr_nm#, #reg_nb#, #subBiz1#, #subBiz2#, #subBiz3#, #subBiz4#, #subBiz5#, #subBiz6#, #subBiz7#, #subBiz8#, #sub_es_date#)
	</insert>
	
	<delete id="AcG20Ex2Gw.deletePurcReqBiddingEvalTr" parameterClass="Map">
		/*AcG20Ex2Gw.deletePurcReqBiddingEvalTr*/
		DELETE FROM DJ_PURC_REQ_BIDDING_T
		WHERE purc_req_id = #purc_req_id#
	</delete>
	
	<delete id="AcG20Ex2Gw.deletePurcReqBiddingEvalSubTr" parameterClass="Map">
		/*AcG20Ex2Gw.deletePurcReqBiddingEvalSubTr*/
		DELETE FROM DJ_PURC_REQ_BIDDING_T_SUB
		WHERE purc_req_id = #purc_req_id#
	</delete>
	
	<select id="AcG20Ex2Gw.selectPurcReqBiddingEvalTr" parameterClass="Map" resultClass="java.util.HashMap">
		/*AcG20Ex2Gw.selectPurcReqBiddingEvalTr*/
		SELECT * FROM DJ_PURC_REQ_BIDDING_T
		WHERE purc_req_id = #purc_req_id#
	</select>
	
	<select id="AcG20Ex2Gw.selectPurcReqBiddingEvalSubTr" parameterClass="Map" resultClass="java.util.HashMap">
		/*AcG20Ex2Gw.selectPurcReqBiddingEvalSubTr*/
		SELECT * FROM DJ_PURC_REQ_BIDDING_T_SUB
		WHERE purc_req_id = #purc_req_id#
	</select>
	
	<select id="AcG20Ex2Gw.selectPurcReqBidding" parameterClass="Map" resultClass="java.util.HashMap">
		/*AcG20Ex2Gw.selectPurcReqBidding*/
		SELECT * FROM DJ_PURC_REQ_BIDDING
		WHERE purc_req_id = #purc_req_id#
		AND purc_req_bidding_id = #purc_req_bidding_id#
		ORDER BY purc_req_bidding_id DESC
		LIMIT 1
	</select>
	
	<select id="AcG20Ex2Gw.selectPurcReqBiddingRefer" parameterClass="Map" resultClass="java.util.HashMap">
		/*AcG20Ex2Gw.selectPurcReqBiddingRefer*/
		SELECT A.*, B.appr_end_date
		FROM dj_purc_req_bidding A, neos.erpgwlink B
		WHERE A.active = 'Y'
		AND B.DOCX_NUMB LIKE CONCAT('%_', A.PURC_REQ_ID, '_', A.BIDDING_TYPE, '_', A.PURC_REQ_BIDDING_ID)
		AND B.APPR_STATUS = '008'
		AND A.PURC_REQ_ID = #purc_req_id#
		AND A.BIDDING_TYPE = #bidding_type#
		ORDER BY PURC_REQ_BIDDING_ID DESC
		LIMIT 1
	</select>
	
	<select id="AcG20Ex2Gw.selectRefDoc" parameterClass="Map" resultClass="String">
		/*AcG20Ex2Gw.selectRefDoc*/
		SELECT appr_dikey FROM neos.erpgwlink
		WHERE docx_numb = #approKey#
		limit 1
	</select>
	
	<update id="AcG20Ex2Gw.updatePurcContModReturn">
		/*AcG20Ex2Gw.updatePurcContModReturn*/
		UPDATE dj_purc_cont
		SET
			mod_return_reason = #returnReason#
		WHERE purc_cont_id = #purcContId#
	</update>
	
	<insert id="AcG20Ex2Gw.insertResTrade" parameterClass="Map">
		/*AcG20Ex2Gw.insertResTrade*/
		INSERT INTO neos.t_exnp_restrade
		(
			res_doc_seq, res_seq, budget_seq,
			emp_name, tr_seq, tr_name, tr_addr, ctr_seq, ceo_name, 
			trade_amt, trade_std_amt, trade_vat_amt,
			business_nb, ba_nb, btr_seq, btr_name, depositor,
			create_seq, create_date,
			trade_note
		)
		VALUES
		(
			#resDocSeq#, #resSeq#, #budgetSeq#,
			#emp_nm#, #TR_CD#, #TR_NM#, #ADDR#, #TR_CD#, #CEO_NM#, 
			#payAm#, #payAm#, 0,
			#REG_NB#, #BA_NB#, #JIRO_CD#, #JIRO_NM#, #DEPOSITOR#,
			#emp_seq#, now(),
			''
		)
	</insert>
	
	<delete id="AcG20Ex2Gw.deletePurcContPay2" parameterClass="Map">
		/*AcG20Ex2Gw.deletePurcContPay2*/
		DELETE FROM dj_purc_cont_pay WHERE res_doc_seq = #resDocSeq#
	</delete>
	
	<insert id="AcG20Ex2Gw.insertPurcContPay2" parameterClass="Map">
		/*AcG20Ex2Gw.insertPurcContPay2*/
		INSERT INTO dj_purc_cont_pay
		(
			purc_cont_id, payment_type, payment_type_code_id, write_emp_seq, write_date, active, res_doc_seq
		)
		VALUES
		(
			#purcContId#, #paymentType#, #paymentTypeId#, #emp_seq#, now(), 'Y', #resDocSeq#
		)
	</insert>
	
	<select id="AcG20Ex2Gw.selectCommitteeSeq" parameterClass="Map" resultClass="HashMap">
		SELECT COMMITTEE_SEQ , EVAL_S_DATE, EVAL_E_DATE, EVAL_S_TIME, EVAL_E_TIME, EVAL_PLACE
		FROM CUST_EPIS.DJ_EVAL_COMMITTEE
		WHERE JANG_CONFIRM_YN = 'Y'
		AND ACTIVE = 'Y'
		AND PURC_REQ_ID = #purc_req_id#
		ORDER BY COMMITTEE_SEQ DESC
		LIMIT 1
	</select>
	
	<procedure id="AcG20Ex2Gw.selectPurcReqBiddingEval" parameterClass="HashMap" resultClass="HashMap">
		call SP_EVAL_RESULT_DATA(#committeInfo.COMMITTEE_SEQ#)
	</procedure>
	
	<select id="AcG20Ex2Gw.selectPurcReqBiddingT" parameterClass="Map" resultClass="HashMap">
		/*AcG20Ex2Gw.selectPurcReqBiddingT*/
		select * from dj_purc_req_bidding_t
		where purc_req_id = #purcReqId#
		and tr_cd = #trCd#
		order by purc_req_bidding_t_id desc
		limit 1
	</select>
	
	<select id="AcG20Ex2Gw.selectPurcReqBiddingTSub" parameterClass="Map" resultClass="HashMap">
		/*AcG20Ex2Gw.selectPurcReqBiddingTSub*/
		select * from dj_purc_req_bidding_t_sub
		where purc_req_bidding_t_id = #purc_req_bidding_t_id#
	</select>
	
	<update id="AcG20Ex2Gw.updatePurcContTr" parameterClass="HashMap">
		/*AcG20Ex2Gw.updatePurcContTr*/
		UPDATE dj_PURC_CONT
		SET
			TR_NM = #trNm#,
			TR_CD = #trCd#,
			REG_NB = #regNb#,
			CEO_NM = #ceoNm#
		WHERE PURC_CONT_ID = #purcContId#
	</update>
	
	<select id="AcG20Ex2Gw.selectFormInfo" parameterClass="HashMap" resultClass="HashMap">
		/*AcG20Ex2Gw.selectFormInfo*/
		SELECT * FROM NEOS.A_TEMPLATEINFO
		WHERE FORM_D_TP = #purcReqType#
		ORDER BY C_TIKEYCODE DESC
		LIMIT 1
	</select>
	
	<update id="AcG20Ex2Gw.updateResHeadNote" parameterClass="HashMap">
		/*AcG20Ex2Gw.updateResHeadNote*/
		UPDATE NEOS.T_EXNP_RESHEAD
		SET RES_NOTE = #resNote#
		WHERE RES_DOC_SEQ = #resDocSeq#
	</update>
	
	<update id="AcG20Ex2Gw.updateResBudgetNote" parameterClass="HashMap">
		/*AcG20Ex2Gw.updateResBudgetNote*/
		UPDATE NEOS.T_EXNP_RESBUDGET
		SET BUDGET_NOTE = #resNote#
		WHERE RES_DOC_SEQ = #resDocSeq#
	</update>
	
	<select id="AcG20Ex2Gw.selectPurcReqBiddingEvalTrSocialBiz" parameterClass="HashMap" resultClass="HashMap">
		/*AcG20Ex2Gw.selectPurcReqBiddingEvalTrSocialBiz*/
		SELECT 
			* 
		FROM
			(SELECT purc_req_bidding_t_id, tr_cd, social_biz1, social_biz2, social_biz3, social_biz4, social_biz5, social_biz6, social_biz7 ,social_biz8, reg_dt, es_date
			FROM DJ_PURC_REQ_BIDDING_T
			UNION ALL 
			SELECT purc_req_bidding_t_id, tr_cd, social_biz1, social_biz2, social_biz3, social_biz4, social_biz5, social_biz6, social_biz7 ,social_biz8, reg_dt, es_date
			FROM DJ_PURC_REQ_BIDDING_T_SUB
			) A
		WHERE TR_CD = #trCd#
		ORDER BY REG_DT DESC
		LIMIT 1
	</select>
	
	<select id="AcG20Ex2Gw.purcContModReqCheck" parameterClass="HashMap" resultClass="Integer">
		/*AcG20Ex2Gw.purcContModReqCheck*/
		select count(*)
		from dj_purc_cont a
		where a.mod_req_temp = 'Y'
		and (a.mod_return_reason is null or a.mod_return_reason = '')
		and a.active != 'Y'
		and a.mod_com_date is null
		and a.purc_cont_id_org = #purcContId#
	</select>
</sqlMap>