<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="AcG20ExGw">

    <typeAlias alias="abdocu_H" type="ac.g20.ex.vo.Abdocu_H" />
    <typeAlias alias="abdocu_B" type="ac.g20.ex.vo.Abdocu_B" />
    <typeAlias alias="abdocu_T" type="ac.g20.ex.vo.Abdocu_T" />
    <typeAlias alias="abdocu_D" type="ac.g20.ex.vo.Abdocu_D" />
    <typeAlias alias="abdocu_TH" type="ac.g20.ex.vo.Abdocu_TH" />
    <typeAlias alias="abdocu_TD" type="ac.g20.ex.vo.Abdocu_TD" />
    <typeAlias alias="abdocu_TD2" type="ac.g20.ex.vo.Abdocu_TD2" />
    <typeAlias alias="aCardVO" type="ac.g20.ex.vo.ACardVO" />
    <typeAlias alias="payDataVO" type="ac.g20.ex.vo.PayDataVO" />
    <typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
    <typeAlias alias="proposalVO" type="ac.g20.ex.vo.proposalVO"/>
    
    <select id="AcG20ExGw.proposalEval" resultClass="proposalVO">
    	SELECT * 
    	FROM CUST_EPIS.DJ_PURC_REQ_BIDDING_T
		WHERE PURC_REQ_BIDDING_T_ID IN (
			SELECT MAX(PURC_REQ_BIDDING_T_ID) 
			FROM CUST_EPIS.DJ_PURC_REQ_BIDDING_T A 
			GROUP BY TR_CD 
			ORDER BY PURC_REQ_BIDDING_T_ID)
    </select>
    
    <select id="AcG20ExGw.proposalEvalTotal" resultClass="java.lang.Integer">
    	SELECT COUNT(*) 
    	FROM CUST_EPIS.DJ_PURC_REQ_BIDDING_T
		WHERE PURC_REQ_BIDDING_T_ID IN (
			SELECT MAX(PURC_REQ_BIDDING_T_ID) 
			FROM CUST_EPIS.DJ_PURC_REQ_BIDDING_T A 
			GROUP BY TR_CD 
			ORDER BY PURC_REQ_BIDDING_T_ID)
    </select>
    
    <select id="AcG20ExGw.getAbdocu_H" parameterClass="abdocu_H" resultClass="abdocu_H">
        /* AcG20ExGw.Abdocu_H_SELECT - mariaDB */
        SELECT *
        FROM	NEOS.G20_ABDOCU_H
        WHERE	ABDOCU_NO	=	#abdocu_no#
    </select>
    
	<insert id="AcG20ExGw.insertAbdocu_H" parameterClass="abdocu_H">
        /* AcG20ExGw.insertAbdocu_H - mariaDB */
        INSERT INTO NEOS.G20_ABDOCU_H 
        (
			  ABDOCU_NO
			, DOCU_MODE
			, abdocu_no_reffer
			, DOCU_FG
			, DOCU_FG_TEXT
			, ERP_CO_CD
			, ERP_CO_NM
			, ERP_YEAR, ERP_GISU, ERP_GISU_DT    /* 회계년도 , 기수, 회계일자 */
			, ERP_GISU_FROM_DT
			, ERP_GISU_TO_DT
			, ERP_DIV_NM, ERP_DIV_CD
			, ERP_DEPT_NM, ERP_DEPT_CD
			, ERP_EMP_NM, ERP_EMP_CD 
			, MGT_NM, MGT_CD
			, BOTTOM_NM, BOTTOM_CD
			, BTR_NM, BTR_CD, BTR_NB
			, RMK_DC
			, EDIT_PROC
			, IT_BUSINESSLINK
			, INSERT_ID, INSERT_DT
<!-- 			, HC_NM, HC_CD -->
        )
        VALUES
        (
			  neos.nextval('abdocuNo')
			, #docu_mode#
			, #abdocu_no_reffer#
			, #docu_fg#
			, #docu_fg_text#
			, #erp_co_cd#
			, #erp_co_nm#
			, #erp_year#, #erp_gisu#, #erp_gisu_dt#
			, #erp_gisu_from_dt#, #erp_gisu_to_dt#
			, #erp_div_nm#, #erp_div_cd#
			, #erp_dept_nm#, #erp_dept_cd#
			, #erp_emp_nm#, #erp_emp_cd# 
			, #mgt_nm_encoding#, #mgt_cd#
			, #bottom_nm#, #bottom_cd#
			, #btr_nm#, #btr_cd#, #btr_nb#
			, #rmk_dc#
			, #edit_proc#
			, #it_businessLink#
			, #insert_id#, SYSDATE()			
<!-- 			, #hc_nm#, #hc_cd# -->
        )
        <selectKey keyProperty="abdocu_no" resultClass="java.lang.String">
<!-- 			(select SEQ_G20_ABDOCU_H.CURRVAL FROM DUAL) -->
			 SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuNo'
        </selectKey>
	</insert>
	
	<insert id="AcG20ExGw.insertAbdocu_H_busan" parameterClass="abdocu_H">
        /* AcG20ExGw.insertAbdocu_H - mariaDB */
        INSERT INTO NEOS.G20_ABDOCU_H 
        (
			  ABDOCU_NO
			, DOCU_MODE
			, abdocu_no_reffer
			, DOCU_FG
			, DOCU_FG_TEXT
			, ERP_CO_CD
			, ERP_CO_NM
			, ERP_YEAR, ERP_GISU, ERP_GISU_DT    /* 회계년도 , 기수, 회계일자 */
			, ERP_ACISU_DT
			, ERP_GISU_FROM_DT
			, ERP_GISU_TO_DT
			, ERP_DIV_NM, ERP_DIV_CD
			, ERP_DEPT_NM, ERP_DEPT_CD
			, ERP_EMP_NM, ERP_EMP_CD 
			, MGT_NM, MGT_CD
			, BOTTOM_NM, BOTTOM_CD
			, BTR_NM, BTR_CD, BTR_NB
			, RMK_DC
			, EDIT_PROC
			, IT_BUSINESSLINK
			, INSERT_ID, INSERT_DT
<!-- 			, HC_NM, HC_CD -->
        )
        VALUES
        (
			  neos.nextval('abdocuNo')
			, #docu_mode#
			, #abdocu_no_reffer#
			, #docu_fg#
			, #docu_fg_text#
			, #erp_co_cd#
			, #erp_co_nm#
			, #erp_year#, #erp_gisu#, #erp_gisu_dt#
			, #erp_acisu_dt#
			, #erp_gisu_from_dt#, #erp_gisu_to_dt#
			, #erp_div_nm#, #erp_div_cd#
			, #erp_dept_nm#, #erp_dept_cd#
			, #erp_emp_nm#, #erp_emp_cd# 
			, #mgt_nm_encoding#, #mgt_cd#
			, #bottom_nm#, #bottom_cd#
			, #btr_nm#, #btr_cd#, #btr_nb#
			, #rmk_dc#
			, #edit_proc#
			, #it_businessLink#
			, #insert_id#, SYSDATE()			
<!-- 			, #hc_nm#, #hc_cd# -->
        )
        <selectKey keyProperty="abdocu_no" resultClass="java.lang.String">
<!-- 			(select SEQ_G20_ABDOCU_H.CURRVAL FROM DUAL) -->
			 SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuNo'
        </selectKey>
	</insert>
	
	<update id="AcG20ExGw.updateAbdocu_H" parameterClass="abdocu_H">
        /* AcG20ExGw.updateAbdocu_H - mariaDB */	
        UPDATE NEOS.G20_ABDOCU_H
        SET    
                  ERP_CO_CD        = #erp_co_cd#        /* 회사코드  */
                , ERP_CO_NM        = #erp_co_nm#        /* 회사명 */  
                , ERP_YEAR         = #erp_year#         /* 회계년도  */
                , ERP_GISU         = #erp_gisu#         /* 기수  */
                , ERP_GISU_FROM_DT = #erp_gisu_from_dt# /* 기수시작일  */
                , ERP_GISU_TO_DT   = #erp_gisu_to_dt#   /* 기수종료일  */
                , ERP_DIV_NM       = #erp_div_nm#       /* 회계단위명  */
                , ERP_DIV_CD       = #erp_div_cd#       /* 회계단위명  */
                , ERP_DEPT_NM      = #erp_dept_nm#      /* 부서명  */
                , ERP_DEPT_CD      = #erp_dept_cd#      /* 부서코드 */
                , ERP_EMP_NM       = #erp_emp_nm#       /* 사원명  */
                , ERP_EMP_CD       = #erp_emp_cd#       /* 사원코드  */
                , MGT_NM           = #mgt_nm_encoding#  /* 프로젝트명  */
                , MGT_CD           = #mgt_cd#			 /* 프로젝트코드 */
                , BOTTOM_NM        = #bottom_nm#        /* 하위사업명 */
                , BOTTOM_CD        = #bottom_cd#        /* 하위사업코드 */
                , BTR_NM           = #btr_nm#           /* 입출금계좌 명 */
                , BTR_CD           = #btr_cd#           /* 입출금계좌 코드 */
                , BTR_NB           = #btr_nb#           /* 입출금계좌 번호 */
                , RMK_DC           = #rmk_dc#			 /* 적용 */
                , EDIT_PROC        = #edit_proc#        /* */
                , IT_BUSINESSLINK  = #it_businessLink#   /* 보조비연도 여부 */
                , MODIFY_ID        = #modify_id#        /* 수장자  */
                , MODIFY_DT        = SYSDATE()            /* 수정일자 */
        WHERE  ABDOCU_NO           = #abdocu_no#         
	</update>

	<select id="AcG20ExGw.getAbdocuB_List" parameterClass="abdocu_H" resultClass="abdocu_B">
        /* AcG20ExGw.getAbdocuB_List - mariaDB 결의서 예산리스트 */
        SELECT  *
        FROM 	NEOS.G20_ABDOCU_B
        WHERE	ABDOCU_NO        = #abdocu_no#
        ORDER BY ABDOCU_B_NO
	</select>
	
	<insert id="AcG20ExGw.insertAbdocu_B" parameterClass="abdocu_B">
        /* AcG20ExGw.insertAbdocu_B - mariaDB */	
        INSERT INTO	NEOS.G20_ABDOCU_B
        (
              ABDOCU_NO, ABDOCU_B_NO, ERP_CO_CD, DOCU_MODE
            , ABGT_NM, ABGT_CD
            , ERP_BGT_NM1, ERP_BGT_NM2, ERP_BGT_NM3, ERP_BGT_NM4, CTL_FG
            , SET_FG, VAT_FG, TR_FG
            , DIV_NM2, DIV_CD2, RMK_DC
            , OPEN_AM, APPLY_AM, BANK_SQ, BANK_DT, TRAN_CD
            , IT_USE_WAY, IT_SBGTCDLINK
            , CONFER_RETURN
            , INSERT_ID, INSERT_DT
        )
        VALUES
        (
              #abdocu_no#, neos.nextval('abdocuBNo'), #erp_co_cd#, #docu_mode#
            , #abgt_nm#, #abgt_cd#
            , #erp_bgt_nm1#, #erp_bgt_nm2#, #erp_bgt_nm3#, #erp_bgt_nm4#, #ctl_fg#
            , IFNULL(#set_fg#, '1'), #vat_fg#, IFNULL(#tr_fg#, '1')            
            , #div_nm2#, #div_cd2#, #rmk_dc#
            , IFNULL(#open_am#, 0), IFNULL(#apply_am#, 0), #bank_sq#, #bank_dt#, #tran_cd#                       
            , #it_use_way#, #it_sbgtcdLink#
            , #confer_return#
            , #insert_id#, SYSDATE()
        )
        <selectKey keyProperty="abdocu_b_no" resultClass="java.lang.String">
<!-- 			(select SEQ_G20_ABDOCU_B.CURRVAL from DUAL) -->
             SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuBNo'
        </selectKey>
	</insert>
	
	<update id="AcG20ExGw.updateAbdocu_B" parameterClass="abdocu_B">
	    /* AcG20ExGw.updateAbdocu_B - mariaDB */
	    UPDATE	NEOS.G20_ABDOCU_B
	    SET 
	            ABGT_NM			= IFNULL(#abgt_nm#, ABGT_NM)
	          , ABGT_CD			= IFNULL(#abgt_cd#, ABGT_CD)
	          , ERP_BGT_NM4		= IFNULL(#erp_bgt_nm4#, ERP_BGT_NM4)
	          , ERP_BGT_NM3		= IFNULL(#erp_bgt_nm3#, ERP_BGT_NM3)
	          , ERP_BGT_NM2		= IFNULL(#erp_bgt_nm2#, ERP_BGT_NM2)
	          , ERP_BGT_NM1		= IFNULL(#erp_bgt_nm1#, ERP_BGT_NM1)
	          , CTL_FG			= IFNULL(#ctl_fg#, CTL_FG)
	          , SET_FG			= IFNULL(#set_fg#, SET_FG)
	          , VAT_FG			= IFNULL(#vat_fg#, VAT_FG)
	          , TR_FG			= IFNULL(#tr_fg#, TR_FG)
	          , DIV_NM2			= IFNULL(#div_nm2#, DIV_NM2)
	          , DIV_CD2			= IFNULL(#div_cd2#, DIV_CD2)
	          , RMK_DC			= IFNULL(#rmk_dc#, RMK_DC)
	          , OPEN_AM			= IFNULL(#open_am#, OPEN_AM)
	          , APPLY_AM		= IFNULL(#apply_am#, APPLY_AM)
	          , TRAN_CD			= IFNULL(#tran_cd#, TRAN_CD)
	          , IT_USE_WAY		= #it_use_way#
	          , BANK_SQ			= IFNULL(#bank_sq#, BANK_SQ)
	          , BANK_DT			= IFNULL(#bank_dt#, BANK_DT)
	          , IT_SBGTCDLINK   = #it_sbgtcdLink#
	          , MODIFY_ID		= #modify_id#
	          , MODIFY_DT		= SYSDATE()
		WHERE	ABDOCU_B_NO		= #abdocu_b_no#

	</update>	

	<select id="AcG20ExGw.getBudgetConsUseAmt" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	    /* AcG20ExGw.getBudgetConsUseAmt - mariaDB */
		SELECT 
			/*+ INDEX(H IDX_G20_ABDOCU_H_MGT_CD )  INDEX(B IDX_G20_ABDOCU_B_BGT_CD) */
			(
				CASE 	(SELECT	MAX(CODE) IS NULL FROM	neos.t_co_code WHERE	CODE = 'EXNP_VAT01') 
					WHEN	1 THEN	IFNULL(SUM(IFNULL(T.UNIT_AM,0)),0)
					/* 부산항 처리 필요함. */
					ELSE	IFNULL(SUM(IFNULL(T.UNIT_AM,0)),0) - IFNULL(SUM(IFNULL(T.VAT_AM,0)),0)
				END
			)	AS APPLY_AM
			, IFNULL(SUM(IFNULL(OPEN_AM, 0)),0) AS OPEN_AM
			, IFNULL(SUM(IFNULL(OPEN_AM, 0)) - SUM(IFNULL(APPLY_AM,0)),0) AS LEFT_AM
		FROM 	NEOS.G20_ABDOCU_H H
		 JOIN 	NEOS.G20_ABDOCU_B B
		 ON 		H.ABDOCU_NO = B.ABDOCU_NO
		  AND 	C_DIKEYCODE IS NOT NULL
		  AND		H.DOCU_MODE = #DOCU_MODE#
		  AND     H.ERP_CO_CD = #CO_CD#
		  AND		H.MGT_CD 	= #MGT_CD#
		  AND		B.ABGT_CD 	= #BGT_CD#
		  AND     H.ERP_DIV_CD =  #DIV_CD# 
		  AND     H.ERP_GISU_DT BETWEEN #FROM_DT# AND #TO_DT#
		 JOIN	    NEOS.ERPGWLINK LINK
		 ON		LINK.APPR_DIKEY =  H.C_DIKEYCODE
		  AND		IFNULL(APPR_STATUS, '008') IN ('002', '003', '008', '009')   
		<isNotEmpty property="BOTTOM_CD">
            AND H.BOTTOM_CD = #BOTTOM_CD# 
        </isNotEmpty>
		INNER JOIN	NEOS.A_DRAFTINFO DI
		 ON		H.C_DIKEYCODE = DI.C_DIKEYCODE		 
		 AND     IFNULL(DI.C_DISTATUS, '008') IN ('002', '003', '008', '009')         
		INNER JOIN	(
			SELECT	abdocu_no, MIN(IFNULL(abgt_cd, -1))	confferReturn
			FROM 	NEOS.G20_abdocu_b 
			GROUP BY abdocu_no
			HAVING 	confferReturn != -1
		)	B2
		 ON	B.abdocu_no = B2.abdocu_no         
        LEFT JOIN	NEOS.G20_ABDOCU_T T
		ON	B.abdocu_b_no = T.abdocu_b_no
		AND	B.abdocu_no = T.abdocu_no;
	</select>

	<select id="AcG20ExGw.getBudgetRefResUseAmt" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	    /* AcG20ExGw.getBudgetRefResUseAmt - mariaDB */
	    /* 참조 품의된 결의액 조회 */
		SELECT	/*+ INDEX(H IDX_G20_ABDOCU_H_MGT_CD )  INDEX(B IDX_G20_ABDOCU_B_BGT_CD) */
				(
					CASE 	(SELECT	MAX(CODE) IS NULL FROM	neos.t_co_code WHERE	CODE = 'EXNP_VAT01') 
						WHEN	1 THEN	IFNULL(SUM(IFNULL(T.UNIT_AM,0)),0)
						ELSE	IFNULL(SUM(IFNULL(T.UNIT_AM,0)),0) - IFNULL(SUM(IFNULL(T.VAT_AM,0)),0)
					END
				)	AS APPLY_AM,
				IFNULL(SUM(IFNULL(B.OPEN_AM, 0)),0) AS OPEN_AM,
				IFNULL(SUM(IFNULL(B.OPEN_AM, 0)) - SUM(IFNULL(T.UNIT_AM,0)),0)  AS LEFT_AM
		FROM 	NEOS.G20_ABDOCU_H H
		JOIN 	NEOS.G20_ABDOCU_B B
		ON		H.ABDOCU_NO		= B.ABDOCU_NO
		AND		C_DIKEYCODE IS NOT NULL
		AND		H.ABDOCU_NO_REFFER IS NOT NULL
		AND		H.DOCU_MODE		= #DOCU_MODE#
		AND     H.ERP_CO_CD     = #CO_CD#
		AND     H.ERP_DIV_CD    = #DIV_CD#
		AND		H.MGT_CD		= #MGT_CD#
		AND		B.ABGT_CD		= #BGT_CD#
		AND     H.ERP_GISU_DT BETWEEN #FROM_DT# AND #TO_DT#
		JOIN	    NEOS.ERPGWLINK LINK
		ON 		LINK.APPR_DIKEY	=  H.C_DIKEYCODE
		AND		IFNULL(APPR_STATUS, '008') IN ('002', '003', '008', '009')
        <isNotEmpty property="BOTTOM_CD">
            AND H.BOTTOM_CD = #BOTTOM_CD# 
        </isNotEmpty>		
		INNER JOIN	NEOS.G20_abdocu_b b2
		ON	b2.abdocu_b_no = b.abdocu_b_no_reffer
		INNER JOIN	(
			SELECT	abdocu_no, MIN(IFNULL(abgt_cd, -1))	confferReturn
			FROM 	NEOS.G20_abdocu_b 
			GROUP BY abdocu_no
			HAVING 	confferReturn != -1
		 )	B3
		 ON	B2.abdocu_no = B3.abdocu_no           
        JOIN	NEOS.G20_ABDOCU_T T
		ON	B.abdocu_b_no = T.abdocu_b_no
		AND	B.abdocu_no = T.abdocu_no;
	</select>
	
<!-- 	<delete id="AcG20ExGw.deleteAbdocu_H" parameterClass="abdocu_H"> -->
<!-- 	    /* AcG20ExGw.deleteAbdocu_H - mariaDB */ -->
<!-- 	    DELETE  FROM	NEOS.G20_ABDOCU_H -->
<!-- 		WHERE	ABDOCU_NO		= #abdocu_no# -->
<!-- 	</delete> -->
		
	<delete id="AcG20ExGw.deleteAbdocu_B" parameterClass="abdocu_B">
	    /* AcG20ExGw.deleteAbdocu_B - mariaDB */
	    DELETE  FROM	NEOS.G20_ABDOCU_B
	    WHERE	ABDOCU_NO		= #abdocu_no#
	    <isNotEmpty property="abdocu_b_no">
	    AND 	ABDOCU_B_NO		= #abdocu_b_no#
	    </isNotEmpty>
	</delete>	
	
	<select id="AcG20ExGw.getAbdocuT_List" parameterClass="abdocu_B" resultClass="abdocu_T">
	    /* AcG20ExGw.getAbdocuT_List - mariaDB */
  		SELECT	T.*
			, CASE	IFNULL(CARD.ABDOCU_B_NO, 'N') WHEN 'N' THEN 'N' ELSE 'Y' END AS CMS_YN
		FROM	NEOS.G20_ABDOCU_T T
			LEFT JOIN	NEOS.G20_ACARD_SUNGIN CARD
			 ON		CARD.abdocu_no = T.abdocu_no
			 AND		CARD.abdocu_b_no = T.abdocu_b_no 	
			 AND		CARD.abdocu_t_no = T.abdocu_t_no
			 
		WHERE 	T.ABDOCU_B_NO	=	#abdocu_b_no#
		ORDER BY ABDOCU_T_NO ASC;
	</select>
	
	<insert id="AcG20ExGw.insertAbdocu_T" parameterClass="abdocu_T">
	    /* AcG20ExGw.insertAbdocu_T - mariaDB */
	    INSERT INTO NEOS.G20_ABDOCU_T
	    (
	          ABDOCU_NO, ABDOCU_B_NO, ABDOCU_T_NO, ABDOCU_NO_REFFER
	        , ERP_CO_CD, DOCU_MODE
	        , TR_NM, TR_CD
	        , ITEM_NM, ITEM_CNT, ITEM_AM
	        , UNIT_AM, SUP_AM, VAT_AM, WD_AM
	        , RSTX_AM, NDEP_AM, INTX_AM, INAD_AM
	        , JIRO_NM, JIRO_CD
	        , CTR_NM, CTR_CD, CTR_APPDT
	        , CEO_NM, BTR_NM, BTR_CD, BA_NB, DEPOSITOR
	        , ATTR_NM, PPL_NB, ADDR, TEL, REG_NB, CHAIN_NAME
	        , TRAN_CD, TAX_DT, RMK_DC, REF_ABIN_LN_NO
	        , LINK_TYPE, IT_USE_NO, IT_USE_DT, IT_CARD_NO, ISS_SQ, ISS_DT
	        , ETCRVRS_YM, ETCDUMMY1, ETCDATA_CD, ETCDIV_CD, ET_YN, EDIT_PROC
	        , CMS_NAME, BK_SQ, BANK_SQ, BANK_DT
	        , TR_FG ,TR_FG_NM , EMP_NM
	        , TRCHARGE_EMP, ETCRATE, CTR_CARD_NUM
	        , INSERT_ID, INSERT_DT
	    )
	    VALUES
	    (
	          #abdocu_no#, #abdocu_b_no#, neos.nextval('abdocuTNo'), #abdocu_no_reffer#
	        , #erp_co_cd#, #docu_mode#
	        , #tr_nm#, #tr_cd#
	        , #item_nm#, #item_cnt#, #item_am#
	        , #unit_am#, #sup_am#, #vat_am#, #wd_am#
	        , #rstx_am#, #ndep_am#, #intx_am#, #inad_am#
	        , #jiro_nm#, #jiro_cd#
	        , #ctr_nm#, #ctr_cd#, #ctr_appdt#
	        , #ceo_nm#, #btr_nm#, #btr_cd#, #ba_nb#, #depositor#
	        , #attr_nm#, #ppl_nb#, #addr#, #tel#, #reg_nb#, #chain_name#
	        , #tran_cd#, #tax_dt#, #rmk_dc#, #ref_abin_ln_no#
	        , #link_type#, #it_use_no#, #it_use_dt#, #it_card_no#
	        , #iss_sq#, #iss_dt#
	        , #etcrvrs_ym#, #etcdummy1#, #etcdata_cd#, #etcdiv_cd#, #et_yn#, #edit_proc#
	        , #cms_name#, #bk_sq#, IFNULL(#bank_sq#, 0), #bank_dt#
	        , #tr_fg# ,#tr_fg_nm#, #emp_nm#
	        , #trcharge_emp#, #etcrate#, #ctr_card_num#
	        , #insert_id#, SYSDATE()
	    )
	    <selectKey keyProperty="abdocu_t_no" resultClass="java.lang.String">
<!-- 	    (select SEQ_G20_ABDOCU_T.CURRVAL from DUAL) -->
	        SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuTNo'
	    </selectKey>
	</insert>
	
	<update id="AcG20ExGw.updateAbdocu_T" parameterClass="abdocu_T">
	    /* AcG20ExGw.updateAbdocu_T - mariaDB */
	    UPDATE NEOS.G20_ABDOCU_T
	    SET     TR_NM				= IFNULL(#tr_nm#,TR_NM)
	          , TR_CD				= IFNULL(#tr_cd#,TR_CD)
	          , ITEM_NM				= IFNULL(#item_nm#,ITEM_NM)
	          , ITEM_CNT			= IFNULL(#item_cnt#,ITEM_CNT)
	          , ITEM_AM             = IFNULL(#item_am#,ITEM_AM)
	          , JIRO_NM				= IFNULL(#jiro_nm#,JIRO_NM)
	          , JIRO_CD				= IFNULL(#jiro_cd#,JIRO_CD)
	          , TEL					= IFNULL(#tel#,TEL)
	          , TAX_DT				= IFNULL(#tax_dt#,TAX_DT)
	          , UNIT_AM				= IFNULL(#unit_am#, UNIT_AM)
	          , SUP_AM				= IFNULL(#sup_am#,SUP_AM)
	          , VAT_AM				= IFNULL(#vat_am#,VAT_AM)
	          , WD_AM				= IFNULL(#wd_am#,WD_AM)
	          , RSTX_AM				= IFNULL(#rstx_am#,RSTX_AM)
	          , NDEP_AM				= IFNULL(#ndep_am#,NDEP_AM)
	          , INTX_AM				= IFNULL(#intx_am#,INTX_AM)
	          , INAD_AM				= IFNULL(#inad_am#,INAD_AM)
	          , RMK_DC				= IFNULL(#rmk_dc#,RMK_DC)
	          , REG_NB				= IFNULL(#reg_nb#,REG_NB)
	          , REF_ABIN_LN_NO		= IFNULL(#ref_abin_ln_no#,REF_ABIN_LN_NO)
	          , LINK_TYPE			= IFNULL(#link_type#,LINK_TYPE)
	          , IT_USE_NO			= IFNULL(#it_use_no#,IT_USE_NO)
	          , IT_USE_DT			= IFNULL(#it_use_dt#,IT_USE_DT)
	          , IT_CARD_NO			= IFNULL(#it_card_no#,IT_CARD_NO)
	          , ISS_SQ				= IFNULL(#iss_sq#,ISS_SQ)
	          , ISS_DT				= IFNULL(#iss_dt#,ISS_DT)
	          , ETCRVRS_YM			= IFNULL(#etcrvrs_ym#,ETCRVRS_YM)
	          , ETCDUMMY1			= IFNULL(#etcdummy1#,ETCDUMMY1)
	          , ETCDATA_CD          = IFNULL(#etcdata_cd#,ETCDATA_CD)
	          , ETCDIV_CD			= IFNULL(#etcdiv_cd#,ETCDIV_CD)
	          , ET_YN				= IFNULL(#et_yn#,ET_YN)
	          , EDIT_PROC			= IFNULL(#edit_proc#,EDIT_PROC)
	          , DEPOSITOR			= IFNULL(#depositor#,DEPOSITOR)
	          , CTR_NM				= IFNULL(#ctr_nm#,CTR_NM)
	          , CTR_CD				= IFNULL(#ctr_cd#,CTR_CD)
	          , CTR_APPDT			= IFNULL(#ctr_appdt#,CTR_APPDT)
	          , CMS_NAME			= IFNULL(#cms_name#,CMS_NAME)
	          , CHAIN_NAME			= IFNULL(#chain_name#,CHAIN_NAME)
	          , CEO_NM				= IFNULL(#ceo_nm#,CEO_NM)
	          , BTR_NM				= IFNULL(#btr_nm#,BTR_NM)
	          , BTR_CD				= IFNULL(#btr_cd#,BTR_CD)
	          , BK_SQ				= IFNULL(#bk_sq#,BK_SQ)
	          , BA_NB				= IFNULL(#ba_nb#,BA_NB)
	          , EMP_NM				= IFNULL(#emp_nm#,EMP_NM)
	          , TR_FG				= IFNULL(#tr_fg#,TR_FG)
	          , TR_FG_NM			= IFNULL(#tr_fg_nm#,TR_FG_NM)
	          , ATTR_NM				= IFNULL(#attr_nm#,ATTR_NM)
	          , PPL_NB				= IFNULL(#ppl_nb#,PPL_NB)
	          , ADDR				= IFNULL(#addr#,ADDR)
	          , TRCHARGE_EMP		= IFNULL(#trcharge_emp#,TRCHARGE_EMP)
	          , ETCRATE             = IFNULL(#etcrate#,ETCRATE)
	          , CTR_CARD_NUM        = IFNULL(#ctr_card_num#,CTR_CARD_NUM)
			  , MODIFY_ID			= IFNULL(#modify_id#,MODIFY_ID)
	          , MODIFY_DT			= SYSDATE()
			  <isNotEmpty property="tax_dt2" >
			  , TAX_DT2				= IFNULL(#tax_dt2#,TAX_DT2)
			  </isNotEmpty>
	    WHERE	ABDOCU_T_NO			= #abdocu_t_no#
	</update>
		
	<delete id="AcG20ExGw.deleteAbdocu_T" parameterClass="abdocu_T">
	    /* AcG20ExGw.deleteAbdocu_T - mariaDB */
	    DELETE  FROM	NEOS.G20_ABDOCU_T
	    WHERE	ABDOCU_T_NO		= #abdocu_t_no#
	</delete>	
	
	
	<update id="AcG20ExGw.updateAbdocuB_ApplyAm" parameterClass="abdocu_T">
	    /* AcG20ExGw.updateAbdocuB_ApplyAm - mariaDB */
	    UPDATE	NEOS.G20_ABDOCU_B
	    SET		APPLY_AM = (SELECT SUM(UNIT_AM) FROM NEOS.G20_ABDOCU_T WHERE ABDOCU_B_NO = #abdocu_b_no#)
	    WHERE ABDOCU_B_NO	= #abdocu_b_no#
	</update>
	
	<select id="AcG20ExGw.getAbdocuB_One" parameterClass="String" resultClass="abdocu_B">
        SELECT  *
		FROM 	NEOS.G20_ABDOCU_B
		WHERE 	ABDOCU_B_NO		= #abdocu_b_no#	
	</select>
	
	<select id="AcG20ExGw.getBgtApplyAmSumThis" parameterClass="Abdocu_B" resultClass="Abdocu_B">
	    /* AcG20ExGw.getBudgetApplyAmSumThis - mariaDB 예산별 집행액 총합 */
	    SELECT  
		(
			CASE 	(SELECT	MAX(CODE) IS NULL FROM	neos.t_co_code WHERE	CODE = 'EXNP_VAT01') 
				WHEN	1 THEN	IFNULL(SUM(IFNULL(T.UNIT_AM,0)),0)
				ELSE	IFNULL(SUM(IFNULL(T.UNIT_AM,0)),0) - IFNULL(SUM(IFNULL(T.VAT_AM,0)),0)
			END
		)	AS APPLY_AM,
		COUNT(*) AS TR_CNT
	    FROM  NEOS.G20_ABDOCU_B B
	    JOIN	NEOS.G20_ABDOCU_T T
		 ON	B.abdocu_b_no = T.abdocu_b_no
		 AND	B.abdocu_no = T.abdocu_no
	    WHERE B.ABDOCU_NO = #abdocu_no#
	     AND   B.ABGT_CD = #abgt_cd#
	</select>

	<select id="AcG20ExGw.getBgtApplyAmSumReffer" parameterClass="Abdocu_B" resultClass="Abdocu_B">
	    /* AcG20ExGw.getBgtApplyAmSumReffer - mariaDB */
	    SELECT
	            (( SELECT	
	                     IFNULL(SUM(IFNULL(APPLY_AM, 0)), 0) AS APPLY_AM
	              FROM	 NEOS.G20_ABDOCU_H H
	              JOIN	 NEOS.G20_ABDOCU_B B
	              ON	 H.ABDOCU_NO		= B.ABDOCU_NO
	              JOIN	 NEOS.ERPGWLINK LINK
	              ON	 LINK.APPR_DIKEY =  H.C_DIKEYCODE
	              AND	 IFNULL(APPR_STATUS, '008') IN ('002', '003', '008', '009')  					
	              WHERE	 H.ABDOCU_NO_REFFER = #abdocu_no_reffer#
	              AND    B.ABDOCU_B_NO_REFFER = #abdocu_b_no_reffer#
	              AND	 B.ABGT_CD = #abgt_cd#)  
	              + 
	             ( SELECT 
	                    IFNULL(SUM(IFNULL(APPLY_AM, 0)), 0)
	              FROM	NEOS.G20_ABDOCU_B
	              WHERE	ABDOCU_B_NO = #abdocu_b_no#
	              )
	            ) AS APPLY_AM   <!-- 결의금액합계  (현 결의서결의금액 포함)-->
	         ,  ( SELECT	
	                    IFNULL(SUM(IFNULL(APPLY_AM, 0)), 0) AS APPLY_AM
	              FROM	NEOS.G20_ABDOCU_H H
	              JOIN	NEOS.G20_ABDOCU_B B
	              ON		H.ABDOCU_NO		= B.ABDOCU_NO
	              JOIN	NEOS.ERPGWLINK LINK
	              ON		LINK.APPR_DIKEY =  H.C_DIKEYCODE
	              AND		IFNULL(APPR_STATUS, '008') IN ('002', '003', '008', '009')  					
	              WHERE	H.ABDOCU_NO = #abdocu_no_reffer#
	              AND	B.ABGT_CD = #abgt_cd#
	              AND   B.ABDOCU_B_NO = #abdocu_b_no_reffer#
	             ) AS OPEN_AM   <!-- 품의금액 --> 
	    FROM DUAL
	</select>
	
	<select id="AcG20ExGw.getResApplyAmThis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	    /* AcG20ExGw.getResApplyAmThis - mariaDB */
        SELECT SUM(IFNULL(APPLY_AM,0)) AS APPLY_AM
        FROM  NEOS.G20_ABDOCU_H H
        JOIN    NEOS.G20_ABDOCU_B B
        ON      H.ABDOCU_NO = B.ABDOCU_NO
        AND     H.DOCU_MODE = '1'
        AND     H.MGT_CD    = #MGT_CD#
        AND     B.ABGT_CD   = #BGT_CD#
        AND     H.ABDOCU_NO = #abDocuNo#
        AND     H.ABDOCU_NO_REFFER IS NOT NULL
    </select> 
	
	
	<select id="AcG20ExGw.checkAuthTable" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT  COUNT(*)		AS 'ifExists'
		FROM	Information_schema.tables 
		WHERE	table_schema 	= 'neos' 
		 AND	table_name 		= 'g20_cons_auth'
	</select>
	
	<select id="AcG20ExGw.getReferConferWithAuth" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		/* AcG20ExGw.getReferConferWithAuth - mariaDB 품의문서 리스트 (참조품의 / 권한적용) */
		SELECT	CASE WHEN T.CONFER_RETURN <![CDATA[>]]> ' ' THEN 'rollBack' ELSE CASE WHEN OPEN_AM - APPLY_AM <![CDATA[<>]]> 0 THEN 'return' ELSE '' END END AS BUTTON
				, DOCU_FG_TEXT AS DOCU_FG_TEXT
				, DOCNUMBER AS DOCNUMBER
				, USERNAME AS USERNAME
				, MGT_NM AS MGT_NM
				, MGT_CD AS MGT_CD
				, ABGT_NM AS ABGT_NM
				, ABGT_CD AS ABGT_CD
				, ABDOCU_NO AS ABDOCU_NO
				, ABDOCU_B_NO AS ABDOCU_B_NO
				, CAST(OPEN_AM AS CHAR) AS OPEN_AM
				, CAST(APPLY_AM AS CHAR) AS APPLY_AM
				, RMK_DC AS RMK_DC
				, ERP_GISU_DT AS ERP_GISU_DT
				, CASE WHEN CONFER_RETURN <![CDATA[>]]> ' ' THEN '정산' ELSE OPEN_AM - APPLY_AM END AS LEFT_AM
		FROM	(
					SELECT	A.DOCU_FG_TEXT
							, A.MGT_NM
							, A.MGT_CD
							, A.ABDOCU_NO
							, A.RMK_DC
							, A.ERP_GISU_DT
							, A.ABGT_NM
							, A.OPEN_AM
							, A.ABDOCU_B_NO
							, A.USERNAME
							, A.CONFER_RETURN
							, A.DOCNUMBER
							, A.ABGT_CD
							, IFNULL(B.APPLY_AM, 0) AS APPLY_AM
					FROM	(
								SELECT	H.DOCU_FG_TEXT
										, H.MGT_NM
										, H.MGT_CD
										, H.ABDOCU_NO
										, H.RMK_DC
										, DATE_FORMAT(H.ERP_GISU_DT,'%Y-%m-%d') AS ERP_GISU_DT
										, B.ABGT_CD
										, B.ABGT_NM
										, B.APPLY_AM AS OPEN_AM
										, B.ABDOCU_B_NO
										, neos.f_GETUSERINFO('1', A.REQU_USERKEY, #langCode#) AS USERNAME
										, (SELECT CONFER_RETURN FROM NEOS.G20_ABDOCU_B B2 WHERE B2.CONFER_RETURN = B.ABDOCU_B_NO LIMIT 1) CONFER_RETURN
										, (SELECT C_RIDOCFULLNUM FROM NEOS.A_RECORDINFO R WHERE R.C_DIKEYCODE = A.APPR_DIKEY) AS DOCNUMBER
								FROM	(
											SELECT	DOCU_FG_TEXT
													, MGT_NM
													, MGT_CD
													, ABDOCU_NO
													, RMK_DC
													, ERP_GISU_DT
													, C_DIKEYCODE
											FROM	NEOS.G20_ABDOCU_H
											WHERE	DOCU_MODE = '0'
											AND		C_DIKEYCODE <![CDATA[>]]> ' '
											
											
											<isEmpty property="ABDOCU_B_NO">
											AND		ERP_CO_CD = #CO_CD#
											AND		ERP_GISU_FROM_DT <![CDATA[<]]> #GISU_DT#
											AND 	ERP_GISU_TO_DT <![CDATA[>]]> #GISU_DT#
												<isNotEmpty property="FROM_DT" >
											AND ERP_GISU_DT BETWEEN #FROM_DT# AND #TO_DT#
												</isNotEmpty>
												<isEqual property="GR_FG" compareValue="1">
											AND  DOCU_FG = '8'
												</isEqual>
												<isNotEqual property="GR_FG" compareValue="1">
											AND  DOCU_FG <![CDATA[<>]]> '8'
												</isNotEqual>  
											</isEmpty>
										) H INNER JOIN (
											SELECT	ABGT_CD
													, ABGT_NM
													, APPLY_AM
													, ABDOCU_B_NO
													, ABDOCU_NO
											FROM	NEOS.G20_ABDOCU_B
											WHERE	1=1
											<isEmpty property="ABDOCU_B_NO">
											AND	CONFER_RETURN IS NULL
											AND	ERP_CO_CD = #CO_CD#
												<isNotEmpty property="ABGT_CD">
											AND ABGT_CD = #ABGT_CD#
												</isNotEmpty> 
											</isEmpty>
										    <isNotEmpty property="ABDOCU_B_NO">
										    AND ABDOCU_B_NO	= #ABDOCU_B_NO#
										    </isNotEmpty>		
											
										) B ON H.ABDOCU_NO = B.ABDOCU_NO INNER JOIN (
											SELECT	REQU_USERKEY
													, DOCX_NUMB
													, APPR_DIKEY
											FROM	NEOS.ERPGWLINK
											WHERE	IFNULL(APPR_STATUS, '009') IN ('008', '009')
											
											<isEmpty property="ABDOCU_B_NO">
									        	<isEmpty property="getConferType" >
											AND	REQU_USERKEY IN	(
												SELECT	seq 
												FROM	NEOS.G20_cons_auth 
												WHERE	emp_seq 	= #empSeq#	
												 AND 	gbn_org 	= 'u'
												 
												UNION 	SELECT	ed.emp_seq
												FROM	(
													SELECT	O.path, O.group_seq
													FROM	NEOS.G20_cons_auth	A
													 INNER JOIN neos.v_org_chart	O
													 ON	A.seq = O.seq
													 AND	O.gbn_org = 'd'
													 AND	A.gbn_org = 'd' 
													 AND	A.emp_seq = #empSeq#
													 AND	A.group_seq = O.group_seq
												)	DS
												 INNER JOIN neos.v_org_chart 	ORG
												  ON	ORG.path LIKE CONCAT(DS.path, '%')
												  AND	DS.group_seq = ORG.group_seq 
												 INNER JOIN neos.T_co_emp_dept	ED
												  ON	ORG.seq = ED.dept_seq
												  AND	ORG.group_seq = ED.group_seq
												
												UNION	SELECT	EC.emp_seq
												FROM 	NEOS.G20_cons_auth	A
												 INNER JOIN neos.T_co_emp_comp	EC
												 ON	A.seq = EC.comp_seq
												 AND	A.group_seq = EC.group_seq
												WHERE	A.emp_seq = #empSeq#	
												 AND	A.gbn_org = 'c'
												UNION
												SELECT	#empSeq#	
											)
									        	</isEmpty>
												<isNotEmpty property="getConferType" >
													<isEqual property="getConferType"  compareValue="DEPT">
											AND		neos.f_GETDRAFTINFO('7','000', APPR_DIKEY) = #deptSeq#
													</isEqual>
													<isNotEqual property="getConferType" compareValue="DEPT">
											AND	REQU_USERKEY IN	(
												SELECT	seq 
												FROM	NEOS.G20_cons_auth 
												WHERE	emp_seq 	= #empSeq#	
												 AND 	gbn_org 	= 'u'
												 
												UNION 	SELECT	ed.emp_seq
												FROM	(
													SELECT	O.path, O.group_seq
													FROM	NEOS.G20_cons_auth	A
													 INNER JOIN neos.v_org_chart	O
													 ON	A.seq = O.seq
													 AND	O.gbn_org = 'd'
													 AND	A.gbn_org = 'd' 
													 AND	A.emp_seq = #empSeq#
													 AND	A.group_seq = O.group_seq
												)	DS
												 INNER JOIN neos.v_org_chart 	ORG
												  ON	ORG.path LIKE CONCAT(DS.path, '%')
												  AND	DS.group_seq = ORG.group_seq 
												 INNER JOIN neos.T_co_emp_dept	ED
												  ON	ORG.seq = ED.dept_seq
												  AND	ORG.group_seq = ED.group_seq
												
												UNION	SELECT	EC.emp_seq
												FROM 	NEOS.G20_cons_auth	A
												 INNER JOIN neos.T_co_emp_comp	EC
												 ON	A.seq = EC.comp_seq
												 AND	A.group_seq = EC.group_seq
												WHERE	A.emp_seq = #empSeq#	
												 AND	A.gbn_org = 'c'
												UNION
												SELECT	#empSeq#	
											 
											)
													</isNotEqual>
												</isNotEmpty>
								        	</isEmpty>
										<!-- ) A ON H.ABDOCU_NO = A.DOCX_NUMB AND H.C_DIKEYCODE IS NOT NULL AND H.ABDOCU_NO != '' -->
										) A ON H.C_DIKEYCODE = A.APPR_DIKEY AND H.C_DIKEYCODE IS NOT NULL AND H.ABDOCU_NO != ''
									    <isEmpty property="ABDOCU_B_NO"> 
											<isNotEmpty property="searchText">
										AND (B.ABGT_NM LIKE '%$searchText$%' OR H.MGT_NM LIKE '%$searchText_encode$%' OR neos.f_GETUSERINFO('1', REQU_USERKEY, #langCode#) LIKE '%$searchText$%')
											</isNotEmpty>
										</isEmpty>										
										
							) A LEFT OUTER JOIN (
								SELECT	TA.ABDOCU_NO_REFFER
										, TA.ABDOCU_B_NO_REFFER
										, TA.ABGT_CD
										, SUM(IFNULL(TA.APPLY_AM, 0)) AS APPLY_AM
										, COUNT(TA.ABDOCU_NO_REFFER)
								FROM	(
											SELECT	B.C_DIKEYCODE
													, A.APPLY_AM
													, A.ABDOCU_NO_REFFER
													, A.ABDOCU_B_NO_REFFER
													, A.ABGT_CD
											FROM	(
														SELECT	ABDOCU_NO
																, ABDOCU_NO_REFFER
																, ABDOCU_B_NO_REFFER
																, ABGT_CD
																, APPLY_AM
														FROM	NEOS.G20_ABDOCU_B
														WHERE	ABDOCU_NO_REFFER IS NOT NULL
														AND		ABDOCU_B_NO_REFFER IS NOT NULL
													) A INNER JOIN (
														SELECT	ABDOCU_NO
																, C_DIKEYCODE
														FROM	NEOS.G20_ABDOCU_H
														WHERE	C_DIKEYCODE IS NOT NULL
													) B ON A.ABDOCU_NO = B.ABDOCU_NO
										) TA
								WHERE	TA.C_DIKEYCODE IN (
											SELECT	APPR_DIKEY
											FROM	NEOS.ERPGWLINK
											WHERE	IFNULL(APPR_STATUS, '009' ) IN ('002', '003', '008', '009')
										)
								GROUP	BY ABDOCU_NO_REFFER, ABDOCU_B_NO_REFFER, ABGT_CD
							) B ON A.ABDOCU_NO = B.ABDOCU_NO_REFFER AND A.ABDOCU_B_NO = B.ABDOCU_B_NO_REFFER AND A.ABGT_CD = B.ABGT_CD
				) T
		WHERE	1=1
		<isEqual property="isAllView" compareValue="001">
		AND	    T.CONFER_RETURN IS NULL
		</isEqual>
		<isEqual property="isAllView" compareValue="002">
		AND		(OPEN_AM - APPLY_AM) = 0
		</isEqual>
		ORDER BY ABDOCU_NO DESC		
	</select>
	
	<select id="AcG20ExGw.getReferConfer" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		/* AcG20ExGw.getReferConfer - mariaDB 품의문서 리스트 (참조품의) */
		SELECT	CASE WHEN T.CONFER_RETURN <![CDATA[>]]> ' ' THEN 'rollBack' ELSE CASE WHEN OPEN_AM - APPLY_AM <![CDATA[<>]]> 0 THEN 'return' ELSE '' END END AS BUTTON
				, DOCU_FG_TEXT AS DOCU_FG_TEXT
				, DOCNUMBER AS DOCNUMBER
				, USERNAME AS USERNAME
				, MGT_NM AS MGT_NM
				, MGT_CD AS MGT_CD
				, ABGT_NM AS ABGT_NM
				, ABDOCU_NO AS ABDOCU_NO
				, ABDOCU_B_NO AS ABDOCU_B_NO
				, CAST(OPEN_AM AS CHAR) AS OPEN_AM
				, CAST(APPLY_AM AS CHAR) AS APPLY_AM
				, RMK_DC AS RMK_DC
				, ERP_GISU_DT AS ERP_GISU_DT
				, CASE WHEN CONFER_RETURN <![CDATA[>]]> ' ' THEN '정산' ELSE OPEN_AM - APPLY_AM END AS LEFT_AM
		FROM	(
					SELECT	A.DOCU_FG_TEXT
							, A.MGT_NM
							, A.MGT_CD
							, A.ABDOCU_NO
							, A.RMK_DC
							, A.ERP_GISU_DT
							, A.ABGT_NM
							, A.OPEN_AM
							, A.ABDOCU_B_NO
							, A.USERNAME
							, A.CONFER_RETURN
							, A.DOCNUMBER
							, IFNULL(B.APPLY_AM, 0) AS APPLY_AM
					FROM	(
								SELECT	H.DOCU_FG_TEXT
										, H.MGT_NM
										, H.MGT_CD
										, H.ABDOCU_NO
										, H.RMK_DC
										, DATE_FORMAT(H.ERP_GISU_DT,'%Y-%m-%d') AS ERP_GISU_DT
										, B.ABGT_CD
										, B.ABGT_NM
										, B.APPLY_AM AS OPEN_AM
										, B.ABDOCU_B_NO
										, neos.f_GETUSERINFO('1', A.REQU_USERKEY, #langCode#) AS USERNAME
										, (SELECT CONFER_RETURN FROM NEOS.G20_ABDOCU_B B2 WHERE B2.CONFER_RETURN = B.ABDOCU_B_NO LIMIT 1) CONFER_RETURN
										, (SELECT C_RIDOCFULLNUM FROM NEOS.A_RECORDINFO R WHERE R.C_DIKEYCODE = A.APPR_DIKEY) AS DOCNUMBER
								FROM	(
											SELECT	DOCU_FG_TEXT
													, MGT_NM
													, MGT_CD
													, ABDOCU_NO
													, RMK_DC
													, ERP_GISU_DT
													, C_DIKEYCODE
											FROM	NEOS.G20_ABDOCU_H
											WHERE	DOCU_MODE = '0'
											AND		C_DIKEYCODE <![CDATA[>]]> ' '
											
											
											<isEmpty property="ABDOCU_B_NO">
											AND		ERP_CO_CD = #CO_CD#
											AND		ERP_GISU_FROM_DT <![CDATA[<]]> #GISU_DT#
											AND 	ERP_GISU_TO_DT <![CDATA[>]]> #GISU_DT#
												<isNotEmpty property="FROM_DT" >
											AND ERP_GISU_DT BETWEEN #FROM_DT# AND #TO_DT#
												</isNotEmpty>
												<isEqual property="GR_FG" compareValue="1">
											AND  DOCU_FG = '8'
												</isEqual>
												<isNotEqual property="GR_FG" compareValue="1">
											AND  DOCU_FG <![CDATA[<>]]> '8'
												</isNotEqual>  
											</isEmpty>
										) H INNER JOIN (
											SELECT	ABGT_CD
													, ABGT_NM
													, APPLY_AM
													, ABDOCU_B_NO
													, ABDOCU_NO
											FROM	NEOS.G20_ABDOCU_B
											WHERE	1=1
											<isEmpty property="ABDOCU_B_NO">
											AND	CONFER_RETURN IS NULL
											AND	ERP_CO_CD = #CO_CD#
												<isNotEmpty property="ABGT_CD">
											AND ABGT_CD = #ABGT_CD#
												</isNotEmpty> 
											</isEmpty>
										    <isNotEmpty property="ABDOCU_B_NO">
										    AND ABDOCU_B_NO	= #ABDOCU_B_NO#
										    </isNotEmpty>		
											
										) B ON H.ABDOCU_NO = B.ABDOCU_NO INNER JOIN (
											SELECT	REQU_USERKEY
													, DOCX_NUMB
													, APPR_DIKEY
											FROM	NEOS.ERPGWLINK
											WHERE	IFNULL(APPR_STATUS, '009') IN ('008', '009')
											
											<isEmpty property="ABDOCU_B_NO">
									        	<isEmpty property="getConferType" >
											AND		REQU_USERKEY = #empSeq#
									        	</isEmpty>
												<isNotEmpty property="getConferType" >
													<isEqual property="getConferType"  compareValue="DEPT">
											AND		neos.f_GETDRAFTINFO('7','000', APPR_DIKEY) = #deptSeq#
													</isEqual>
													<isNotEqual property="getConferType" compareValue="DEPT">
											AND		REQU_USERKEY  = #empSeq#
													</isNotEqual>
												</isNotEmpty>
								        	</isEmpty>
										) A ON H.ABDOCU_NO = A.DOCX_NUMB AND H.C_DIKEYCODE IS NOT NULL AND H.ABDOCU_NO != ''
									    <isEmpty property="ABDOCU_B_NO"> 
											<isNotEmpty property="searchText">
										AND (B.ABGT_NM LIKE '%$searchText$%' OR H.MGT_NM LIKE '%$searchText_encode$%' OR neos.f_GETUSERINFO('1', REQU_USERKEY, #langCode#) LIKE '%$searchText$%')
											</isNotEmpty>
										</isEmpty>										
										
							) A LEFT OUTER JOIN (
								SELECT	TA.ABDOCU_NO_REFFER
										, TA.ABDOCU_B_NO_REFFER
										, TA.ABGT_CD
										, SUM(IFNULL(TA.APPLY_AM, 0)) AS APPLY_AM
										, COUNT(TA.ABDOCU_NO_REFFER)
								FROM	(
											SELECT	B.C_DIKEYCODE
													, A.APPLY_AM
													, A.ABDOCU_NO_REFFER
													, A.ABDOCU_B_NO_REFFER
													, A.ABGT_CD
											FROM	(
														SELECT	ABDOCU_NO
																, ABDOCU_NO_REFFER
																, ABDOCU_B_NO_REFFER
																, ABGT_CD
																, APPLY_AM
														FROM	NEOS.G20_ABDOCU_B
														WHERE	ABDOCU_NO_REFFER IS NOT NULL
														AND		ABDOCU_B_NO_REFFER IS NOT NULL
													) A INNER JOIN (
														SELECT	ABDOCU_NO
																, C_DIKEYCODE
														FROM	NEOS.G20_ABDOCU_H
														WHERE	C_DIKEYCODE IS NOT NULL
													) B ON A.ABDOCU_NO = B.ABDOCU_NO
										) TA
								WHERE	TA.C_DIKEYCODE IN (
											SELECT	APPR_DIKEY
											FROM	NEOS.ERPGWLINK
											WHERE	IFNULL(APPR_STATUS, '009' ) IN ('002', '003', '008', '009')
										)
								GROUP	BY ABDOCU_NO_REFFER, ABDOCU_B_NO_REFFER, ABGT_CD
							) B ON A.ABDOCU_NO = B.ABDOCU_NO_REFFER AND A.ABDOCU_B_NO = B.ABDOCU_B_NO_REFFER AND A.ABGT_CD = B.ABGT_CD
				) T
		WHERE	1=1
		<isEqual property="isAllView" compareValue="001">
		AND	    T.CONFER_RETURN IS NULL
		</isEqual>
		<isEqual property="isAllView" compareValue="002">
		AND		(OPEN_AM - APPLY_AM) = 0
		</isEqual>
		ORDER BY ABDOCU_NO DESC
	</select>
	    
	<select id="AcG20ExGw.getReferConferAll" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
	      <![CDATA[
		SELECT /* AcG20ExGw.getReferConferAll 품의문서 리스트 (참조품의) 전체 */
		CASE	WHEN T.CONFER_RETURN > ' '
					THEN	'<input type="button" onclick="abdocu.returnConferBudgetRollBack(this)" value="예산환원취소" class="budget" />'
        			ELSE    CASE WHEN OPEN_AM - APPLY_AM  <> 0  THEN  '<input type="button" onclick="abdocu.returnConferBudget(this)" value="예산환원" class="budget" />' ELSE '' END 
        		END AS BUTTON,		
		DOCU_FG_TEXT,
		DOCNUMBER,
        USERNAME,
		MGT_NM,
		MGT_CD,
		ABGT_NM,
		ABDOCU_NO,
		ABDOCU_B_NO,
		TO_CHAR(OPEN_AM,'999,999,999,999,999,999,999,999') AS OPEN_AM,
		TO_CHAR(APPLY_AM,'999,999,999,999,999,999,999,999') AS APPLY_AM,
		RMK_DC,
		ERP_GISU_DT,
		CASE	WHEN CONFER_RETURN > ' '
					THEN	'정산'
        			ELSE	TO_CHAR(OPEN_AM - APPLY_AM,'999,999,999,999,999,999,999,999')
        		END AS LEFT_AM
		FROM(
			SELECT
					DOCU_FG_TEXT, (SELECT  C_RIDOCFULLNUM FROM NEOS.A_RECORDINFO R WHERE R.C_DIKEYCODE = A.C_DIKEYCODE) AS DOCNUMBER,
					MGT_NM, MGT_CD, B.ABGT_NM, H.ABDOCU_NO,
					B.APPLY_AM AS OPEN_AM,
					IFNULL((	SELECT SUM(IFNULL(APPLY_AM,0))
							FROM	NEOS.G20_ABDOCU_B B2
							JOIN	    NEOS.G20_ABDOCU_H H2
							ON		B2.ABDOCU_NO = H2.ABDOCU_NO
							AND      H2.C_DIKEYCODE IS NOT NULL
							JOIN	    NEOS.A_DRAFTINFO A2
							ON       A2.C_DIKEYCODE =  H2.C_DIKEYCODE
                            AND		IFNULL(A2.C_DISTATUS, '009' ) IN ('002', '003', '008', '009')
                            AND      C_DISEQNUM =          '0000000001'           		
    						WHERE	B2.ABDOCU_NO_REFFER = B.ABDOCU_NO
    						AND      B2.ABDOCU_B_NO_REFFER = B.ABDOCU_B_NO
							AND		B2.ABGT_CD = B.ABGT_CD),0) AS APPLY_AM,
					H.RMK_DC,
					B.ABDOCU_B_NO,
					(SELECT CONFER_RETURN FROM NEOS.G20_ABDOCU_B B2 WHERE B2.CONFER_RETURN = B.ABDOCU_B_NO limit 1) CONFER_RETURN,
					DATE_FORMAT(H.ERP_GISU_DT,'%Y-%m-%d') AS ERP_GISU_DT,
				    neos.F_GETUSERNAME('1', C_DIUSERKEY) AS USERNAME
			  FROM    NEOS.A_DRAFTINFO A , 
                       NEOS.G20_ABDOCU_H H,
                       NEOS.G20_ABDOCU_B B
             WHERE A.C_DIKEYCODE = H.C_DIKEYCODE
               AND H.ABDOCU_NO = B.ABDOCU_NO
               AND IFNULL(A.C_DISTATUS, '009' ) IN ('008', '009')    
               AND H.DOCU_MODE = '0'
               AND H.C_DIKEYCODE  > ' '
               AND C_DISEQNUM = '0000000001'
               AND H.ERP_CO_CD = #CO_CD#
        ]]>
        <isNotEmpty property="FROM_DT" >
               AND H.ERP_GISU_FROM_DT =  #FROM_DT# 
               AND H.ERP_GISU_TO_DT = #TO_DT#
               AND H.ERP_GISU_DT BETWEEN #FROM_DT# AND #TO_DT#
        </isNotEmpty>
        <isNotEmpty property="ABDOCU_B_NO">
               AND B.ABDOCU_B_NO		= #ABDOCU_B_NO#
        </isNotEmpty>
        <isNotEmpty property="ABGT_CD">
               AND B.ABGT_CD		= #ABGT_CD#
        </isNotEmpty>        
        <isEqual property="GR_FG" compareValue="1">
               AND  H.DOCU_FG = '8'
        </isEqual>
        <isNotEqual property="GR_FG" compareValue="1">
               AND  H.DOCU_FG <![CDATA[<> ]]>'8'
        </isNotEqual>
               AND B.CONFER_RETURN        IS NULL
		)T
		WHERE	1=1
		<isNotEqual property="isAllView" compareValue="1">
		AND		(OPEN_AM - APPLY_AM) <![CDATA[ <> ]]>0
		AND	 T.CONFER_RETURN IS NULL
		</isNotEqual>
		ORDER BY ABDOCU_NO DESC
	</select>
	
	<insert id="AcG20ExGw.INSERT-ReferConfer-H" parameterClass="abdocu_H">
	    /* AcG20ExGw.INSERT-ReferConfer-H - mariaDB */
		INSERT INTO NEOS.G20_ABDOCU_H
		(
			  ABDOCU_NO, abdocu_no_reffer, DOCU_MODE, DOCU_FG, DOCU_FG_TEXT
			, ERP_CO_CD, ERP_CO_NM, ERP_YEAR, ERP_GISU, ERP_GISU_TO_DT, ERP_GISU_FROM_DT, ERP_GISU_DT
			, ERP_DIV_NM, ERP_DIV_CD
			, ERP_DEPT_NM, ERP_DEPT_CD
			, ERP_EMP_NM, ERP_EMP_CD
			, MGT_NM, MGT_CD, BOTTOM_NM, BOTTOM_CD, BTR_NM, BTR_CD, BTR_NB, RMK_DC
			, EDIT_PROC, IT_BUSINESSLINK, INSERT_ID, INSERT_DT
		)
		SELECT
				neos.nextval('abdocuNo'), ABDOCU_NO, '1', #docu_fg#, #docu_fg_text#
				, ERP_CO_CD, ERP_CO_NM, ERP_YEAR, ERP_GISU, ERP_GISU_TO_DT, ERP_GISU_FROM_DT, #erp_gisu_dt#
				, ERP_DIV_NM, ERP_DIV_CD
				, IFNULL(#erp_dept_nm#, ERP_DEPT_NM), IFNULL(#erp_dept_cd#, ERP_DEPT_CD)
				, IFNULL(#erp_emp_nm#, ERP_EMP_NM), IFNULL(#erp_emp_cd#, ERP_EMP_CD)
				, MGT_NM, MGT_CD, BOTTOM_NM, BOTTOM_CD, BTR_NM, BTR_CD, BTR_NB, RMK_DC
				, EDIT_PROC, IT_BUSINESSLINK, #insert_id#, SYSDATE()
		FROM	NEOS.G20_ABDOCU_H
		WHERE	ABDOCU_NO		= #abdocu_no_reffer#
		<selectKey keyProperty="abdocu_no" resultClass="java.lang.String">
			SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuNo'
		</selectKey>
	</insert>	
	
	<select id="AcG20ExGw.SELECT-ReferConfer-B" parameterClass="abdocu_B" resultClass="abdocu_B">
	    /* AcG20ExGw.SELECT-ReferConfer-B - oralce */
		<![CDATA[
		SELECT  #abdocu_no# AS ABDOCU_NO, neos.nextval('abdocuBNo') AS ABDOCU_B_NO
		      , #abdocu_no_reffer# AS ABDOCU_NO_REFFER, ABDOCU_B_NO AS ABDOCU_B_NO_REFFER
			  , ERP_CO_CD, DIV_NM2, DIV_CD2
			  , ABGT_NM, ABGT_CD, ERP_BGT_NM1, ERP_BGT_NM2, ERP_BGT_NM3, ERP_BGT_NM4
			  , SET_FG, VAT_FG, TR_FG,	RMK_DC, IT_USE_WAY, APPLY_AM
			  , TRAN_CD, CTL_FG, BANK_SQ, BANK_DT
		FROM	NEOS.G20_ABDOCU_B B
		WHERE	1=1
		AND		ABDOCU_NO		= #abdocu_no_reffer#
		AND		(SELECT COUNT(*) FROM NEOS.G20_ABDOCU_B B2 WHERE B2.CONFER_RETURN = B.ABDOCU_B_NO ) < 1
		AND		(B.APPLY_AM - 
						IFNULL((	SELECT SUM(IFNULL(APPLY_AM,0))
								FROM	NEOS.G20_ABDOCU_B B2
								JOIN	NEOS.G20_ABDOCU_H H2
								ON		B2.ABDOCU_NO = H2.ABDOCU_NO
								AND		H2.C_DIKEYCODE IS NOT NULL
								JOIN	NEOS.ERPGWLINK LINK
								ON		LINK.APPR_DIKEY =  H2.C_DIKEYCODE
								AND		APPR_STATUS IN ('002', '003', '008', '009')        		
								WHERE	B2.ABDOCU_NO_REFFER = B.ABDOCU_NO
								AND      B2.ABDOCU_B_NO_REFFER = B.ABDOCU_B_NO 
								AND		B2.ABGT_CD = B.ABGT_CD),0)) <> 0
		]]>
	</select>

	<insert id="AcG20ExGw.INSERT-ReferConfer-B" parameterClass="abdocu_B">
	    /* AcG20ExGw.INSERT-ReferConfer-B - mariaDB */
        INSERT INTO    NEOS.G20_ABDOCU_B
        (
                ABDOCU_NO, ABDOCU_NO_REFFER, ABDOCU_B_NO, ABDOCU_B_NO_REFFER
              , ERP_CO_CD, DOCU_MODE, DIV_NM2, DIV_CD2
			  , ABGT_NM, ABGT_CD, ERP_BGT_NM1, ERP_BGT_NM2, ERP_BGT_NM3, ERP_BGT_NM4
			  , SET_FG, VAT_FG, TR_FG, RMK_DC, IT_USE_WAY, APPLY_AM, OPEN_AM
			  , TRAN_CD, CTL_FG, BANK_SQ, BANK_DT
              , INSERT_ID,INSERT_DT 
        )
		VALUES
		(   
                #abdocu_no#, #abdocu_no_reffer#, #abdocu_b_no#, #abdocu_b_no_reffer#
			  , #erp_co_cd#, '1', #div_nm2#, #div_cd2#
			  , #abgt_nm#, #abgt_cd#, #erp_bgt_nm1#, #erp_bgt_nm2#, #erp_bgt_nm3#, #erp_bgt_nm4#
              , #set_fg#, #vat_fg#, #tr_fg#, #rmk_dc#, #it_use_way#, #apply_am#, 0              
              , #tran_cd#, #ctl_fg#, #bank_sq#, #bank_dt#
              , #insert_id#, SYSDATE()  		
		)
	</insert>
	
	<select id="AcG20ExGw.SELECT-ReferConfer-T" parameterClass="abdocu_B" resultClass="abdocu_T">
	    /* AcG20ExGw.SELECT-ReferConfer-T - mariaDB */
		SELECT
	                #abdocu_no# AS ABDOCU_NO, #abdocu_b_no# AS ABDOCU_B_NO, neos.nextval('abdocuTNo') AS ABDOCU_T_NO, #abdocu_no_reffer# AS ABDOCU_NO_REFFER
	              , ERP_CO_CD
	              , TR_NM, TR_CD, CEO_NM, BTR_NM, BTR_CD, BA_NB, ATTR_NM
	              , JIRO_NM, JIRO_CD, TEL, ADDR, PPL_NB, REG_NB, DEPOSITOR
	              , ITEM_NM, ITEM_CNT, ITEM_AM, TAX_DT, RMK_DC
	              , UNIT_AM, SUP_AM, VAT_AM, NDEP_AM, INAD_AM, INTX_AM, RSTX_AM, WD_AM
	              , ETCRVRS_YM, ETCDIV_CD, ETCDUMMY1, ET_YN
	              , IT_USE_NO, IT_USE_DT, IT_CARD_NO
	              , ISS_SQ, ISS_DT, BK_SQ, BANK_SQ, BANK_DT, EDIT_PROC
	              , TRAN_CD, REF_ABIN_LN_NO, LINK_TYPE
	              , CTR_NM, CTR_CD, CTR_APPDT
	              , CMS_NAME, CHAIN_NAME, TR_FG, TR_FG_NM
	              , EMP_NM, TRCHARGE_EMP					
        FROM   
        (
            SELECT * FROM NEOS.G20_ABDOCU_T
            WHERE       ABDOCU_NO = #abdocu_no_reffer#
            AND         ABDOCU_B_NO     = #abdocu_b_no_reffer#
            ORDER BY ABDOCU_T_NO
        ) T 
	</select>

	<insert id="AcG20ExGw.INSERT-ReferConfer-T" parameterClass="abdocu_T">
	    /* AcG20ExGw.INSERT-ReferConfer-T - mariaDB */
        INSERT INTO NEOS.G20_ABDOCU_T
        (
                ABDOCU_NO, ABDOCU_B_NO, ABDOCU_T_NO, ABDOCU_NO_REFFER
              , DOCU_MODE, ERP_CO_CD
              , TR_NM, TR_CD, CEO_NM, BTR_NM, BTR_CD, BA_NB, ATTR_NM
              , JIRO_NM, JIRO_CD, TEL, ADDR, PPL_NB, REG_NB, DEPOSITOR
              , ITEM_NM, ITEM_CNT, ITEM_AM, TAX_DT, RMK_DC
              , UNIT_AM, SUP_AM, VAT_AM, NDEP_AM, INAD_AM, INTX_AM, RSTX_AM, WD_AM
              , ETCRVRS_YM, ETCDIV_CD, ETCDUMMY1, ET_YN
              , IT_USE_NO, IT_USE_DT, IT_CARD_NO
              , ISS_SQ, ISS_DT, BK_SQ, BANK_SQ, BANK_DT, EDIT_PROC
              , TRAN_CD, REF_ABIN_LN_NO, LINK_TYPE
              , CTR_NM, CTR_CD, CTR_APPDT
              , CMS_NAME, CHAIN_NAME, TR_FG, TR_FG_NM
              , EMP_NM, TRCHARGE_EMP
              , INSERT_ID, INSERT_DT
        )
        VALUES
        (   
                #abdocu_no#, #abdocu_b_no#, #abdocu_t_no#, #abdocu_no_reffer#
              , '1', #erp_co_cd#
              , #tr_nm#, #tr_cd#, #ceo_nm#, #btr_nm#, #btr_cd#, #ba_nb#, #attr_nm#
              , #jiro_nm#, #jiro_cd#, #tel#, #addr#, #ppl_nb#, #reg_nb#, #depositor#
              , #item_nm#, #item_cnt#, #item_am#, #tax_dt#, #rmk_dc#
              , #unit_am#, #sup_am#, #vat_am#, #ndep_am#, #inad_am#, #intx_am#, #rstx_am#, #wd_am#
              , #etcrvrs_ym#, #etcdiv_cd#, #etcdummy1#, #et_yn#
              , #it_use_no#, #it_use_dt#, #it_card_no#
              , #iss_sq#, #iss_dt#, #bk_sq#, IFNULL(#bank_sq#, 0), #bank_dt#, #edit_proc#
              , #tran_cd#, #ref_abin_ln_no#, #link_type#
              , #ctr_nm#, #ctr_cd#, #ctr_appdt#
              , #cms_name#, #chain_name#, #tr_fg#, #tr_fg_nm#
              , #emp_nm#, #trcharge_emp# 
              , #insert_id#, SYSDATE()           
        )
	</insert>	
	
	<select id="AcG20ExGw.getConferBalance" parameterClass="abdocu_B" resultClass="java.lang.String">
	    /* AcG20ExGw.getConferBalance 품의잔액 가져오기  - mariaDB */
	    SELECT 
                  OPEN_AM - APPLY_AM AS LEFT_AM  /* TO_CHAR(OPEN_AM - APPLY_AM,'999,999,999,999,999,999,999,999') AS LEFT_AM */ 
        FROM
        (
            SELECT 
                    B.APPLY_AM AS OPEN_AM,
                    IFNULL((    SELECT SUM(IFNULL(APPLY_AM,0))
                            FROM    NEOS.G20_ABDOCU_B B2
                            JOIN    NEOS.G20_ABDOCU_H H2
                            ON        B2.ABDOCU_NO = H2.ABDOCU_NO
                            AND      H2.C_DIKEYCODE IS NOT NULL
                            JOIN    NEOS.A_DRAFTINFO A2
                            ON      A2.C_DIKEYCODE =  H2.C_DIKEYCODE
                            AND      IFNULL(A2.C_DISTATUS, '009') IN ('002', '003', '008', '009')                
                            WHERE    B2.ABDOCU_NO_REFFER = B.ABDOCU_NO
                            AND      B2.ABDOCU_B_NO_REFFER = B.ABDOCU_B_NO
                            AND        B2.ABGT_CD = B.ABGT_CD),0) AS APPLY_AM,
                    B.ABDOCU_B_NO
              FROM    NEOS.G20_ABDOCU_B B
             WHERE ABDOCU_B_NO = #abdocu_b_no_reffer#
        ) AA
	</select>
	
    <select id="AcG20ExGw.getUseSpendStandingCnt" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
        /* AcG20ExGw.getUseSpendStandingCnt - mariaDB */
        SELECT COUNT(*) 
          FROM NEOS.G20_ABDOCU_H H , NEOS.G20_ABDOCU_B B , NEOS.ERPGWLINK EL 
         WHERE H.ABDOCU_NO = B.ABDOCU_NO 
           AND H.ABDOCU_NO = EL.DOCX_NUMB
           AND H.C_DIKEYCODE =  EL.APPR_DIKEY 
           AND B.ABDOCU_B_NO_REFFER = #ABDOCU_B_NO#
           AND APPR_STATUS IN ('002', '003')
    </select>
    
    
	<select id="AcG20ExGw.getReturnConferBudgetRollBackInfo" parameterClass="abdocu_B" resultClass="abdocu_B">
        /* AcG20ExGw.getReturnConferBudgetRollBackInfo - mariaDB */
		SELECT
				VAT_FG, TRAN_CD, TR_FG, SET_FG, SESSIONID,
				RMK_DC, MODIFY_ID, MODIFY_DT, IT_USE_WAY, INSERT_ID,
				INSERT_DT, OPEN_AM, ERP_CO_CD, ERP_BGT_NM4, ERP_BGT_NM3,
				ERP_BGT_NM2, ERP_BGT_NM1, APPLY_AM, DOCU_MODE, DIV_NM2,
				DIV_CD2, CTL_FG, BANK_SQ, BANK_DT, ABGT_NM,
				ABGT_CD, ABDOCU_NO, ABDOCU_NO_REFFER, ABDOCU_B_NO, CONFER_RETURN
		FROM 	NEOS.G20_ABDOCU_B
		WHERE 	CONFER_RETURN		= #confer_return#
	</select>  

    <select id="AcG20ExGw.getACardSungin_List"  parameterClass="aCardVO" resultClass="aCardVO">
        /* AcG20ExGw.getACardSungin_List - mariaDB */   
        SELECT SG.* , CONCAT(DATE_FORMAT(NOW(),'%Y-%m-%d'), ' ', DATE_FORMAT(NOW(),'%H:%i:%s')) AS ISS_DATE
        FROM NEOS.G20_ACARD_SUNGIN SG
        WHERE ABDOCU_NO = #abdocu_no#
        AND ABDOCU_B_NO = #abdocu_b_no#
    </select>    
    
    <select id="AcG20ExGw.getACardList" parameterClass="java.util.HashMap"  resultClass="java.util.HashMap" >
       /* AcG20ExGw.getACardList - mariaDB */
		SELECT DISTINCT A.card_num AS CARD_NUM
		        , A.card_name AS CARD_NAME
		        , '$erpCompSeq$' AS CARD_CO_CD
		        , A.card_code AS CARD_CD
		        , '' AS CARD_CEO_NM
		        , partner_code AS CARD_TR_CD
		        , partner_name AS CARD_TR_NM
		        , '' AS CARD_TR_BANB
		        , '' AS CARD_FLAG_NM
		        , '' AS CARD_FLAG_NM
		FROM    (
		                SELECT  comp_seq
		                        , card_code
		                        , card_num
		                        , card_name
		                        , partner_code
		                        , partner_name
		                FROM    neos.T_ex_card
		                WHERE   comp_seq = '$compSeq$'
		                AND     IFNULL(card_num, '') != ''
		        ) A INNER JOIN (
		                SELECT  A.comp_seq
		                        , A.card_num
		                        , A.org_div
		                        , A.org_id
		                FROM    (
		                                SELECT  comp_seq
		                                        , card_num
		                                        , org_div
		                                        , org_id
		                                FROM    neos.T_ex_card_public
		                                WHERE   comp_seq = '$compSeq$'
		                        ) A INNER JOIN (
		                                SELECT  'u' AS org_div
		                                        , '$empSeq$' AS org_id
		                                UNION
		                                SELECT  B.gbn_org AS org_div
		                                        , B.dept_seq AS org_id
		                                FROM    (
		                                                SELECT  path
		                                                FROM    neos.v_org_chart_child
		                                                WHERE   gbn_org = 'd'
		                                                AND     dept_seq = '$deptSeq$'
		                                        ) A INNER JOIN (
		                                                SELECT  gbn_org
		                                                        , dept_seq
		                                                        , CONCAT('%', path, '%') AS path
		                                                FROM    neos.v_org_chart_child
		                                        ) B ON A.path LIKE B.path
		                        ) B ON A.org_div = B.org_div AND A.org_id = B.org_id
		        ) B ON A.comp_seq = B.comp_seq AND REPLACE(A.card_num,'-','') = REPLACE(B.card_num,'-','')
    </select>    
    
    <delete id="AcG20ExGw.deleteACardSungin"  parameterClass="aCardVO">
         /* AcG20ExGw.deleteACardSungin - mariaDB */
         DELETE FROM NEOS.G20_ABDOCU_T
          WHERE ABDOCU_NO = #abdocu_no#
            AND ABDOCU_B_NO = #abdocu_b_no#
            AND TRAN_CD = '301'
    </delete>    

    <insert id="AcG20ExGw.insertACardSungin" parameterClass="aCardVO">
        /* AcG20ExGw.insertACardSungin - mariaDB */    
        INSERT INTO NEOS.G20_ACARD_SUNGIN
        ( 
           ABDOCU_NO, ABDOCU_B_NO, ABDOCU_T_NO, ERP_CO_CD, ISS_DT, ISS_SQ, 
           CHAIN_NAME, CHAIN_REGNB, SUNGIN_NB, SUNGIN_AM, VAT_AM, TOT_AM,
           USER_TYPE, GW_STATE, GW_STATE_HAN, PKEY, CTR_CD, CTR_NM, ADMIT_DT, CHAIN_BUSINESS, CANCEL_YN, CARD_NB
        )
        VALUES
        (  
           #abdocu_no#, #abdocu_b_no#, #abdocu_t_no#, #erp_co_cd#, replace(#ISS_DT#, '-', ''), #ISS_SQ#, 
           #CHAIN_NAME#, #CHAIN_REGNB#, #SUNGIN_NB#, #SUNGIN_AM#, #VAT_AM#, #TOT_AM#, 
           #USER_TYPE#, IFNULL(#GW_STATE#,''), #GW_STATE_HAN#, #PKEY#, #CTR_CD#, #CTR_NM#, #ADMIT_DT#, #CHAIN_BUSINESS#, #CANCEL_YN#, #CARD_NB#
        )   
    </insert>   

    <insert id="AcG20ExGw.insertAbdocu_T_ACard" parameterClass="aCardVO">
        /* AcG20ExGw.insertAbdocu_T_ACard - mariaDB */   
            INSERT INTO NEOS.G20_ABDOCU_T
            ( ABDOCU_T_NO, ABDOCU_NO, ABDOCU_B_NO, DOCU_MODE, ERP_CO_CD,
              TR_NM, REG_NB, UNIT_AM, SUP_AM, VAT_AM,
              BANK_DT, BANK_SQ, CTR_CD, CTR_NM, TRAN_CD, INSERT_ID, INSERT_DT,
              NDEP_AM, INAD_AM, INTX_AM, RSTX_AM, CTR_CARD_NUM, TAX_DT
            )
            VALUES
            ( neos.nextval('abdocuTNo'), #abdocu_no#, #abdocu_b_no#, '1' , #erp_co_cd#, 
              #CHAIN_NAME#, #CHAIN_REGNB#,  #TOT_AM#,  #SUNGIN_AM# , #VAT_AM#,
              REPLACE(#ISS_DT#, '-', ''), #ISS_SQ#,#CTR_CD#, #CTR_NM#, '301', #emp_cd#, SYSDATE(),
               '0', '0', '0', '0', #CARD_NB#, replace(#ISS_DT#, '-', '')
            )
        <selectKey keyProperty="abdocu_t_no" resultClass="java.lang.String">
            SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuTNo'
        </selectKey>
        
    </insert>       
    
    <!-- 여비명세금액 총합 -->
    <select id="AcG20ExGw.getTravelItemsTotal" parameterClass="abdocu_H" resultClass="java.util.HashMap" >
        /* AcG20ExGw.getTravelItemsTotal - mariaDB */
        SELECT  SUM(TOTAL_AM) TOTAL_AM
        FROM    NEOS.G20_ABDOCU_TD2
        WHERE   ABDOCU_NO = #abdocu_no#
    </select>
    
    <!-- 일반물품명세금액 총합 -->
    <select id="AcG20ExGw.getGoodsItemsTotal" parameterClass="abdocu_H" resultClass="java.util.HashMap" >
        /* AcG20ExGw.getGoodsItemsTotal - mariaDB */
        SELECT SUM(CT_AM) TOTAL_AM
        FROM NEOS.G20_ABDOCU_D
        WHERE ABDOCU_NO = #abdocu_no#  
    </select>
        
    <select id="AcG20ExGw.getAbdocuTH" parameterClass="abdocu_H"  resultClass="abdocu_TH">
        /* AcG20ExGw.getAbdocuTH - mariaDB */
        SELECT * FROM NEOS.G20_ABDOCU_TH TH
        WHERE ABDOCU_NO     = #abdocu_no#
    </select>
    

    <select id="AcG20ExGw.getAbdocuTD_List" parameterClass="abdocu_H"  resultClass="abdocu_TD">
        /* AcG20ExGw.getAbdocuTD_List - mariaDB  */
        SELECT * FROM NEOS.G20_ABDOCU_TD
        WHERE ABDOCU_NO     = #abdocu_no#
        ORDER BY ABDOCU_TD_NO
    </select>    
    
    <select id="AcG20ExGw.getAbdocuTD2_List" parameterClass="abdocu_H"  resultClass="abdocu_TD2">
        /* AcG20ExGw.getAbdocuTD2_List - mariaDB */
        SELECT *
          FROM NEOS.G20_ABDOCU_TD2 TD2
        WHERE ABDOCU_NO     = #abdocu_no#
        ORDER BY ABDOCU_TD2_NO
    </select>
    
    <insert id="AcG20ExGw.insertAbdocu_TH" parameterClass="abdocu_TH">
        /* AcG20ExGw.insertAbdocu_TH - mariaDB */
        INSERT INTO NEOS.G20_ABDOCU_TH
        (
            ABDOCU_NO, ABDOCU_TH_NO, ERP_CO_CD,
            TS_DT, TE_DT, TDAY_CNT, SITE_NM, ONTRIP_NM, REQ_NM, RSV_NM, SCOST_AM, RCOST_AM, 
            INSERT_ID, INSERT_DT, BIZTRIP_APPL_ID
        )
        VALUES
        (
            #abdocu_no#, neos.nextval('abdocuTHNo'), #erp_co_cd#, 
            #ts_dt#, #te_dt#, #tday_cnt#, #site_nm#, substr(#ontrip_nm#,1,40), #req_nm#, #rsv_nm#, #scost_am#, #rcost_am#, 
            #insert_id#, SYSDATE(), #biztrip_appl_id#
        )
        <selectKey keyProperty="abdocu_th_no" resultClass="java.lang.String">
            SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuTHNo'
        </selectKey>
    </insert>    
    
    <update id="AcG20ExGw.updateAbdocu_TH" parameterClass="abdocu_TH">
        /* AcG20ExGw.updateAbdocu_TH - mariaDB */
        UPDATE  NEOS.G20_ABDOCU_TH
        SET 
                TS_DT          = IFNULL(#ts_dt#, TS_DT),
                TE_DT          = IFNULL(#te_dt#, TE_DT),
                TDAY_CNT       = IFNULL(#tday_cnt#, TDAY_CNT),
                SITE_NM        = IFNULL(#site_nm#, SITE_NM),
                ONTRIP_NM      = IFNULL(#ontrip_nm#, ONTRIP_NM),
                REQ_NM         = IFNULL(#req_nm#, REQ_NM),
                RSV_NM         = IFNULL(#rsv_nm#, RSV_NM),
                SCOST_AM       = IFNULL(#scost_am#, SCOST_AM),
                RCOST_AM       = IFNULL(#rcost_am#, RCOST_AM),
                MODIFY_ID      = IFNULL(#modify_id#, MODIFY_ID),
                MODIFY_DT      = SYSDATE()
        WHERE   ABDOCU_TH_NO   = #abdocu_th_no#
        AND     ABDOCU_NO      = #abdocu_no#
    </update>     
    
    
    <delete id="AcG20ExGw.deleteAbdocu_TH" parameterClass="abdocu_TH">
        /* AcG20ExGw.deleteAbdocu_TH - oracle */
          DELETE  
          FROM    NEOS.G20_ABDOCU_TH
          WHERE   ABDOCU_NO     = #abdocu_no#
        <isNotEmpty property="abdocu_th_no">
          AND     ABDOCU_TH_NO       = #abdocu_th_no#
        </isNotEmpty>
    </delete>
    
    <update id="AcG20ExGw.updateAbdocu_TD" parameterClass="abdocu_TD">
        /* AcG20ExGw.updateAbdocu_TD - mariaDB  */
        UPDATE  NEOS.G20_ABDOCU_TD
        SET 
                JONG_NM          = IFNULL(#jong_nm#, JONG_NM),
                JKM_CNT          = IFNULL(#jkm_cnt#, JKM_CNT),
                JGRADE           = IFNULL(#jgrade#, JGRADE),
                JUNIT_AM         = IFNULL(#junit_am#, JUNIT_AM),
                JTOT_AM          = IFNULL(#jtot_am#, JTOT_AM)
        WHERE   ABDOCU_TD_NO     = #abdocu_td_no#
        AND     ABDOCU_NO        = #abdocu_no#
    </update>    
    
    <insert id="AcG20ExGw.insertAbdocu_TD" parameterClass="abdocu_TD">
        /* AcG20ExGw.insertAbdocu_TD - mariaDB */
        INSERT INTO NEOS.G20_ABDOCU_TD
        (
                ABDOCU_NO, ABDOCU_TD_NO, ERP_CO_CD,
                JONG_NM, JKM_CNT, JGRADE, JUNIT_AM, JTOT_AM
        )
        VALUES
        (
                #abdocu_no#, neos.nextval('abdocuTDNo'), #erp_co_cd#, 
                #jong_nm#, #jkm_cnt#, #jgrade#, #junit_am#, #jtot_am#
        )
       <selectKey keyProperty="abdocu_td_no" resultClass="java.lang.String">
          SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuTDNo'
       </selectKey>
    </insert>    
        
    <delete id="AcG20ExGw.deleteAbdocu_TD" parameterClass="abdocu_TD">
        /* AcG20ExGw.deleteAbdocu_TD - mariaDB  */
          DELETE  
          FROM    NEOS.G20_ABDOCU_TD
          WHERE   ABDOCU_NO     = #abdocu_no#
        <isNotEmpty property="abdocu_td_no">
          AND     ABDOCU_TD_NO       = #abdocu_td_no#
        </isNotEmpty>
    </delete>   
    
   <update id="AcG20ExGw.updateAbdocu_TD2" parameterClass="abdocu_TD2">
       /* AcG20ExGw.updateAbdocu_TD2 - mariaDB */
        UPDATE  NEOS.G20_ABDOCU_TD2
        SET 
                DEPT_NM          = IFNULL(#dept_nm#, DEPT_NM),
                HCLS_NM          = IFNULL(#hcls_nm#, HCLS_NM),
                EMP_NM           = IFNULL(#emp_nm#, EMP_NM),
                TRIP_DT          = IFNULL(#trip_dt#, TRIP_DT),
                TRIP_DT2         = IFNULL(#trip_dt2#, TRIP_DT2),
                NT_CNT           = IFNULL(#nt_cnt#, NT_CNT),
                DAY_CNT          = IFNULL(#day_cnt#, DAY_CNT),
                START_NM         = IFNULL(#start_nm#, START_NM),
                CROSS_NM         = IFNULL(#cross_nm#, CROSS_NM),
                ARR_NM           = IFNULL(#arr_nm#, ARR_NM),
                JONG_NM          = IFNULL(#jong_nm#, JONG_NM),
                KM_AM            = IFNULL(#km_am#, KM_AM),
                FAIR_AM          = IFNULL(#fair_am#, FAIR_AM),
                DAY_AM           = IFNULL(#day_am#, DAY_AM),
                FOOD_AM          = IFNULL(#food_am#, FOOD_AM),
                ROOM_AM          = IFNULL(#room_am#, ROOM_AM),
                OTHER_AM         = IFNULL(#other_am#, OTHER_AM),
                TOTAL_AM         = IFNULL(#total_am#, TOTAL_AM),
                TRMK_DC          = IFNULL(#trmk_dc#, TRMK_DC),
                NA_DAY_AM		 = IFNULL(#na_day_am#, NA_DAY_AM),
                NA_ROOM_AM		 = IFNULL(#na_room_am#, NA_ROOM_AM),
                NA_FOOD_AM		 = IFNULL(#na_food_am#, NA_FOOD_AM)
        WHERE   ABDOCU_TD2_NO    = #abdocu_td2_no#
        AND     ABDOCU_NO        = #abdocu_no#
    </update>
    
    <insert id="AcG20ExGw.insertAbdocu_TD2" parameterClass="abdocu_TD2">
        /* AcG20ExGw.insertAbdocu_TD2 - mariaDB  */   
        INSERT INTO NEOS.G20_ABDOCU_TD2
        (
             ABDOCU_NO, ABDOCU_TD2_NO, ERP_CO_CD,
             DEPT_NM, HCLS_NM, EMP_NM, TRIP_DT, NT_CNT, DAY_CNT, START_NM, CROSS_NM, ARR_NM, 
             JONG_NM, KM_AM, FAIR_AM, DAY_AM, FOOD_AM, ROOM_AM, OTHER_AM, TOTAL_AM, TRMK_DC,
             BIZTRIP_APPL_ID , BIZTRIP_NO_SEQ, TRIP_DT2, NA_DAY_AM, NA_ROOM_AM, NA_FOOD_AM
        )
        VALUES
        (
             #abdocu_no#, neos.nextval('abdocuTD2No'), #erp_co_cd#, 
             #dept_nm#, #hcls_nm#, #emp_nm#, #trip_dt#, #nt_cnt#, #day_cnt#, #start_nm#, #cross_nm#, #arr_nm#,
             #jong_nm#, #km_am#, #fair_am#, #day_am#, #food_am#, #room_am#, #other_am#, #total_am#, #trmk_dc#,
             #biztrip_appl_id#, #biztrip_no_seq#, #trip_dt2#, #na_day_am#, #na_room_am#, #na_food_am#
        )
        <selectKey keyProperty="abdocu_td2_no" resultClass="java.lang.String">
            SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuTD2No'
        </selectKey>
    </insert>   
        
    <delete id="AcG20ExGw.deleteAbdocu_TD2" parameterClass="abdocu_TD2">
        /* AcG20ExGw.deleteAbdocu_TD2 - oracle */
          DELETE  
          FROM    NEOS.G20_ABDOCU_TD2
          WHERE   ABDOCU_NO     = #abdocu_no#
        <isNotEmpty property="abdocu_td2_no">
          AND     ABDOCU_TD2_NO       = #abdocu_td2_no#
        </isNotEmpty>
    </delete>        
    
    <select id="AcG20ExGw.getAbdocuD_List" parameterClass="abdocu_H"  resultClass="abdocu_D">
        /* AcG20ExGw.getAbdocuD_List - mariaDB */
        SELECT *
        FROM    NEOS.G20_ABDOCU_D
        WHERE   ABDOCU_NO        = #abdocu_no#
        ORDER BY ABDOCU_D_NO
    </select>    
        
    <update id="AcG20ExGw.updateAbdocu_D" parameterClass="abdocu_D">
        /* AcG20ExGw.updateAbdocu_D - mariaDB */
        UPDATE  NEOS.G20_ABDOCU_D
        SET 
                ITEM_NM          = IFNULL(#item_nm#, ITEM_NM),
                ITEM_DC          = IFNULL(#item_dc#, ITEM_DC),
                UNIT_DC          = IFNULL(#unit_dc#, UNIT_DC),
                CT_QT            = IFNULL(#ct_qt#, CT_QT),
                UNIT_AM          = IFNULL(#unit_am#, UNIT_AM),
                CT_AM            = IFNULL(#ct_am#, CT_AM),
                RMK_DC           = IFNULL(#rmk_dc#, RMK_DC),
                MODIFY_ID        = IFNULL(#modify_id#, MODIFY_ID),
                MODIFY_DT        = SYSDATE()
        WHERE   ABDOCU_D_NO      = #abdocu_d_no#
        AND     ABDOCU_NO        = #abdocu_no#
    </update> 
        
    <insert id="AcG20ExGw.insertAbdocu_D" parameterClass="abdocu_D">
        /* AcG20ExGw.insertAbdocu_D - oracle */
            INSERT INTO NEOS.G20_ABDOCU_D
            (
                ABDOCU_NO, ABDOCU_D_NO, ERP_CO_CD,
                ITEM_NM, ITEM_DC, UNIT_DC, CT_QT, UNIT_AM, CT_AM, RMK_DC,
                INSERT_ID, INSERT_DT
            )
            VALUES
            (
                #abdocu_no#, neos.nextval('abdocuDNo'), #erp_co_cd#, 
                #item_nm#, #item_dc#, #unit_dc#, #ct_qt#, #unit_am#, #ct_am#, #rmk_dc#, 
                #insert_id#, SYSDATE()
            )
        <selectKey keyProperty="abdocu_d_no" resultClass="java.lang.String">
            SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuDNo'
        </selectKey>
    </insert>
            
    <delete id="AcG20ExGw.deleteAbdocu_D" parameterClass="abdocu_D">
        /* AcG20ExGw.deleteAbdocu_D - mariaDB */
         DELETE  
         FROM    NEOS.G20_ABDOCU_D
         WHERE   ABDOCU_NO     = #abdocu_no#
        <isNotEmpty property="abdocu_d_no">
         AND     ABDOCU_D_NO       = #abdocu_d_no#
        </isNotEmpty>
    </delete>    
    
    
    <select id="AcG20ExGw.getETCDUMMY1" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
        /* AcG20ExGw.getETCDUMMY1 - mariaDB */
		SELECT	ETCDUMMY1, ETCDATA_CD 
		FROM	(    
			SELECT ETCDUMMY1, G20T.ETCDATA_CD, G20H.ABDOCU_NO,  G20H.C_DIKEYCODE 
			FROM 	NEOS.G20_ABDOCU_T G20T , NEOS.G20_ABDOCU_B G20B, NEOS.G20_ABDOCU_H G20H
			WHERE 	G20B.ABDOCU_NO = G20H.ABDOCU_NO  
			  AND 	G20T.ABDOCU_NO = G20H.ABDOCU_NO
			  AND 	G20H.ERP_CO_CD = #CO_CD#
			  AND 	G20B.TR_FG = '4'
			  AND 	G20T.TR_CD = #TR_CD#
		) G20, NEOS.ERPGWLINK GW
		WHERE	G20.ABDOCU_NO = DOCX_NUMB
		 AND	APPR_STATUS <![CDATA[ >= ]]> '002'
		ORDER BY ABDOCU_NO DESC
		LIMIT 1
     </select>
     
    <update id="AcG20ExGw.updateAbdocuCause" parameterClass="abdocu_H">
        /* AcG20ExGw.updateAbdocuCause - mariaDB */
        UPDATE NEOS.G20_ABDOCU_H
           SET CAUSE_DT    = #cause_dt#
             , SIGN_DT     = #sign_dt#
             , INSPECT_DT  = #inspect_dt#
             , CAUSE_ID    = #cause_id#
             , CAUSE_NM    = #cause_nm#
           WHERE ABDOCU_NO   = #abdocu_no#
    </update>
    
    <select id="AcG20ExGw.getThisPayDataList" parameterClass="java.util.HashMap" resultClass="payDataVO">
        /* AcG20ExGw.getThisPayDataList - mariaDB */
        SELECT HP.*
          FROM NEOS.G20_HPOMNPY_PADATA HP
         WHERE ABDOCU_NO = #abdocu_no#
           AND ABDOCU_B_NO = #abdocu_b_no#
    </select>

    <delete id="AcG20ExGw.deleteAbdocu_T_PayData"  parameterClass="payDataVO">
        /* AcG20ExGw.deleteAbdocu_T_PayData - mariaDB */
        DELETE FROM NEOS.G20_ABDOCU_T
         WHERE ABDOCU_NO = #abdocu_no#
           AND ABDOCU_B_NO = #abdocu_b_no#
           AND ET_YN = '5'
    </delete>    

    <insert id="AcG20ExGw.insertPayData" parameterClass="payDataVO">
        /* AcG20ExGw.insertPayData - mariaDB */
        INSERT INTO NEOS.G20_HPOMNPY_PADATA
        (  
            ABDOCU_NO, ABDOCU_B_NO, ABDOCU_T_NO, EMP_TR_CD, RVRS_YM, SQ
          , KOR_NM, DEPT_NM, GISU_DT, PAY_DT, TPAY_AM, SUP_AM, VAT_AM, INTX_AM, RSTX_AM, ETC_AM
          , ACCT_NO, PYTB_CD, DPST_NM, BANK_NM, RSRG_NO, PJT_NM, PKEY
        )
        VALUES( 
            #abdocu_no#, #abdocu_b_no#, #abdocu_t_no#, #EMP_TR_CD#, #RVRS_YM#, #SQ#
          , #KOR_NM#, #DEPT_NM#, #GISU_DT#, #PAY_DT#, #TPAY_AM#, #SUP_AM#,#VAT_AM#, #INTX_AM#, #RSTX_AM#, #ETC_AM#
          , #ACCT_NO#, #PYTB_CD#, #DPST_NM#, #BANK_NM#, #RSRG_NO#, #PJT_NM#, #PKEY#
        )     
    </insert>   

    <insert id="AcG20ExGw.insertAbdocu_T_PayData" parameterClass="payDataVO">
        /* AcG20ExGw.insertAbdocu_T_PayData - mariaDB */
        INSERT INTO NEOS.G20_ABDOCU_T
        ( 
            ABDOCU_T_NO, ABDOCU_NO, ABDOCU_B_NO, DOCU_MODE, ERP_CO_CD
          , TR_CD, TR_NM, UNIT_AM, SUP_AM, VAT_AM, INTX_AM, RSTX_AM, WD_AM, NDEP_AM, INAD_AM
          , DEPOSITOR, ETCRVRS_YM, ETCDUMMY1, JIRO_CD ,BTR_NM, BA_NB, ET_YN, INSERT_ID, INSERT_DT
         )
         VALUES
         (  
            neos.nextval('abdocuTNo'), #abdocu_no#, #abdocu_b_no#, '1' , #erp_co_cd#
          , #EMP_TR_CD#,  #KOR_NM#, IFNULL(#TPAY_AM#,0) , IFNULL(#SUP_AM#,0), IFNULL(#VAT_AM#,0), IFNULL(#INTX_AM#,0), IFNULL(#RSTX_AM#,0), IFNULL(#ETC_AM#,0),'0', '0'
          , #DPST_NM#, #RVRS_YM#, #SQ#, #PYTB_CD#, #BANK_NM#, #ACCT_NO#, '5', #emp_cd#, SYSDATE
         )
        <selectKey keyProperty="abdocu_t_no" resultClass="java.lang.String">
            SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuTNo'
        </selectKey>
     </insert> 
     
	<update id="AcG20ExGw.updateERPGWLINK" parameterClass="java.util.HashMap">
	    /* AcG20ExGw.updateERPGWLINK - mariaDB */
		UPDATE NEOS.ERPGWLINK
		   SET APPR_STATUS    = #apprStatus#,
		       MODIFY_ID      = #modifyId#, 
		       MODIFY_USERKEY = #modifyUserkey#, 
		       MODIFY_DT      = NOW()
		 WHERE APPR_DIKEY     = #apprDikey#	
	</update>

    <select id="AcG20ExGw.chkGwAcExDoExist" parameterClass="Abdocu_H" resultClass="int">
        /* AcG20ExGw.chkGwAcExDoExist - mariaDB */
        SELECT  COUNT(*)
          FROM  NEOS.G20_ABDOCU_H H
          JOIN  NEOS.ERPGWLINK LINK
            ON  LINK.APPR_DIKEY =  H.C_DIKEYCODE
           AND  APPR_STATUS IN ('001', '002', '003', '008', '009')
         WHERE  C_DIKEYCODE IS NOT NULL
           AND  H.ABDOCU_NO_REFFER =  #abdocu_no#
           AND  H.DOCU_MODE             = '1'  
    </select>         
    
    <insert id="AcG20ExGw.insertPurcReq" parameterClass="HashMap">
		/* AcG20ExGw.insertPurcReq - mariaDB */
        INSERT INTO dj_PURC_REQ
        (
			REG_DATE
			,PURC_REQ_NO
			,PURC_REQ_TYPE
			,PURC_REQ_TYPE_CODE_ID
			,PURC_REQ_TITLE
			,PURC_REQ_DATE
			,TERM
			,PURC_PURPOSE
			,TR_CD
			,TR_NM
			,REQUESTER_EMP_SEQ
			,REQUESTER_DEPT_NAME
			,REQUESTER_POSITION
			,REQUESTER_DUTY
			,REMARK
			,WRITE_EMP_SEQ
			,WRITE_EMP_IP
			,WRITE_DATE
			,ACTIVE
			,FORM_ID
			,CONT_AM
			,PAY_CON
			,PAY_CON_CODE_ID
			,PAY_TYPE
			,PAY_TYPE_CODE_ID
			,PAY_CNT
			,CONT_TYPE
			,CONT_TYPE_CODE_ID
			,CONT_DATE
			,REG_NB
			,CEO_NM
			,BASIC_AM
			,RATE
			,TR_PLACE
			,CONS_DOC_SEQ
        )
        VALUES
        (
			REPLACE(#regDate#,'-','')
			,#purcReqNo#
			,#purcReqType#
			,#purcReqTypeCodeId#
			,#purcReqTitle#
			,REPLACE(#purcReqDate#,'-','')
			,#term#
			,#purcPurpose#
			,#trCd#
			,#trNm#
			,#empSeq#
			,#deptName#
			,#position#
			,#duty#
			,#remark#
			,#empSeq#
			,#empIp#
			,now()
			,'Y'
			,#formId#
			,#contAm#
			,#payCon#
			,#payConCodeId#
			,#payType#
			,#payTypeCodeId#
			,#payCnt#
			,#contType#
			,#contTypeCodeId#
			,REPLACE(#contDate#,'-','')
			,#regNb#
			,#ceoNm#
			,#basicAm#
			,#rate#
			,#trPlace#
			,#consDocSeq#
        )
        <selectKey keyProperty="purcReqId" resultClass="int">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<update id="AcG20ExGw.updatePurcReq">
		/* AcG20ExGw.updatePurcReq - mariaDB */
		UPDATE dj_PURC_REQ
		SET
			REG_DATE = REPLACE(#regDate#,'-','')
			,PURC_REQ_NO = #purcReqNo#
			,PURC_REQ_TYPE = #purcReqType#
			,PURC_REQ_TYPE_CODE_ID = #purcReqTypeCodeId#
			,PURC_REQ_TITLE = #purcReqTitle#
			,PURC_REQ_DATE = REPLACE(#purcReqDate#,'-','')
			,TERM = #term#
			,PURC_PURPOSE = #purcPurpose#
			,TR_CD = #trCd#
			,TR_NM = #trNm#
			,REQUESTER_EMP_SEQ = #empSeq#
			,REQUESTER_DEPT_NAME = #deptName#
			,REQUESTER_POSITION = #position#
			,REQUESTER_DUTY = #duty#
			,REMARK = #remark#
			,LAST_UPDATE_EMP_SEQ = #empSeq#
			,LAST_UPDATE_EMP_IP = #empIp#
			,UPDATE_DATE = now()
			,ACTIVE = 'Y'
			,FORM_ID = #formId#
			,CONT_AM = #contAm#
			,PAY_CON = #payCon#
			,PAY_CON_CODE_ID = #payConCodeId#
			,PAY_TYPE = #payType#
			,PAY_TYPE_CODE_ID = #payTypeCodeId#
			,PAY_CNT = #payCnt#
			,CONT_TYPE = #contType#
			,CONT_TYPE_CODE_ID = #contTypeCodeId#
			,CONT_DATE = REPLACE(#contDate#,'-','')
			,REG_NB = #regNb#
			,CEO_NM = #ceoNm#
			,BASIC_AM = #basicAm#
			,RATE = #rate#
			,TR_PLACE = #trPlace#
		WHERE PURC_REQ_ID = #purcReqId#
	</update>

    <insert id="AcG20ExGw.insertPurcReqH" parameterClass="HashMap">
		/* AcG20ExGw.insertPurcReqH - mariaDB */
        INSERT INTO dj_PURC_REQ_H
        (
        	PURC_REQ_ID
        	,ABDOCU_NO
			,REMARK
			,WRITE_EMP_SEQ
			,WRITE_EMP_IP
			,WRITE_DATE
			,ACTIVE
        )
        VALUES
        (
        	#purcReqId#
        	,#abdocuNo#
			,#remark#
			,#empSeq#
			,#empIp#
			,now()
			,'Y'
        )
        <selectKey keyProperty="purcReqHId" resultClass="int">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<update id="AcG20ExGw.updatePurcReqH">
		/* AcG20ExGw.updatePurcReqH - mariaDB */
		UPDATE dj_PURC_REQ_H
		SET
			REMARK = #remark#
			,LAST_UPDATE_EMP_SEQ = #empSeq#
			,LAST_UPDATE_EMP_IP = #empIp#
			,UPDATE_DATE = now()
			,ACTIVE = 'Y'
		WHERE PURC_REQ_ID = #purcReqId#
		AND ABDOCU_NO = #abdocuNo#
	</update>
	
	<select id="AcG20ExGw.getPurcReq" parameterClass="HashMap" resultClass="egovMap">
		/* AcG20ExGw.getPurcReq - mariaDB */
		SELECT
			PURC_REQ_ID
			,CAST(CAST(REG_DATE AS DATE) AS CHAR(10)) AS REG_DATE
			,PURC_REQ_NO
			,CONCAT(PURC_REQ_YEAR, '-', PURC_REQ_DEPT_NAME, '-', LPAD(PURC_REQ_NO,4,'0')) AS PURC_REQ_NO2
			,PURC_REQ_TYPE
			,PURC_REQ_TYPE_CODE_ID
			,PURC_REQ_TITLE
			,CAST(CAST(PURC_REQ_DATE AS DATE) AS CHAR(10)) AS PURC_REQ_DATE
			,TERM
			,PURC_PURPOSE
			,TR_CD
			,TR_NM
			,REQUESTER_EMP_SEQ
			,neos.F_GETUSERNAME('1',REQUESTER_EMP_SEQ) AS REQUESTER_EMP_NAME
			,REQUESTER_DEPT_NAME
			,REQUESTER_POSITION
			,REQUESTER_DUTY
			,REQ_STATE
			,RETURN_REASON
			,C_DIKEYCODE
			,REMARK
			,WRITE_EMP_SEQ
			,WRITE_EMP_IP
			,WRITE_DATE
			,LAST_UPDATE_EMP_SEQ
			,LAST_UPDATE_EMP_IP
			,UPDATE_DATE
			,ACTIVE
			,PURC_REQ_YEAR
			,PURC_REQ_DEPT_SEQ
			,PURC_REQ_DEPT_NAME
<!-- 			,CONT_AM -->
			,(SELECT SUM(budget_amt) FROM neos.t_exnp_consbudget WHERE TPR.cons_doc_seq = cons_doc_seq) as CONT_AM
			,PAY_CON
			,PAY_CON_CODE_ID
			,PAY_TYPE
			,PAY_TYPE_CODE_ID
			,PAY_CNT
			,CONT_TYPE
			,CONT_TYPE_CODE_ID
			,CAST(CAST(CONT_DATE AS DATE) AS CHAR(10)) AS CONT_DATE
			,REG_NB
			,CEO_NM
			,CASE
				WHEN CONT_TYPE_CODE_ID = '002' THEN BASIC_AM
				ELSE CONT_AM
			END	AS BASIC_AM
			,RATE
			,TR_PLACE
			,cons_doc_seq
			,req_state_org
			,bidding_type
			,eval_type
		FROM dj_PURC_REQ TPR
		WHERE ACTIVE = 'Y'
		AND PURC_REQ_ID = #purcReqId#
	</select>
	
	<select id="AcG20ExGw.getPurcReqH" parameterClass="HashMap" resultClass="abdocu_H">
		/* AcG20ExGw.getPurcReqH - mariaDB */
		SELECT 
			*
		FROM dj_PURC_REQ_H A, NEOS.G20_ABDOCU_H B
		WHERE A.ABDOCU_NO = B.ABDOCU_NO
		AND A.ACTIVE = 'Y'
		AND A.PURC_REQ_ID = #purcReqId#
		ORDER BY A.ABDOCU_NO
	</select>
	
	 <insert id="AcG20ExGw.insertPurcReqB" parameterClass="HashMap">
		/* AcG20ExGw.insertPurcReqB - mariaDB */
        INSERT INTO dj_PURC_REQ_B
        (
        	PURC_REQ_H_ID
        	,ABDOCU_B_NO
        	,RETURN_YN
			,REMARK
			,WRITE_EMP_SEQ
			,WRITE_EMP_IP
			,WRITE_DATE
			,ACTIVE
			,OPEN_AM
			,EXEC_AM
			,REFER_AM
			,LEFT_AM
			,NEXT_AM
        )
        VALUES
        (
        	#purcReqHId#
        	,#abdocuBNo#
        	,#returnYn#
			,#remark#
			,#empSeq#
			,#empIp#
			,now()
			,'Y'
			,#openAm#
			,#execAm#
			,#referAm#
			,#leftAm#
			,#nextAm#
        )
        <selectKey keyProperty="purcReqBId" resultClass="int">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<update id="AcG20ExGw.updatePurcReqB">
		/* AcG20ExGw.updatePurcReqB - mariaDB */
		UPDATE dj_PURC_REQ_B
		SET
			RETURN_YN = #returnYn#
			,REMARK = #remark#
			,LAST_UPDATE_EMP_SEQ = #empSeq#
			,LAST_UPDATE_EMP_IP = #empIp#
			,UPDATE_DATE = now()
			,ACTIVE = 'Y'
			,OPEN_AM = #openAm#
			,EXEC_AM = #execAm#
			,REFER_AM = #referAm#
			,LEFT_AM = #leftAm#
			,NEXT_AM = #nextAm#
		WHERE PURC_REQ_H_ID = #purcReqHId#
		AND ABDOCU_B_NO = #abdocuBNo#
	</update>
	
	<delete id="AcG20ExGw.delPurcReq_H" parameterClass="abdocu_H">
		/* AcG20ExGw.delPurcReq_H - mariaDB */
		DELETE FROM dj_PURC_REQ_H
		WHERE PURC_REQ_H_ID = #purc_req_h_id#
	</delete>
	
	<delete id="AcG20ExGw.delPurcReqB" parameterClass="abdocu_B">
		/* AcG20ExGw.delPurcReqB - mariaDB */
		DELETE FROM dj_PURC_REQ_B
		WHERE PURC_REQ_H_ID = #purc_req_h_id#
		<isNotEmpty property="abdocu_b_no">
		AND ABDOCU_B_NO = #abdocu_b_no#
		</isNotEmpty>
	</delete>
	
	<delete id="AcG20ExGw.delPurcReqT" parameterClass="abdocu_T">
		/* AcG20ExGw.delPurcReqT - mariaDB */
		DELETE FROM dj_PURC_REQ_T
		WHERE ABDOCU_T_NO = #abdocu_t_no#
	</delete>
	
	<select id="AcG20ExGw.getPurcReqB" parameterClass="abdocu_H" resultClass="abdocu_B">
        /* AcG20ExGw.getPurcReqB - mariaDB 결의서 예산리스트 */
        SELECT 
        	A.*,
        	B.RETURN_YN,
        	B.APPLY_AM AS APPLY_AM2,
        	B.PURC_REQ_B_ID,
        	B.NEXT_AM
		FROM NEOS.G20_ABDOCU_B A, dj_PURC_REQ_B B, dj_PURC_REQ_H H
		WHERE A.ABDOCU_B_NO = B.ABDOCU_B_NO 
		AND A.ABDOCU_NO = H.ABDOCU_NO
		<isNotEmpty property="purc_req_id">
        AND H.PURC_REQ_ID = #purc_req_id#
        </isNotEmpty>
		<isNotEmpty property="abdocu_no">
        AND A.ABDOCU_NO = #abdocu_no#
        </isNotEmpty>
        ORDER BY A.ABDOCU_NO, A.ABDOCU_B_NO
	</select>
	
	<insert id="AcG20ExGw.insertPurcReqT" parameterClass="HashMap">
		/* AcG20ExGw.insertPurcReqT - mariaDB */
        INSERT INTO dj_PURC_REQ_T
        (
        	PURC_REQ_B_ID
        	,ABDOCU_T_NO
			,PPS_ID_NO
			,ITEM_TYPE
			,ITEM_TYPE_CODE_ID
			,STANDARD
			,CONTENTS
			,START_DATE
			,END_DATE
			,PPS_FEES
			,REMARK
			,WRITE_EMP_SEQ
			,WRITE_EMP_IP
			,WRITE_DATE
			,ACTIVE
			,PURC_TR_TYPE
			,TR_CD
			,TR_NM
			,REG_NB
			,CEO_NM
			,ITEM_NM
			,ITEM_CNT
			,ITEM_AM
			,UNIT_AM
			,SUP_AM
			,VAT_AM
			,NEXT_AM
        )
        VALUES
        (
        	#purcReqBId#
        	,#abdocuTNo#
        	,#ppsIdNo#
			,#itemType#
			,#itemTypeCodeId#
			,#standard#
			,#contents#
			,REPLACE(#startDate#,'-','')
			,REPLACE(#endDate#,'-','')
			,REPLACE(#ppsFees#,',','')
			,#remark#
			,#empSeq#
			,#empIp#
			,now()
			,'Y'
			,#purcTrType#
			,#tr_cd#
			,#tr_nm#
			,#reg_nb#
			,#ceo_nm#
			,#item_nm#
			,#item_cnt#
			,#item_am#
			,#unit_am#
			,#sup_am#
			,#vat_am#
			,#nextAm#
        )
        <selectKey keyProperty="purcReqTId" resultClass="int">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<update id="AcG20ExGw.updatePurcReqT" parameterClass="HashMap">
		/* AcG20ExGw.updatePurcReqT - mariaDB */
		UPDATE dj_PURC_REQ_T
		SET
			PPS_ID_NO = #ppsIdNo#
			,ITEM_TYPE = #itemType#
			,ITEM_TYPE_CODE_ID = #itemTypeCodeId#
			,STANDARD = #standard#
			,CONTENTS = #contents#
			,START_DATE = REPLACE(#startDate#,'-','')
			,END_DATE = REPLACE(#endDate#,'-','')
			,PPS_FEES = REPLACE(#ppsFees#,',','')
			,REMARK = #remark#
			,LAST_UPDATE_EMP_SEQ = #empSeq#
			,LAST_UPDATE_EMP_IP = #empIp#
			,UPDATE_DATE = now()
			,ACTIVE = 'Y'
			,PURC_TR_TYPE = #purcTrType#,
			tr_cd = #tr_cd#, 
			tr_nm = #tr_nm#, 
			reg_nb = #reg_nb#, 
			ceo_nm = #ceo_nm#, 
			item_nm = #item_nm#, 
			item_cnt = #item_cnt#, 
			item_am = #item_am#, 
			unit_am = #unit_am#, 
			sup_am = #sup_am#, 
			vat_am = #vat_am#,
			next_am = #nextAm#
		WHERE PURC_REQ_B_ID = #purcReqBId#
		AND ABDOCU_T_NO = #abdocuTNo#
	</update>
	
	<select id="AcG20ExGw.getPurcReqT" parameterClass="abdocu_B" resultClass="abdocu_T">
	    /* AcG20ExGw.getPurcReqT - mariaDB */
  		SELECT	T.*
			, CASE	IFNULL(CARD.ABDOCU_B_NO, 'N') WHEN 'N' THEN 'N' ELSE 'Y' END AS CMS_YN
			, A.purc_req_t_id
			, A.purc_req_b_id
			, A.abdocu_t_no
			, A.pps_id_no
			, A.item_type
			, A.item_type_code_id
			, A.standard
			, A.contents
			, CAST(CAST(A.START_DATE AS DATE) AS CHAR(10)) AS start_date
			, CAST(CAST(A.END_DATE AS DATE) AS CHAR(10)) AS end_date
			, A.pps_fees
			, A.remark
			, A.write_emp_seq
			, A.write_emp_ip
			, A.write_date
			, A.last_update_emp_seq
			, A.last_update_emp_ip
			, A.update_date
			, A.active
			, A.purc_tr_type
			, A.tr_cd as tr_cd2
			, A.tr_nm as tr_nm2
			, A.reg_nb as reg_nb2
			, A.ceo_nm as ceo_nm2
			, A.item_nm as item_nm2
			, A.item_cnt as item_cnt2
			, A.item_am as item_am2
			, A.unit_am as unit_am2
			, A.sup_am as sup_am2
			, A.vat_am as vat_am2
			, A.next_am
		FROM	NEOS.G20_ABDOCU_T T
			LEFT JOIN	NEOS.G20_ACARD_SUNGIN CARD
			 ON		CARD.abdocu_no = T.abdocu_no
			 AND		CARD.abdocu_b_no = T.abdocu_b_no 	
			 AND		CARD.abdocu_t_no = T.abdocu_t_no
			JOIN dj_PURC_REQ_T A
			ON T.ABDOCU_T_NO = A.ABDOCU_T_NO
		WHERE 	A.PURC_TR_TYPE = #purc_tr_type#
		AND T.ABDOCU_B_NO	=	#abdocu_b_no#
		ORDER BY T.ABDOCU_T_NO ASC;
	</select>
	
	<select id="AcG20ExGw.getPurcReqTList" parameterClass="Map" resultClass="egovMap">
	    /* AcG20ExGw.getPurcReqTList - mariaDB */
  		SELECT	T.*
			, CASE	IFNULL(CARD.ABDOCU_B_NO, 'N') WHEN 'N' THEN 'N' ELSE 'Y' END AS CMS_YN
			, A.purc_req_t_id
			, A.purc_req_b_id
			, A.abdocu_t_no
			, A.pps_id_no
			, A.item_type
			, A.item_type_code_id
			, A.standard
			, A.contents
			, CAST(CAST(A.START_DATE AS DATE) AS CHAR(10)) AS start_date
			, CAST(CAST(A.END_DATE AS DATE) AS CHAR(10)) AS end_date
			, A.pps_fees
			, A.remark
			, A.write_emp_seq
			, A.write_emp_ip
			, A.write_date
			, A.last_update_emp_seq
			, A.last_update_emp_ip
			, A.update_date
			, A.active
			, A.purc_tr_type
			, A.tr_cd as tr_cd2
			, A.tr_nm as tr_nm2
			, A.reg_nb as reg_nb2
			, A.ceo_nm as ceo_nm2
			, A.item_nm as item_nm2
			, A.item_cnt as item_cnt2
			, A.item_am as item_am2
			, A.unit_am as unit_am2
			, A.sup_am as sup_am2
			, A.vat_am as vat_am2
			, A.next_am
		FROM	NEOS.G20_ABDOCU_T T
			LEFT JOIN	NEOS.G20_ACARD_SUNGIN CARD
			 ON		CARD.abdocu_no = T.abdocu_no
			 AND		CARD.abdocu_b_no = T.abdocu_b_no 	
			 AND		CARD.abdocu_t_no = T.abdocu_t_no
			JOIN dj_PURC_REQ_T A
			ON T.ABDOCU_T_NO = A.ABDOCU_T_NO
			JOIN dj_PURC_REQ_B B
			ON A.PURC_REQ_B_ID = B.PURC_REQ_B_ID
			JOIN dj_PURC_REQ_H C
			ON B.PURC_REQ_H_ID = C.PURC_REQ_H_ID
		WHERE 	A.PURC_TR_TYPE = #purcTrType#
		<isNotEmpty property="purcReqId">
		AND C.PURC_REQ_ID	=	#purcReqId#
		</isNotEmpty>
		ORDER BY T.ABDOCU_T_NO ASC;
	</select>
	
	<insert id="AcG20ExGw.setPurcReqAttach" parameterClass="HashMap">
		INSERT INTO dj_PURC_REQ_ATTACH
		(
			PURC_REQ_ID
			,FILE_TYPE
			,REMARK
			,WRITE_EMP_SEQ
			,WRITE_EMP_IP
			,WRITE_DATE
			,ACTIVE
		)
		VALUES
		(
			#purcReqId#
			,#fileType#
			,#remark#
			,#empSeq#
			,#empIp#
			,now()
			,'Y'
		)
		<selectKey keyProperty="purcReqAttachId" resultClass="int">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<insert id="AcG20ExGw.setPurcContAttach" parameterClass="HashMap">
		INSERT INTO dj_PURC_CONT_ATTACH
		(
			PURC_CONT_ID
			,FILE_TYPE
			,REMARK
			,WRITE_EMP_SEQ
			,WRITE_EMP_IP
			,WRITE_DATE
			,ACTIVE
		)
		VALUES
		(
			#purcReqId#
			,#fileType#
			,#remark#
			,#empSeq#
			,#empIp#
			,now()
			,'Y'
		)
		<selectKey keyProperty="purcReqAttachId" resultClass="int">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<select id="AcG20ExGw.getAttachFileList" parameterClass="HashMap" resultClass="egovMap">
		SELECT * FROM dj_ATTACH_FILE A, dj_PURC_REQ_ATTACH B
		WHERE A.TARGET_ID = B.PURC_REQ_ATTACH_ID
		AND UPPER(A.TARGET_TABLE_NAME) = UPPER('TPF_PURC_REQ_ATTACH')
		AND B.PURC_REQ_ID = #purcReqId#
		ORDER BY A.TARGET_ID, A.FILE_NAME
	</select>
	
	<select id="AcG20ExGw.getAttachFileList2" parameterClass="HashMap" resultClass="egovMap">
		SELECT * FROM dj_ATTACH_FILE A, dj_PURC_CONT_ATTACH B
		WHERE A.TARGET_ID = B.PURC_CONT_ATTACH_ID
		AND UPPER(A.TARGET_TABLE_NAME) = UPPER('TPF_PURC_CONT_ATTACH')
		AND B.PURC_CONT_ID = #purcContId#
		ORDER BY A.TARGET_ID, A.FILE_NAME
	</select>
	
	<update id="AcG20ExGw.makePurcReqNo" parameterClass="HashMap">
		UPDATE 
			dj_PURC_REQ A,
			(
				SELECT 
					IFNULL(MAX(PURC_REQ_NO),0)+1 AS PURC_REQ_NO 
				FROM dj_PURC_REQ 
				WHERE PURC_REQ_YEAR = #year# 
				AND PURC_REQ_DEPT_SEQ = #deptCode#
			) B
		SET 
			A.PURC_REQ_NO = B.PURC_REQ_NO
			,A.PURC_REQ_YEAR = #year#
			,A.PURC_REQ_DEPT_SEQ = #deptCode#
			,A.PURC_REQ_DEPT_NAME = #deptName#
			,A.REQ_STATE = '000'
		WHERE A.PURC_REQ_ID = #purcReqId#
	</update>
	
	<update id="AcG20ExGw.updatePurcReqState" parameterClass="HashMap">
		UPDATE dj_PURC_REQ
		SET
			REQ_STATE = #reqState#,
			RETURN_REASON = #returnReason#
		<isNotEmpty property="reqStateOrg">
			,REQ_STATE_ORG = #reqStateOrg#
		</isNotEmpty>
		<isNotEmpty property="biddingType">
			,BIDDING_TYPE = #biddingType#
		</isNotEmpty>
		<isNotEmpty property="evalType">
			,EVAL_TYPE = #evalType#
		</isNotEmpty>
		<isEqual property="reqState" compareValue="169">
			,NEGO_DATE = NOW()
		</isEqual>
		WHERE PURC_REQ_ID = #purcReqId#
	</update>
	
	<insert id="AcG20ExGw.excelUploadSaveAbdocuT" parameterClass="HashMap">
		INSERT INTO NEOS.G20_ABDOCU_T
		(
		ABDOCU_T_NO, ABDOCU_NO, ABDOCU_B_NO, DOCU_MODE, ERP_CO_CD, ITEM_NM, ITEM_CNT, UNIT_AM, SUP_AM, VAT_AM, RMK_DC, TR_FG, TR_FG_NM, INSERT_ID, INSERT_DT, ITEM_AM, TR_NM, REG_NB, CEO_NM
		)
		VALUES
		(
		neos.nextval('abdocuTNo'), #abdocu_no#, #abdocu_b_no#, #docu_mode#, #erp_co_cd#, #item_nm#, #item_cnt#, #unit_am#, #sup_am#, #vat_am#, #rmk_dc#, #tr_fg#, #tr_fg_nm#, #empSeq#, NOW(), #item_am#, #tr_nm#, #reg_nb#, #ceo_nm#
		)
		<selectKey keyProperty="abdocu_t_no" resultClass="java.lang.String">
            SELECT CURRVAL FROM neos.T_seq WHERE name  = 'abdocuTNo'
        </selectKey>
	</insert>
	
	<insert id="AcG20ExGw.excelUploadSavePurcReqT" parameterClass="HashMap">
		INSERT INTO dj_PURC_REQ_T
		(
		PURC_REQ_B_ID, ABDOCU_T_NO, PPS_ID_NO, ITEM_TYPE, ITEM_TYPE_CODE_ID, STANDARD, CONTENTS, START_DATE, END_DATE, PPS_FEES, REMARK, WRITE_EMP_SEQ, WRITE_EMP_IP, WRITE_DATE, ACTIVE, PURC_TR_TYPE,
		TR_NM, REG_NB, CEO_NM, ITEM_NM, ITEM_CNT, ITEM_AM, UNIT_AM, SUP_AM, VAT_AM
		)
		VALUES
		(
		#purc_req_b_id#, #abdocu_t_no#, #pps_id_no#, #item_type#, #item_type_code_id#, #standard#, #contents#, #start_date#, #end_date#, #pps_fees#, #remark#, #empSeq#, #empIp#, NOW(), 'Y', #purc_tr_type#,
		#tr_nm#, #reg_nb#, #ceo_nm#, #item_nm#, #item_cnt#, #item_am#, #unit_am#, #sup_am#, #vat_am#
		)
	</insert>
	
	<select id="AcG20ExGw.selectAbdocuB_ApplyAm" parameterClass="String" resultClass="String">
		SELECT APPLY_AM FROM NEOS.G20_ABDOCU_B WHERE ABDOCU_B_NO = #abdocu_b_no#
	</select>
	
	<select id="AcG20ExGw.purcReqListData" parameterClass="HashMap" resultClass="egovMap">
		/*AcG20ExGw.purcReqListData*/
		SELECT 
			TPR.PURC_REQ_ID, 
			CAST(CAST(TPR.REG_DATE AS DATE) AS CHAR(10)) AS REG_DATE,
			CONCAT(TPR.PURC_REQ_DEPT_NAME, '-', LPAD(TPR.PURC_REQ_NO,4,'0')) AS PURC_REQ_NO,
			TPR.PURC_REQ_TYPE, 
			TPR.PURC_REQ_TYPE_CODE_ID, 
			TPR.PURC_REQ_TITLE, 
			CAST(CAST(TPR.PURC_REQ_DATE AS DATE) AS CHAR(10)) AS PURC_REQ_DATE,
			TPR.TERM, 
			TPR.PURC_PURPOSE, 
			TPR.TR_CD, 
			TPR.TR_NM, 
			TPR.REQUESTER_EMP_SEQ,
			TPR.REQUESTER_DEPT_NAME, 
			TPR.REQUESTER_POSITION, 
			TPR.REQUESTER_DUTY, 
			TPR.REQ_STATE, 
			TPR.RETURN_REASON, 
			TPR.C_DIKEYCODE, 
			TPR.REMARK, 
			TPR.WRITE_EMP_SEQ, 
			TPR.WRITE_EMP_IP, 
			TPR.WRITE_DATE, 
			TPR.LAST_UPDATE_EMP_SEQ, 
			TPR.LAST_UPDATE_EMP_IP, 
			TPR.UPDATE_DATE, 
			TPR.ACTIVE, 
			TPR.PURC_REQ_YEAR, 
			TPR.PURC_REQ_DEPT_SEQ, 
			TPR.PURC_REQ_DEPT_NAME,
			TPR.FORM_ID,
			EMP.EMP_NAME AS REQUESTER_EMP_NAME,
			CMMCD.CODE_KR AS REQ_STATE_NM,
			<!-- DI.C_TIKEYCODE -->
			TPR.FORM_ID AS C_TIKEYCODE,
			TPR.CONT_AM,
<!-- 			(SELECT SUM(budget_amt) FROM neos.t_exnp_consbudget WHERE TPR.cons_doc_seq = cons_doc_seq) as CONT_AM, -->
			TPR.CONT_TYPE,
			TPR.CONT_TYPE_CODE_ID,
			TPR.CONT_DATE,
			TPR.EVAL_TYPE
		FROM dj_PURC_REQ TPR
		LEFT OUTER JOIN neos.T_CO_EMP_MULTI EMP
		ON TPR.REQUESTER_EMP_SEQ = EMP.EMP_SEQ
		AND EMP.LANG_CODE = 'kr'
		LEFT OUTER JOIN common_code CMMCD
		ON TPR.REQ_STATE = CMMCD.CODE
		AND GROUP_CODE = 'PURC_REQ_STATE'
		LEFT OUTER JOIN NEOS.A_TEMPLATEINFO TI
	    ON TPR.FORM_ID = TI.C_TIKEYCODE
		<!-- INNER JOIN NEOS.A_DOCINFO DI
		ON TPR.C_DIKEYCODE = DI.C_DIKEYCODE -->
		WHERE TPR.ACTIVE = 'Y'
		<isNotEqual property="reqState" compareValue="000">
		AND TPR.C_DIKEYCODE  IS NOT NULL
		</isNotEqual>
		<isNotEmpty property="frDt">
		AND TPR.REG_DATE >= #frDt#
		</isNotEmpty>
		<isNotEmpty property="toDt">
		AND TPR.REG_DATE <![CDATA[<=]]> #toDt#
		</isNotEmpty>
		<isNotEmpty property="purcReqType">
		AND TPR.PURC_REQ_TYPE_CODE_ID = #purcReqType#
		</isNotEmpty>
		<isNotEmpty property="deptCd">
		AND TPR.PURC_REQ_DEPT_SEQ = #deptCd#
		</isNotEmpty>
		<isNotEmpty property="userSeq">
		AND TPR.REQUESTER_EMP_SEQ = #userSeq#
		</isNotEmpty>
		<isNotEmpty property="reqState">
		AND TPR.REQ_STATE = #reqState#
		</isNotEmpty>
		<isNotEmpty property="reqState2">
		AND TPR.REQ_STATE in ($reqState2$)
		</isNotEmpty>
		<isNotEmpty property="bidding">
		AND TPR.REQ_STATE like '1%'
		</isNotEmpty>
		<isNotEmpty property="title">
		AND TPR.PURC_REQ_TITLE LIKE CONCAT('%', #title#, '%')
		</isNotEmpty>
		<isNotEmpty property="contAm">
         AND IFNULL(TPR.CONT_AM,0) >= #contAm#
		</isNotEmpty>
		<!-- AND 1 <![CDATA[>]]> (SELECT COUNT(SMALL_YN) FROM dj_PURC_CONT TPC WHERE TPR.PURC_REQ_ID = TPC.PURC_REQ_ID AND SMALL_YN = 'Y') -->
		ORDER BY PURC_REQ_ID DESC
		LIMIT   $skip$ , $pageSize$
	</select>
	
	<select id="AcG20ExGw.purcReqListDataTotal" parameterClass="HashMap" resultClass="String">
		SELECT 
			COUNT(*)
		FROM dj_PURC_REQ TPR
		LEFT OUTER JOIN neos.T_CO_EMP_MULTI EMP
		ON TPR.REQUESTER_EMP_SEQ = EMP.EMP_SEQ
		AND EMP.LANG_CODE = 'kr'
		LEFT OUTER JOIN common_code CMMCD
		ON TPR.REQ_STATE = CMMCD.CODE
		AND GROUP_CODE = 'PURC_REQ_STATE'
		LEFT OUTER JOIN NEOS.A_TEMPLATEINFO TI
	    ON TPR.FORM_ID = TI.C_TIKEYCODE
		<!-- INNER JOIN NEOS.A_DOCINFO DI
		ON TPR.C_DIKEYCODE = DI.C_DIKEYCODE -->
		WHERE TPR.ACTIVE = 'Y'
		<isNotEqual property="reqState" compareValue="000">
		AND TPR.C_DIKEYCODE  IS NOT NULL
		</isNotEqual>
		<isNotEmpty property="frDt">
		AND TPR.REG_DATE >= #frDt#
		</isNotEmpty>
		<isNotEmpty property="toDt">
		AND TPR.REG_DATE <![CDATA[<=]]> #toDt#
		</isNotEmpty>
		<isNotEmpty property="purcReqType">
		AND TPR.PURC_REQ_TYPE_CODE_ID = #purcReqType#
		</isNotEmpty>
		<isNotEmpty property="deptCd">
		AND TPR.PURC_REQ_DEPT_SEQ = #deptCd#
		</isNotEmpty>
		<isNotEmpty property="userSeq">
		AND TPR.REQUESTER_EMP_SEQ = #userSeq#
		</isNotEmpty>
		<isNotEmpty property="reqState">
		AND TPR.REQ_STATE = #reqState#
		</isNotEmpty>
		<isNotEmpty property="reqState2">
		AND TPR.REQ_STATE in ($reqState2$)
		</isNotEmpty>
		<isNotEmpty property="bidding">
		AND TPR.REQ_STATE like '1%'
		</isNotEmpty>
		<isNotEmpty property="title">
		AND TPR.PURC_REQ_TITLE LIKE CONCAT('%', #title#, '%')
		</isNotEmpty>
		<isNotEmpty property="contAm">
         AND IFNULL(TPR.CONT_AM,0) >= #contAm#
		</isNotEmpty>
		<!-- AND 1 <![CDATA[>]]> (SELECT COUNT(SMALL_YN) FROM dj_PURC_CONT TPC WHERE TPR.PURC_REQ_ID = TPC.PURC_REQ_ID AND SMALL_YN = 'Y') -->
	</select>
	
	<select id="AcG20ExGw.purcContListData" parameterClass="HashMap" resultClass="egovMap">
		/*AcG20ExGw.purcContListData*/
		SELECT
			A.*,
			<!-- IFNULL(F_GETDOCNUMBER(A.CONT_DIKEY),'') AS CONT_DOC_NO -->
			<!-- (SELECT C_RIDOCFULLNUM FROM NEOS.A_RECORDINFO WHERE C_DIKEYCODE = A.CONT_DIKEY) AS CONT_DOC_NO -->
			B.C_RIDOCFULLNUM AS CONT_DOC_NO
		FROM
		(
			SELECT 
				TPR.PURC_REQ_ID, 
				CAST(CAST(TPR.REG_DATE AS DATE) AS CHAR(10)) AS REG_DATE,
				CASE
	                WHEN TPC.SMALL_YN != 'Y' THEN CONCAT(TPR.PURC_REQ_DEPT_NAME, '-', LPAD(TPR.PURC_REQ_NO, 4, '0'))
	                ELSE ''
	            END AS PURC_REQ_NO,
				TPR.PURC_REQ_TYPE, 
				TPR.PURC_REQ_TYPE_CODE_ID, 
				TPR.PURC_REQ_TITLE, 
				CAST(CAST(TPR.PURC_REQ_DATE AS DATE) AS CHAR(10)) AS PURC_REQ_DATE,
				TPR.TERM, 
				TPR.PURC_PURPOSE, 
				<!-- TPR.TR_CD, 
				TPR.TR_NM,  -->
				TPR.REQUESTER_EMP_SEQ,
				TPR.REQUESTER_DEPT_NAME, 
				TPR.REQUESTER_POSITION, 
				TPR.REQUESTER_DUTY, 
				TPR.REQ_STATE, 
				TPR.RETURN_REASON, 
				TPR.C_DIKEYCODE, 
				TPR.REMARK, 
				TPR.WRITE_EMP_SEQ, 
				TPR.WRITE_EMP_IP, 
				TPR.WRITE_DATE, 
				TPR.LAST_UPDATE_EMP_SEQ, 
				TPR.LAST_UPDATE_EMP_IP, 
				TPR.UPDATE_DATE, 
				TPR.ACTIVE, 
				TPR.PURC_REQ_YEAR, 
				TPR.PURC_REQ_DEPT_SEQ, 
				TPR.PURC_REQ_DEPT_NAME,
				TPR.FORM_ID,
				<!-- DI.C_TIKEYCODE, -->
				TPR.FORM_ID AS C_TIKEYCODE,
				TPC.PURC_CONT_ID,
				TPC.CONT_STEP,
	            TPC.C_DIKEYCODE AS CONT_DIKEY,
	            TPC.CONT_TITLE,
	            <!-- IFNULL(F_GETDOCNUMBER(TPC.C_DIKEYCODE),'') AS CONT_DOC_NO, -->
	            CAST(CAST(TPC.CONT_START_DATE AS DATE) AS CHAR(10)) AS CONT_START_DATE,
	            CAST(CAST(TPC.CONT_END_DATE AS DATE) AS CHAR(10)) AS CONT_END_DATE,
	            CAST(CAST(TPC.CONT_START_DATE2 AS DATE) AS CHAR(10)) AS CONT_START_DATE2,
	            CAST(CAST(TPC.CONT_END_DATE2 AS DATE) AS CHAR(10)) AS CONT_END_DATE2,
	            CAST(CAST(TPC.CONT_DATE AS DATE) AS CHAR(10)) AS CONT_DATE,
	            CAST(CAST(TPC.CONT_DATE2 AS DATE) AS CHAR(10)) AS CONT_DATE2,
	            TPC.CONT_TERM,
	            TPC.TR_NM,
	            TPC.TR_CD,
<!-- 	            CASE -->
<!-- 					WHEN FORMAT(TPC2.CONT_AM, 0) IS NOT NULL THEN TPC2.CONT_AM -->
<!-- 	                ELSE FORMAT(TPC.CONT_AM, 0) -->
<!-- 				END AS CONT_AM, -->
				(SELECT SUM(budget_amt) FROM neos.t_exnp_consbudget WHERE TPR.cons_doc_seq = cons_doc_seq) as CONT_AM,
	            TPC.SMALL_YN,
	            TPC.CONT_TYPE,
	            TPC.CONT_TYPE_CODE_ID,
<!-- 	            TPC2.CONT_AM AS CONT_AM2, -->
			    TPC2.TR_NM AS TR_NM2,
			    TPC2.PURC_CONT_ID AS PURC_CONT_ID2,
			    TPC2.PURC_CONT_ID_ORG,
				EMP.EMP_NAME AS REQUESTER_EMP_NAME,
				CMMCD.CODE_KR AS REQ_STATE_NM,
				CMMCD2.CODE_KR AS CONT_STEP_NM,
				CONCAT('계약일로 부터 ',CASE
					WHEN CAST(CAST(TPR.PURC_REQ_DATE AS DATE) AS CHAR (10)) IS NOT NULL THEN CAST(CAST(TPR.PURC_REQ_DATE AS DATE) AS CHAR (10))
	                ELSE
						CASE
							WHEN TPC.CONT_DATE IS NULL THEN DATE_ADD(TPR.REG_DATE, INTERVAL TPR.TERM DAY)
	                        ELSE DATE_ADD(TPC.CONT_DATE, INTERVAL TPR.TERM DAY)
						END
				END,'일 까지') AS PURC_REQ_DATE_TXT,
	            (
	            SELECT SUM(unit_am) FROM dj_purc_cont_insp AA, dj_purc_cont_insp_t BB WHERE AA.purc_cont_insp_id = BB.purc_cont_insp_id AND AA.purc_cont_id = TPC.purc_cont_id AND AA.insp_state = '003'
	            ) AS INSP_AM,
	            (
				SELECT SUM(AA.budget_amt)
				FROM NEOS.t_exnp_resbudget AA, NEOS.t_exnp_resdoc BB
				WHERE AA.res_doc_seq = BB.res_doc_seq
				AND BB.conffer_doc_seq = TPR.cons_doc_seq
	            AND BB.doc_status = '008'
				) AS PAY_AM,
				TPR.EVAL_TYPE
			FROM dj_PURC_REQ TPR
			<!-- INNER JOIN NEOS.A_DOCINFO DI
			ON TPR.C_DIKEYCODE = DI.C_DIKEYCODE -->
			INNER JOIN dj_PURC_CONT TPC
	        ON TPR.PURC_REQ_ID = TPC.PURC_REQ_ID
	        AND TPC.C_DIKEYCODE IS NOT NULL
			LEFT OUTER JOIN 
	        (
				SELECT AA.CONT_AM, AA.PURC_CONT_ID_ORG, AA.TR_NM, AA.PURC_CONT_ID
				FROM dj_PURC_CONT AA,
				(
					SELECT PURC_CONT_ID_ORG, MAX(MOD_ORDER_NO) AS MOD_ORDER_NO
					FROM dj_PURC_CONT
					WHERE ACTIVE = 'Y'
					AND PURC_CONT_ID_ORG IS NOT NULL
					AND MOD_ORDER_NO > 0
					GROUP BY PURC_CONT_ID_ORG
				) BB
				WHERE AA.PURC_CONT_ID_ORG = BB.PURC_CONT_ID_ORG
				AND AA.MOD_ORDER_NO = BB.MOD_ORDER_NO
			) TPC2
	        ON TPC.PURC_CONT_ID = TPC2.PURC_CONT_ID_ORG
			LEFT OUTER JOIN neos.T_CO_EMP_MULTI EMP
			ON TPR.REQUESTER_EMP_SEQ = EMP.EMP_SEQ
			AND EMP.LANG_CODE = 'kr'
			LEFT OUTER JOIN common_code CMMCD
			ON TPR.REQ_STATE = CMMCD.CODE
			AND CMMCD.GROUP_CODE = 'PURC_REQ_STATE'
	        LEFT OUTER JOIN common_code CMMCD2
			ON TPC.CONT_STEP = CMMCD2.CODE
			AND CMMCD2.GROUP_CODE = 'PURC_CONT_STEP'
			WHERE TPR.ACTIVE = 'Y'
			AND TPR.C_DIKEYCODE  IS NOT NULL
			<isNotEmpty property="frDt">
				<isNotEmpty property="toDt">
			AND 
	        (
				(
					TPC.CONT_DATE2 IS NULL
					AND
					(
						TPR.REG_DATE >= #frDt# AND TPR.REG_DATE <![CDATA[<=]]> #toDt#
					)
	            )
	            OR
	            (
					TPC.CONT_DATE2 IS NOT NULL
					AND
					(
						TPC.CONT_DATE2 >= #frDt# AND TPC.CONT_DATE2 <![CDATA[<=]]> #toDt#
					)
	            )
	        
	        )
	        	</isNotEmpty>
	        </isNotEmpty>
			<isNotEmpty property="purcReqType">
			AND TPR.PURC_REQ_TYPE_CODE_ID = #purcReqType#
			</isNotEmpty>
			<isNotEmpty property="deptCd">
			AND TPR.PURC_REQ_DEPT_SEQ = #deptCd#
			</isNotEmpty>
			<isNotEmpty property="userSeq">
			AND TPR.REQUESTER_EMP_SEQ = #userSeq#
			</isNotEmpty>
			<isNotEmpty property="reqState">
			AND TPR.REQ_STATE = #reqState#
			</isNotEmpty>
			<isNotEmpty property="contStep">
			AND TPC.CONT_STEP = #contStep#
			</isNotEmpty>
			<isEmpty property="contStep">
			AND TPC.CONT_STEP > '002'
			</isEmpty>
			<isNotEmpty property="contAm">
			AND
			(
				(
					TPC2.CONT_AM IS NULL
					AND TPC.CONT_AM >= #contAm#
				)
				OR
				(
					TPC2.CONT_AM IS NOT NULL 
		            AND TPC2.CONT_AM >= #contAm#
				)
			)
			</isNotEmpty>
			<isNotEmpty property="trNm">
			AND
			(
				(
					TPC2.TR_NM IS NULL
					AND TPC.TR_NM LIKE CONCAT('%', #trNm#, '%')
				)
				OR
				(
					TPC2.TR_NM IS NOT NULL 
					AND TPC2.TR_NM LIKE CONCAT('%', #trNm#, '%')
				)
			)
			</isNotEmpty>
			<isNotEmpty property="contTitle">
			AND TPC.CONT_TITLE LIKE CONCAT('%', #contTitle#, '%')
			</isNotEmpty>
			<isNotEmpty property="title">
			AND TPR.PURC_REQ_TITLE LIKE CONCAT('%', #title#, '%')
			</isNotEmpty>
			<isNotEmpty property="contMod">
			AND TPC.CONT_STEP NOT IN ('007')
			</isNotEmpty>
			<isNotEmpty property="smallYn">
			AND TPC.SMALL_YN = #smallYn#
			</isNotEmpty>
			<isNotEmpty property="mgtCd">
			and (select count(hh.mgt_seq) from neos.t_exnp_conshead hh, dj_purc_req_h tprh where hh.cons_seq = tprh.abdocu_no and tprh.purc_req_id = tpr.purc_req_id and hh.mgt_seq = #mgtCd#) > 0
			</isNotEmpty>
			<isNotEmpty property="abgtCd">
            and (select count(bb.erp_budget_seq) from neos.t_exnp_consbudget bb, dj_purc_req_h tprh where bb.cons_seq = tprh.abdocu_no and tprh.purc_req_id = tpr.purc_req_id and bb.erp_budget_seq = #abgtCd#) > 0
			</isNotEmpty>
			ORDER BY PURC_REQ_ID DESC
			LIMIT   $skip$ , $pageSize$
		) A
		LEFT OUTER JOIN NEOS.A_RECORDINFO B
	    ON B.C_DIKEYCODE = A.CONT_DIKEY
	</select>
	
	<select id="AcG20ExGw.purcContListDataTotal" parameterClass="HashMap" resultClass="String">
		/*AcG20ExGw.purcContListDataTotal*/
		SELECT 
			COUNT(*)
		FROM dj_PURC_REQ TPR
		<!-- INNER JOIN NEOS.A_DOCINFO DI
		ON TPR.C_DIKEYCODE = DI.C_DIKEYCODE -->
		INNER JOIN dj_PURC_CONT TPC
        ON TPR.PURC_REQ_ID = TPC.PURC_REQ_ID
        AND TPC.C_DIKEYCODE IS NOT NULL
		<!-- LEFT OUTER JOIN neos.T_CO_EMP_MULTI EMP
		ON TPR.REQUESTER_EMP_SEQ = EMP.EMP_SEQ
		AND EMP.LANG_CODE = 'kr'
		LEFT OUTER JOIN common_code CMMCD
		ON TPR.REQ_STATE = CMMCD.CODE
		AND CMMCD.GROUP_CODE = 'PURC_REQ_STATE'
        LEFT OUTER JOIN common_code CMMCD2
		ON TPC.CONT_STEP = CMMCD2.CODE
		AND CMMCD2.GROUP_CODE = 'PURC_CONT_STEP' -->
		LEFT OUTER JOIN 
        (
			SELECT AA.CONT_AM, AA.PURC_CONT_ID_ORG, AA.TR_NM, AA.PURC_CONT_ID
			FROM dj_PURC_CONT AA,
			(
				SELECT PURC_CONT_ID_ORG, MAX(MOD_ORDER_NO) AS MOD_ORDER_NO
				FROM dj_PURC_CONT
				WHERE ACTIVE = 'Y'
				AND PURC_CONT_ID_ORG IS NOT NULL
				AND MOD_ORDER_NO > 0
				GROUP BY PURC_CONT_ID_ORG
			) BB
			WHERE AA.PURC_CONT_ID_ORG = BB.PURC_CONT_ID_ORG
			AND AA.MOD_ORDER_NO = BB.MOD_ORDER_NO
		) TPC2
        ON TPC.PURC_CONT_ID = TPC2.PURC_CONT_ID_ORG
		WHERE TPR.ACTIVE = 'Y'
		AND TPR.C_DIKEYCODE  IS NOT NULL
		<isNotEmpty property="frDt">
		AND TPR.REG_DATE >= #frDt#
		</isNotEmpty>
		<isNotEmpty property="toDt">
		AND TPR.REG_DATE <![CDATA[<=]]> #toDt#
		</isNotEmpty>
		<isNotEmpty property="purcReqType">
		AND TPR.PURC_REQ_TYPE_CODE_ID = #purcReqType#
		</isNotEmpty>
		<isNotEmpty property="deptCd">
		AND TPR.PURC_REQ_DEPT_SEQ = #deptCd#
		</isNotEmpty>
		<isNotEmpty property="userSeq">
		AND TPR.REQUESTER_EMP_SEQ = #userSeq#
		</isNotEmpty>
		<isNotEmpty property="reqState">
		AND TPR.REQ_STATE = #reqState#
		</isNotEmpty>
		<isNotEmpty property="contStep">
		AND TPC.CONT_STEP = #contStep#
		</isNotEmpty>
		<isEmpty property="contStep">
		AND TPC.CONT_STEP > '002'
		</isEmpty>
		<isNotEmpty property="contAm">
		AND
		(
			(
				TPC2.CONT_AM IS NULL
				AND TPC.CONT_AM >= #contAm#
			)
			OR
			(
				TPC2.CONT_AM IS NOT NULL 
	            AND TPC2.CONT_AM >= #contAm#
			)
		)
		</isNotEmpty>
		<isNotEmpty property="trNm">
		AND
		(
			(
				TPC2.TR_NM IS NULL
				AND TPC.TR_NM LIKE CONCAT('%', #trNm#, '%')
			)
			OR
			(
				TPC2.TR_NM IS NOT NULL 
				AND TPC2.TR_NM LIKE CONCAT('%', #trNm#, '%')
			)
		)
		</isNotEmpty>
		<isNotEmpty property="contTitle">
		AND TPC.CONT_TITLE LIKE CONCAT('%', #contTitle#, '%')
		</isNotEmpty>
		<isNotEmpty property="title">
		AND TPR.PURC_REQ_TITLE LIKE CONCAT('%', #title#, '%')
		</isNotEmpty>
		<isNotEmpty property="contMod">
		AND TPC.CONT_STEP NOT IN ('007')
		</isNotEmpty>
		<isNotEmpty property="smallYn">
		AND TPC.SMALL_YN = #smallYn#
		</isNotEmpty>
		<isNotEmpty property="mgtCd">
		and (select count(hh.mgt_seq) from neos.t_exnp_conshead hh, dj_purc_req_h tprh where hh.cons_seq = tprh.abdocu_no and tprh.purc_req_id = tpr.purc_req_id and hh.mgt_seq = #mgtCd#) > 0
		</isNotEmpty>
		<isNotEmpty property="abgtCd">
           and (select count(bb.erp_budget_seq) from neos.t_exnp_consbudget bb, dj_purc_req_h tprh where bb.cons_seq = tprh.abdocu_no and tprh.purc_req_id = tpr.purc_req_id and bb.erp_budget_seq = #abgtCd#) > 0
		</isNotEmpty>
	</select>
	
	<select id="AcG20ExGw.selectAbdocuBNoList" parameterClass="String" resultClass="String">
		SELECT B.ABDOCU_B_NO
		FROM dj_PURC_REQ_B B, dj_PURC_REQ_H H
		WHERE B.PURC_REQ_H_ID = H.PURC_REQ_H_ID
		AND H.PURC_REQ_ID = #purcReqId#
	</select>
	
	<select id="AcG20ExGw.getReferConferWithAuthPurcReq" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		/* AcG20ExGw.getReferConferWithAuthPurcReq - mariaDB 품의문서 리스트 (참조품의 / 권한적용) */
		SELECT	CASE WHEN T.CONFER_RETURN <![CDATA[>]]> ' ' THEN 'rollBack' ELSE CASE WHEN OPEN_AM - APPLY_AM <![CDATA[<>]]> 0 THEN 'return' ELSE '' END END AS BUTTON
				, DOCU_FG_TEXT AS DOCU_FG_TEXT
				, DOCNUMBER AS DOCNUMBER
				, USERNAME AS USERNAME
				, MGT_NM AS MGT_NM
				, MGT_CD AS MGT_CD
				, ABGT_NM AS ABGT_NM
				, ABGT_CD AS ABGT_CD
				, ABDOCU_NO AS ABDOCU_NO
				, ABDOCU_B_NO AS ABDOCU_B_NO
				, CAST(OPEN_AM AS CHAR) AS OPEN_AM
				, CAST(APPLY_AM AS CHAR) AS APPLY_AM
				, RMK_DC AS RMK_DC
				, ERP_GISU_DT AS ERP_GISU_DT
				, CASE WHEN CONFER_RETURN <![CDATA[>]]> ' ' THEN '정산' ELSE OPEN_AM - APPLY_AM END AS LEFT_AM
		FROM	(
					SELECT	A.DOCU_FG_TEXT
							, A.MGT_NM
							, A.MGT_CD
							, A.ABDOCU_NO
							, A.RMK_DC
							, A.ERP_GISU_DT
							, A.ABGT_NM
							, A.OPEN_AM
							, A.ABDOCU_B_NO
							, A.USERNAME
							, A.CONFER_RETURN
							, A.DOCNUMBER
							, A.ABGT_CD
							, IFNULL(B.APPLY_AM, 0) AS APPLY_AM
					FROM	(
								SELECT	H.DOCU_FG_TEXT
										, H.MGT_NM
										, H.MGT_CD
										, H.ABDOCU_NO
										, H.RMK_DC
										, DATE_FORMAT(H.ERP_GISU_DT,'%Y-%m-%d') AS ERP_GISU_DT
										, B.ABGT_CD
										, B.ABGT_NM
										, B.APPLY_AM AS OPEN_AM
										, B.ABDOCU_B_NO
										, neos.f_GETUSERINFO('1', A.REQU_USERKEY, #langCode#) AS USERNAME
										, (SELECT CONFER_RETURN FROM NEOS.G20_ABDOCU_B B2 WHERE B2.CONFER_RETURN = B.ABDOCU_B_NO LIMIT 1) CONFER_RETURN
										, (SELECT C_RIDOCFULLNUM FROM NEOS.A_RECORDINFO R WHERE R.C_DIKEYCODE = A.APPR_DIKEY) AS DOCNUMBER
								FROM	(
											SELECT	DOCU_FG_TEXT
													, MGT_NM
													, MGT_CD
													, ABDOCU_NO
													, RMK_DC
													, ERP_GISU_DT
													, C_DIKEYCODE
											FROM	NEOS.G20_ABDOCU_H
											WHERE	DOCU_MODE = '0'
											AND		C_DIKEYCODE <![CDATA[>]]> ' '
											
											
											<isEmpty property="ABDOCU_B_NO">
											AND		ERP_CO_CD = #CO_CD#
											AND		ERP_GISU_FROM_DT <![CDATA[<]]> #GISU_DT#
											AND 	ERP_GISU_TO_DT <![CDATA[>]]> #GISU_DT#
												<isNotEmpty property="FROM_DT" >
											AND ERP_GISU_DT BETWEEN #FROM_DT# AND #TO_DT#
												</isNotEmpty>
												<isEqual property="GR_FG" compareValue="1">
											AND  DOCU_FG = '8'
												</isEqual>
												<isNotEqual property="GR_FG" compareValue="1">
											AND  DOCU_FG <![CDATA[<>]]> '8'
												</isNotEqual>  
											</isEmpty>
										) H INNER JOIN (
											SELECT	ABGT_CD
													, ABGT_NM
													, APPLY_AM
													, ABDOCU_B_NO
													, ABDOCU_NO
											FROM	NEOS.G20_ABDOCU_B
											WHERE	1=1
											<isEmpty property="ABDOCU_B_NO">
											AND	CONFER_RETURN IS NULL
											AND	ERP_CO_CD = #CO_CD#
												<isNotEmpty property="ABGT_CD">
											AND ABGT_CD = #ABGT_CD#
												</isNotEmpty> 
											</isEmpty>
										    <isNotEmpty property="ABDOCU_B_NO">
										    AND ABDOCU_B_NO	= #ABDOCU_B_NO#
										    </isNotEmpty>		
											
										) B ON H.ABDOCU_NO = B.ABDOCU_NO 
										INNER JOIN 
								        (
											SELECT TPR.PURC_REQ_ID, TPRH.ABDOCU_NO, TPR.C_DIKEYCODE
								            FROM dj_purc_req TPR, dj_purc_req_H TPRH
								            WHERE TPR.PURC_REQ_ID = TPRH.PURC_REQ_ID
								            AND C_DIKEYCODE IS NOT NULL
								        ) TPR
								        ON TPR.ABDOCU_NO = H.ABDOCU_NO
										INNER JOIN (
											SELECT	REQU_USERKEY
													, DOCX_NUMB
													, APPR_DIKEY
											FROM	NEOS.ERPGWLINK
											WHERE	IFNULL(APPR_STATUS, '009') IN ('008', '009')
											
											<isEmpty property="ABDOCU_B_NO">
									        	<isEmpty property="getConferType" >
											AND	REQU_USERKEY IN	(
												SELECT	seq 
												FROM	NEOS.G20_cons_auth 
												WHERE	emp_seq 	= #empSeq#	
												 AND 	gbn_org 	= 'u'
												 
												UNION 	SELECT	ed.emp_seq
												FROM	(
													SELECT	O.path, O.group_seq
													FROM	NEOS.G20_cons_auth	A
													 INNER JOIN neos.v_org_chart	O
													 ON	A.seq = O.seq
													 AND	O.gbn_org = 'd'
													 AND	A.gbn_org = 'd' 
													 AND	A.emp_seq = #empSeq#
													 AND	A.group_seq = O.group_seq
												)	DS
												 INNER JOIN neos.v_org_chart 	ORG
												  ON	ORG.path LIKE CONCAT(DS.path, '%')
												  AND	DS.group_seq = ORG.group_seq 
												 INNER JOIN neos.T_co_emp_dept	ED
												  ON	ORG.seq = ED.dept_seq
												  AND	ORG.group_seq = ED.group_seq
												
												UNION	SELECT	EC.emp_seq
												FROM 	NEOS.G20_cons_auth	A
												 INNER JOIN neos.T_co_emp_comp	EC
												 ON	A.seq = EC.comp_seq
												 AND	A.group_seq = EC.group_seq
												WHERE	A.emp_seq = #empSeq#	
												 AND	A.gbn_org = 'c'
												UNION
												SELECT	#empSeq#	
											)
									        	</isEmpty>
												<isNotEmpty property="getConferType" >
													<isEqual property="getConferType"  compareValue="DEPT">
											AND		neos.f_GETDRAFTINFO('7','000', APPR_DIKEY) = #deptSeq#
													</isEqual>
													<isNotEqual property="getConferType" compareValue="DEPT">
											AND	REQU_USERKEY IN	(
												SELECT	seq 
												FROM	NEOS.G20_cons_auth 
												WHERE	emp_seq 	= #empSeq#	
												 AND 	gbn_org 	= 'u'
												 
												UNION 	SELECT	ed.emp_seq
												FROM	(
													SELECT	O.path, O.group_seq
													FROM	NEOS.G20_cons_auth	A
													 INNER JOIN neos.v_org_chart	O
													 ON	A.seq = O.seq
													 AND	O.gbn_org = 'd'
													 AND	A.gbn_org = 'd' 
													 AND	A.emp_seq = #empSeq#
													 AND	A.group_seq = O.group_seq
												)	DS
												 INNER JOIN neos.v_org_chart 	ORG
												  ON	ORG.path LIKE CONCAT(DS.path, '%')
												  AND	DS.group_seq = ORG.group_seq 
												 INNER JOIN neos.T_co_emp_dept	ED
												  ON	ORG.seq = ED.dept_seq
												  AND	ORG.group_seq = ED.group_seq
												
												UNION	SELECT	EC.emp_seq
												FROM 	NEOS.G20_cons_auth	A
												 INNER JOIN neos.T_co_emp_comp	EC
												 ON	A.seq = EC.comp_seq
												 AND	A.group_seq = EC.group_seq
												WHERE	A.emp_seq = #empSeq#	
												 AND	A.gbn_org = 'c'
												UNION
												SELECT	#empSeq#	
											 
											)
													</isNotEqual>
												</isNotEmpty>
								        	</isEmpty>
										) A ON TPR.C_DIKEYCODE = A.APPR_DIKEY <!-- H.ABDOCU_NO = A.DOCX_NUMB --> AND H.C_DIKEYCODE IS NOT NULL AND H.ABDOCU_NO != ''
									    <isEmpty property="ABDOCU_B_NO"> 
											<isNotEmpty property="searchText">
										AND (B.ABGT_NM LIKE '%$searchText$%' OR H.MGT_NM LIKE '%$searchText_encode$%' OR neos.f_GETUSERINFO('1', REQU_USERKEY, #langCode#) LIKE '%$searchText$%')
											</isNotEmpty>
										</isEmpty>										
										
							) A LEFT OUTER JOIN (
								SELECT	TA.ABDOCU_NO_REFFER
										, TA.ABDOCU_B_NO_REFFER
										, TA.ABGT_CD
										, SUM(IFNULL(TA.APPLY_AM, 0)) AS APPLY_AM
										, COUNT(TA.ABDOCU_NO_REFFER)
								FROM	(
											SELECT	B.C_DIKEYCODE
													, A.APPLY_AM
													, A.ABDOCU_NO_REFFER
													, A.ABDOCU_B_NO_REFFER
													, A.ABGT_CD
											FROM	(
														SELECT	ABDOCU_NO
																, ABDOCU_NO_REFFER
																, ABDOCU_B_NO_REFFER
																, ABGT_CD
																, APPLY_AM
														FROM	NEOS.G20_ABDOCU_B
														WHERE	ABDOCU_NO_REFFER IS NOT NULL
														AND		ABDOCU_B_NO_REFFER IS NOT NULL
													) A INNER JOIN (
														SELECT	ABDOCU_NO
																, C_DIKEYCODE
														FROM	NEOS.G20_ABDOCU_H
														WHERE	C_DIKEYCODE IS NOT NULL
													) B ON A.ABDOCU_NO = B.ABDOCU_NO
										) TA
								WHERE	TA.C_DIKEYCODE IN (
											SELECT	APPR_DIKEY
											FROM	NEOS.ERPGWLINK
											WHERE	IFNULL(APPR_STATUS, '009' ) IN ('002', '003', '008', '009')
										)
								GROUP	BY ABDOCU_NO_REFFER, ABDOCU_B_NO_REFFER, ABGT_CD
							) B ON A.ABDOCU_NO = B.ABDOCU_NO_REFFER AND A.ABDOCU_B_NO = B.ABDOCU_B_NO_REFFER AND A.ABGT_CD = B.ABGT_CD
				) T
		WHERE	1=1
		<isEqual property="isAllView" compareValue="001">
		AND	    T.CONFER_RETURN IS NULL
		</isEqual>
		<isEqual property="isAllView" compareValue="002">
		AND		(OPEN_AM - APPLY_AM) = 0
		</isEqual>
		ORDER BY ABDOCU_NO DESC		
	</select>
	
	<insert id="AcG20ExGw.makePurcCont" parameterClass="HashMap">
		/*AcG20ExGw.makePurcCont*/
		INSERT INTO 
		dj_PURC_CONT 
		(PURC_REQ_ID, CONT_END_DATE, CONT_TERM, TR_CD, TR_NM, REG_NB, CEO_NM, WRITE_EMP_SEQ, WRITE_EMP_IP, PAY_CNT, BASIC_AM, RATE, CONT_TYPE, CONT_TYPE_CODE_ID, CONT_TITLE)
		SELECT 
		PURC_REQ_ID, PURC_REQ_DATE, TERM, TR_CD, TR_NM, REG_NB, CEO_NM, #empSeq#, #empIp#, 1, BASIC_AM, RATE, CONT_TYPE, CONT_TYPE_CODE_ID, PURC_REQ_TITLE
		FROM dj_PURC_REQ
		WHERE PURC_REQ_ID = #purcReqId#
		<selectKey keyProperty="purcContId" resultClass="int">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<insert id="AcG20ExGw.makePurcContB" parameterClass="HashMap">
		/*AcG20ExGw.makePurcContB*/
		INSERT INTO dj_PURC_CONT_B (PURC_CONT_ID, PURC_REQ_ID, PURC_REQ_H_ID, PURC_REQ_B_ID, ABDOCU_B_NO, WRITE_EMP_SEQ, WRITE_EMP_IP)
		SELECT #purcContId#, TPR.PURC_REQ_ID, TPRH.PURC_REQ_H_ID, TPRB.PURC_REQ_B_ID, GAB.ABDOCU_B_NO, #empSeq#, #empIp#
		FROM dj_PURC_REQ TPR, dj_PURC_REQ_H TPRH, dj_PURC_REQ_B TPRB, NEOS.G20_ABDOCU_B GAB
		WHERE TPR.PURC_REQ_ID = TPRH.PURC_REQ_ID
		AND TPRH.PURC_REQ_H_ID = TPRB.PURC_REQ_H_ID
		AND TPRB.ABDOCU_B_NO = GAB.ABDOCU_B_NO
		AND TPR.PURC_REQ_ID = #purcReqId#
	</insert>
	
	<insert id="AcG20ExGw.makePurcContT" parameterClass="HashMap">
		/*AcG20ExGw.makePurcContT*/
		INSERT INTO dj_PURC_CONT_T
		(
			PURC_CONT_ID, PURC_CONT_B_ID, PURC_REQ_ID, PURC_REQ_H_ID, PURC_REQ_B_ID, 
			PURC_REQ_T_ID, ABDOCU_T_NO, PPS_ID_NO, ITEM_TYPE, ITEM_TYPE_CODE_ID, 
			STANDARD, CONTENTS, START_DATE, END_DATE, PPS_FEES, PURC_TR_TYPE, 
			TR_CD, TR_NM, REG_NB, CEO_NM, ITEM_NM, ITEM_CNT, ITEM_AM, UNIT_AM, SUP_AM, VAT_AM, REMARK, 
			WRITE_EMP_SEQ, WRITE_EMP_IP,
			NEXT_AM
		)
		SELECT #purcContId#, TPCB.PURC_CONT_B_ID, TPCB.PURC_REQ_ID, TPCB.PURC_REQ_H_ID, TPCB.PURC_REQ_B_ID, 
			TPRT.PURC_REQ_T_ID, TPRT.ABDOCU_T_NO, TPRT.PPS_ID_NO, TPRT.ITEM_TYPE, TPRT.ITEM_TYPE_CODE_ID, 
		    TPRT.STANDARD, TPRT.CONTENTS, TPRT.START_DATE, TPRT.END_DATE, TPRT.PPS_FEES, TPRT.PURC_TR_TYPE, 
		    GAT.TR_CD, GAT.TR_NM, GAT.REG_NB, GAT.CEO_NM, GAT.ITEM_NM, GAT.ITEM_CNT, GAT.ITEM_AM, GAT.UNIT_AM, GAT.SUP_AM, GAT.VAT_AM, GAT.RMK_DC, 
		    #empSeq#, #empIp#,
		    TPRT.NEXT_AM
		FROM dj_PURC_REQ_T TPRT, dj_PURC_CONT_B TPCB, NEOS.G20_ABDOCU_T GAT
		WHERE TPRT.PURC_REQ_B_ID = TPCB.PURC_REQ_B_ID
		AND TPRT.ABDOCU_T_NO = GAT.ABDOCU_T_NO
		AND TPRT.PURC_REQ_T_ID NOT IN (
			SELECT DISTINCT A.PURC_REQ_T_ID
			FROM dj_PURC_CONT_T A, dj_PURC_CONT B, dj_PURC_REQ C
			WHERE B.C_DIKEYCODE IS NOT NULL
			AND B.CONT_STEP NOT IN ('002')
			AND A.PURC_CONT_ID = B.PURC_CONT_ID
			AND B.PURC_REQ_ID = C.PURC_REQ_ID
		)
		AND TPCB.PURC_CONT_ID = #purcContId#
	</insert>
	
	<delete id="AcG20ExGw.delMakePurcContB" parameterClass="HashMap">
		DELETE FROM dj_PURC_CONT_B
        WHERE PURC_CONT_B_ID NOT IN(SELECT DISTINCT PURC_CONT_B_ID FROM dj_PURC_CONT_T WHERE PURC_CONT_ID = #purcContId#)
        AND PURC_CONT_ID = #purcContId#
	</delete>
	
	<update id="AcG20ExGw.updatePurcCont" parameterClass="HashMap">
		/*AcG20ExGw.updatePurcCont*/
		UPDATE dj_PURC_CONT
		SET
			CONT_TITLE = #contTitle#,
			PAY_CON = #payCon#,
			PAY_CON_CODE_ID = #payConCodeId#,
			PAY_TYPE = #payType#,
			PAY_TYPE_CODE_ID = #payTypeCodeId#,
			PAY_CNT = #payCnt#,
			CONT_AM = REPLACE(#contAm#, ',', ''),
			CONT_TYPE = #contType#,
			CONT_TYPE_CODE_ID = #contTypeCodeId#,
			CONT_END_DATE = REPLACE(#contEndDate#,'-', ''),
			CONT_TERM = #contTerm#,
			CONT_DATE = REPLACE(#contDate#,'-', ''),
			TR_NM = #trNm#,
			TR_CD = #trCd#,
			REG_NB = #regNb#,
			CEO_NM = #ceoNm#,
			CONT_DATE2 = REPLACE(#contDate2#,'-', ''),
			CONT_START_DATE2 = REPLACE(#contStartDate2#,'-', ''),
			CONT_END_DATE2 = REPLACE(#contEndDate2#,'-', ''),
			EXPECTED_AM = REPLACE(#expectedAm#, ',', ''),
			RATE = #rate#
		WHERE PURC_CONT_ID = #purcContId#
	</update>
	
	<select id="AcG20ExGw.getPurcContB" parameterClass="HashMap" resultClass="abdocu_B">
        /* AcG20ExGw.getPurcContB - mariaDB 결의서 예산리스트 */
        SELECT 
        	A.ERP_BGT_NM1, 
        	A.ERP_BGT_NM2,
        	A.ERP_BGT_NM3,
			A.ERP_BGT_NM4,
			A.ABGT_CD,
			A.ABGT_NM,
			A.VAT_FG,
			B.RETURN_YN,
			C.APPLY_AM,
			C.OPEN_AM,
     	  	A.ABDOCU_NO,
			A.ABDOCU_B_NO,
			B.PURC_REQ_B_ID,
			A.RMK_DC,
			C.PURC_CONT_B_ID,
			C.PURC_CONT_ID,
        	D.ERP_DIV_NM AS DIV_NM2,
			D.MGT_NM,
			D.BOTTOM_NM,
            D.ERP_DIV_CD AS DIV_CD2, 
            D.MGT_CD, 
            D.BOTTOM_CD,
            D.ERP_CO_CD,
			D.ERP_GISU_DT, 
			D.DOCU_MODE, 
			D.ERP_GISU_FROM_DT, 
			D.ERP_GISU_TO_DT,
			D.ERP_GISU,
            C.NEXT_AM
		FROM 
			NEOS.G20_ABDOCU_B A, 
			dj_PURC_REQ_B B, 
			dj_PURC_REQ_H H, 
			dj_PURC_CONT_B C, 
			NEOS.G20_ABDOCU_H D
		WHERE A.ABDOCU_B_NO = B.ABDOCU_B_NO 
		AND A.ABDOCU_NO = H.ABDOCU_NO
		AND B.PURC_REQ_B_ID = C.PURC_REQ_B_ID
		AND H.ABDOCU_NO = D.ABDOCU_NO
        AND C.PURC_CONT_ID = #purcContId#
        ORDER BY A.ABDOCU_NO, A.ABDOCU_B_NO
	</select>
	
	<select id="AcG20ExGw.purcContInfo" parameterClass="HashMap" resultClass="egovMap">
		/*AcG20ExGw.purcContInfo*/
		SELECT
			A.PURC_CONT_ID,
			A.PURC_REQ_ID,
			A.CONT_TITLE,
			A.CONT_AM,
			A.PAY_CON,
			A.PAY_CON_CODE_ID,
			A.PAY_TYPE,
			A.PAY_TYPE_CODE_ID,
			A.PAY_CNT,
			A.CONT_TYPE,
			A.CONT_TYPE_CODE_ID,
			CAST(CAST(A.CONT_START_DATE AS DATE) AS CHAR(10)) AS CONT_START_DATE,
			CAST(CAST(A.CONT_END_DATE AS DATE) AS CHAR(10)) AS CONT_END_DATE,
			A.CONT_TERM,
			CAST(CAST(A.CONT_DATE AS DATE) AS CHAR(10)) AS CONT_DATE,
			A.TR_CD,
			A.TR_NM,
			A.REG_NB,
			A.CEO_NM,
			A.CONT_STEP,
			A.C_DIKEYCODE,
			A.ACTIVE,
			A.REMARK,
			CAST(CAST(A.CONT_DATE2 AS DATE) AS CHAR(10)) AS CONT_DATE2,
			CAST(CAST(A.CONT_START_DATE2 AS DATE) AS CHAR(10)) AS CONT_START_DATE2,
			CAST(CAST(A.CONT_END_DATE2 AS DATE) AS CHAR(10)) AS CONT_END_DATE2,
			B.PURC_PURPOSE,
            CAST(NOW() AS CHAR(10)) AS REG_DATE,
            A.PURC_CONT_ID_ORG,
            A.PURC_CONT_ID_BEFORE,
            A.MOD_REASON,
            A.SMALL_YN,
            A.REF_DOC_KEY,
            A.REF_DOC_TITLE,
            (SELECT C_RIDOCFULLNUM FROM NEOS.A_RECORDINFO AA WHERE B.C_DIKEYCODE = AA.C_DIKEYCODE) AS DOC_NUM,
            B.C_DIKEYCODE AS REQ_DOC_KEY,
            A.BASIC_AM,
            A.EXPECTED_AM,
            A.RATE,
            A.CEO_NM,
            B.TR_PLACE,
            B.PURC_REQ_TYPE,
            B.cons_doc_seq,
            B.eval_type,
            A.cons_mod_seq,
		    (select emp_name from neos.v_user_info where emp_seq = A.write_emp_seq limit 1) as emp_name, 
		    A.write_emp_seq as emp_seq,
			A.write_emp_ip as emp_ip
		FROM dj_PURC_CONT A, dj_PURC_REQ B
		WHERE A.PURC_CONT_ID = #purcContId#
		AND A.PURC_REQ_ID = B.PURC_REQ_ID
	</select>
	
	<select id="AcG20ExGw.getPurcContT" parameterClass="abdocu_B" resultClass="abdocu_T">
	    /* AcG20ExGw.getPurcContT - mariaDB */
  		SELECT 
			T.PURC_CONT_T_ID,
			T.PURC_CONT_ID,
			T.PURC_CONT_B_ID,
			T.PURC_REQ_ID,
			T.PURC_REQ_H_ID,
			T.PURC_REQ_B_ID,
			T.PURC_REQ_T_ID,
			T.ABDOCU_T_NO,
			T.PPS_ID_NO,
			T.ITEM_TYPE,
			T.ITEM_TYPE_CODE_ID,
			T.STANDARD,
			T.CONTENTS,
			CAST(CAST(T.START_DATE AS DATE) AS CHAR(10)) AS START_DATE,
			CAST(CAST(T.END_DATE AS DATE) AS CHAR(10)) AS END_DATE,
			T.PPS_FEES,
			T.PURC_TR_TYPE,
			T.TR_CD,
			T.TR_NM,
			T.REG_NB,
			T.CEO_NM,
			T.ITEM_NM,
			T.ITEM_CNT,
			T.ITEM_AM,
			T.UNIT_AM,
			T.SUP_AM,
			T.VAT_AM,
			T.REMARK AS RMK_DC,
			T.NEXT_AM
        FROM dj_PURC_CONT_T T, dj_PURC_CONT_B B
        WHERE T.PURC_CONT_B_ID = B.PURC_CONT_B_ID        
        AND B.PURC_CONT_ID = #purc_cont_id#
        AND B.ABDOCU_B_NO = #abdocu_b_no#
        AND T.PURC_TR_TYPE = #purc_tr_type#
		ORDER BY T.ABDOCU_T_NO ASC;
	</select>
	
	<update id="AcG20ExGw.updatePurcContT" parameterClass="abdocu_T">
		/*AcG20ExGw.updatePurcContT*/
		UPDATE dj_PURC_CONT_T
		SET
			pps_id_no = #pps_id_no#, 
			item_type = #item_type#, 
			item_type_code_id = #item_type_code_id#, 
			standard = #standard#, 
			contents = #contents#, 
			start_date = #start_date#, 
			end_date = #end_date#, 
			pps_fees = #pps_fees#, 
			purc_tr_type = #purc_tr_type#, 
			tr_cd = #tr_cd#, 
			tr_nm = #tr_nm#, 
			reg_nb = #reg_nb#, 
			ceo_nm = #ceo_nm#, 
			item_nm = #item_nm#, 
			item_cnt = #item_cnt#, 
			item_am = #item_am#, 
			unit_am = #unit_am#, 
			sup_am = #sup_am#, 
			vat_am = #vat_am#, 
			remark = #rmk_dc#,
			next_am = #next_am#
		WHERE PURC_CONT_T_ID = #purc_cont_t_id#
	</update>
	
	<update id="AcG20ExGw.updatePurcContB_ApplyAm" parameterClass="abdocu_T">
		/*AcG20ExGw.updatePurcContB_ApplyAm*/
		UPDATE dj_PURC_CONT_B
	    SET		APPLY_AM = (SELECT SUM(IFNULL(UNIT_AM,0)) FROM dj_PURC_CONT_T WHERE PURC_CONT_B_ID = #purc_cont_b_id#),
	    		NEXT_AM = (SELECT SUM(IFNULL(NEXT_AM,0)) FROM dj_PURC_CONT_T WHERE PURC_CONT_B_ID = #purc_cont_b_id#)
	    WHERE PURC_CONT_B_ID = #purc_cont_b_id#
	</update>
	
	<update id="AcG20ExGw.updatePurcContB_OpenAm" parameterClass="abdocu_T">
		/*AcG20ExGw.updatePurcContB_OpenAm*/
		UPDATE dj_PURC_CONT_B
	    SET		OPEN_AM = (SELECT SUM(IFNULL(UNIT_AM,0)) FROM dj_PURC_CONT_T WHERE PURC_CONT_B_ID = #purc_cont_b_id#)
	    WHERE PURC_CONT_B_ID = #purc_cont_b_id#
	</update>
	
	<update id="AcG20ExGw.updatePurcCont_contAm" parameterClass="abdocu_T">
		/*AcG20ExGw.updatePurcCont_contAm*/
		UPDATE dj_PURC_CONT
	    SET		CONT_AM = (SELECT SUM(IFNULL(APPLY_AM,0) + IFNULL(NEXT_AM,0)) FROM dj_PURC_CONT_B WHERE PURC_CONT_ID = #purc_cont_id#)
	    WHERE PURC_CONT_ID = #purc_cont_id#
	</update>
	
	<select id="AcG20ExGw.getpurcContB_One" parameterClass="String" resultClass="abdocu_B">
		/*AcG20ExGw.getpurcContB_One*/
		SELECT * FROM dj_PURC_CONT_B WHERE PURC_CONT_B_ID = #purc_cont_b_id#
	</select>
	
	<delete id="AcG20ExGw.delPurcContT" parameterClass="abdocu_T">
		/*AcG20ExGw.delPurcContT*/
		DELETE FROM dj_PURC_CONT_T WHERE PURC_CONT_T_ID = #purc_cont_t_id#
	</delete>
	
	<update id="AcG20ExGw.updatePurcReqB_ApplyAm" parameterClass="abdocu_T">
		/*AcG20ExGw.updatePurcReqB_ApplyAm*/
		UPDATE dj_PURC_REQ_B
	    SET		APPLY_AM = (SELECT SUM(IFNULL(UNIT_AM,0)) FROM NEOS.G20_ABDOCU_T WHERE ABDOCU_B_NO = #abdocu_b_no#),
	    		NEXT_AM = (SELECT SUM(IFNULL(NEXT_AM,0)) FROM dj_PURC_REQ_T WHERE PURC_REQ_B_ID = #purc_req_b_id#)
	    WHERE PURC_REQ_B_ID = #purc_req_b_id#
	</update>
	
	<select id="AcG20ExGw.getPurcReqLeftAm" parameterClass="abdocu_T" resultClass="String">
		/*AcG20ExGw.getPurcReqLeftAm*/
		SELECT
		    IFNULL((SELECT APPLY_AM FROM dj_PURC_REQ_B C WHERE C.PURC_REQ_B_ID = #purc_req_b_id#),0)
		    -
			IFNULL(SUM(A.UNIT_AM),0) AS LEFT_AM
		FROM dj_PURC_CONT_T A, dj_PURC_CONT B
		WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
		AND 
		(
			(
				A.PURC_CONT_ID = B.PURC_CONT_ID
				AND PURC_REQ_B_ID = #purc_req_b_id#
				AND C_DIKEYCODE IS NOT NULL
				AND CONT_STEP NOT IN ('002')
			)
		<isNotEmpty property="purc_cont_b_id">
			<isNotEmpty property="purc_cont_t_id">
			OR 
			(
				A.PURC_CONT_B_ID = #purc_cont_b_id#
				AND A.PURC_CONT_T_ID NOT IN (#purc_cont_t_id#)
			)
			</isNotEmpty>
		</isNotEmpty>
		)
	</select>
	
	<select id="AcG20ExGw.checkPurcContComplete" parameterClass="Map" resultClass="Integer">
		/*AcG20ExGw.checkPurcContComplete*/
		SELECT COUNT(D.PURC_REQ_T_ID)
		FROM dj_PURC_REQ A, dj_PURC_REQ_H B, dj_PURC_REQ_B C, dj_PURC_REQ_T D
		WHERE A.PURC_REQ_ID = B.PURC_REQ_ID
		AND B.PURC_REQ_H_ID = C.PURC_REQ_H_ID
		AND C.PURC_REQ_B_ID = D.PURC_REQ_B_ID
		AND A.PURC_REQ_ID = #purcReqId#
		AND D.PURC_REQ_T_ID NOT IN
		(
			SELECT A.PURC_REQ_T_ID
			FROM dj_PURC_CONT_T A, dj_PURC_CONT B
			WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
			AND B.C_DIKEYCODE IS NOT NULL
			AND B.CONT_STEP NOT IN ('002')
			AND A.PURC_REQ_T_ID IN
			(
				SELECT D.PURC_REQ_T_ID 
				FROM dj_PURC_REQ A, dj_PURC_REQ_H B, dj_PURC_REQ_B C, dj_PURC_REQ_T D
				WHERE A.PURC_REQ_ID = B.PURC_REQ_ID
				AND B.PURC_REQ_H_ID = C.PURC_REQ_H_ID
				AND C.PURC_REQ_B_ID = D.PURC_REQ_B_ID
				AND A.PURC_REQ_ID = #purcReqId#
			)
		)
	</select>
	
	<select id="AcG20ExGw.checkPurcContApproval" parameterClass="Map" resultClass="Integer">
		/*AcG20ExGw.checkPurcContApproval*/
		SELECT COUNT(*)
        FROM dj_PURC_CONT 
        WHERE PURC_REQ_ID = #purcReqId#
        AND C_DIKEYCODE IS NOT NULL
        <isEqual property="contStep" compareValue="001">
        AND CONT_STEP = '001'
        </isEqual>
        <isEqual property="contStep" compareValue="002">
        AND CONT_STEP <![CDATA[<>]]> '002'
        </isEqual>
	</select>
	
	<update id="AcG20ExGw.resetAbdocuT" parameterClass="Map">
		/*AcG20ExGw.resetAbdocuT*/
		UPDATE 
			NEOS.G20_ABDOCU_T
		SET
			ITEM_CNT = '0',
			ITEM_AM = 0,
			UNIT_AM = 0,
			SUP_AM = 0,
			VAT_AM = 0
		WHERE ABDOCU_T_NO IN
		(
				SELECT ABDOCU_T_NO
				FROM dj_PURC_REQ A, dj_PURC_REQ_H B, dj_PURC_REQ_B C, dj_PURC_REQ_T D
				WHERE A.PURC_REQ_ID = B.PURC_REQ_ID
				AND B.PURC_REQ_H_ID = C.PURC_REQ_H_ID
				AND C.PURC_REQ_B_ID = D.PURC_REQ_B_ID
                AND A.PURC_REQ_ID = #purcReqId#
                AND C.RETURN_YN = 'Y'
		)
	</update>
	
	<update id="AcG20ExGw.updateAbdocuT" parameterClass="Map">
		/*AcG20ExGw.updateAbdocuT*/
		UPDATE 
			NEOS.G20_ABDOCU_T A, 
			(
				SELECT A.ABDOCU_T_NO, A.ITEM_NM,  A.ITEM_CNT, A.ITEM_AM, A.UNIT_AM, A.SUP_AM, A.VAT_AM, A.REMARK
				FROM dj_PURC_CONT_T A, dj_PURC_CONT B, dj_PURC_REQ_B C
				WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
				AND B.C_DIKEYCODE IS NOT NULL
				AND B.CONT_STEP NOT IN ('001','002')
				AND A.PURC_REQ_ID = #purcReqId#
				AND C.RETURN_YN = 'Y'
	    		AND A.PURC_REQ_B_ID = C.PURC_REQ_B_ID
			) B
		SET
			A.ITEM_CNT = B.ITEM_CNT,
			A.ITEM_AM = B.ITEM_AM,
			A.UNIT_AM = B.UNIT_AM,
			A.SUP_AM = B.SUP_AM,
			A.VAT_AM = B.VAT_AM
		WHERE A.ABDOCU_T_NO = B.ABDOCU_T_NO
	</update>

	<update id="AcG20ExGw.updateAbdocuB_ApplyAm_purc" parameterClass="Map">
	    /* AcG20ExGw.updateAbdocuB_ApplyAm_purc - mariaDB */
	    UPDATE
	    	NEOS.G20_ABDOCU_B A,
	    	(
	    		SELECT
	    			AA.ABDOCU_B_NO
	    		FROM dj_PURC_CONT_B AA, dj_PURC_REQ_B BB
	    		WHERE AA.PURC_REQ_ID = #purcReqId#
	    		AND BB.RETURN_YN = 'Y'
	    		AND AA.PURC_REQ_B_ID = BB.PURC_REQ_B_ID
	    	) B
	    SET		A.APPLY_AM = (SELECT SUM(UNIT_AM) FROM NEOS.G20_ABDOCU_T WHERE ABDOCU_B_NO = B.ABDOCU_B_NO)
	    WHERE A.ABDOCU_B_NO	= B.ABDOCU_B_NO
	</update>
	
	<update id="AcG20ExGw.updateReqDocSts" parameterClass="Map">
		/*AcG20ExGw.updateReqDocSts*/
		UPDATE dj_PURC_REQ
		SET REQ_STATE = #reqDocState#
		WHERE PURC_REQ_ID = #purcReqId#
	</update>
	
	<update id="AcG20ExGw.updateContDocSts" parameterClass="Map">
		/*AcG20ExGw.updateContDocSts*/
		UPDATE dj_PURC_CONT
		SET CONT_STEP = #docState#
		WHERE PURC_CONT_ID = #purcContId#
	</update>
	
	<select id="AcG20ExGw.checkPurcReqState" parameterClass="Map" resultClass="String">
		/*AcG20ExGw.checkPurcReqState*/
		SELECT REQ_STATE
		FROM dj_PURC_REQ
		WHERE PURC_REQ_ID = #purcReqId#
	</select>
	
	<select id="AcG20ExGw.checkPurcContractedComplete" parameterClass="Map" resultClass="Integer">
		/*AcG20ExGw.checkPurcContractedComplete*/
		SELECT COUNT(PURC_CONT_ID) FROM dj_PURC_CONT
		WHERE C_DIKEYCODE IS NOT NULL 
		AND CONT_STEP IS NOT NULL
		AND CONT_STEP IN ('001', '003')
		AND PURC_REQ_ID = #purcReqId#
	</select>
	
	<select id="AcG20ExGw.tempSaveFileList" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.tempSaveFileList*/
		SELECT * FROM dj_ATTACH_FILE
		WHERE (TARGET_TABLE_NAME = #targetTableName# AND TARGET_ID = #targetId#)
		<isNotEmpty property="targetTableName2">
		OR (TARGET_TABLE_NAME = #targetTableName2# AND TARGET_ID IN (SELECT PURC_REQ_ATTACH_ID FROM dj_PURC_REQ_ATTACH WHERE PURC_REQ_ID = #targetId#))
		</isNotEmpty>
	</select>
	
	<insert id="AcG20ExGw.makeContInspInfo" parameterClass="Map">
		/*AcG20ExGw.makeContInspInfo*/
		INSERT INTO dj_PURC_CONT_INSP
		(
			PURC_CONT_ID, 
			INSP_DATE, 
			DELIVERY_DATE, 
			WRITE_EMP_SEQ, 
			WRITE_EMP_IP, 
			WRITE_DATE,
			INSP_ORDER
		)
		VALUES
		(
			#purcContId#, 
			#today#,
			#today#,
			#empSeq#,
			#empIp#,
			NOW(),
			(
				SELECT IFNULL(MAX(A.INSP_ORDER),0)+1 AS INSP_ORDER
				FROM dj_PURC_CONT_INSP A, dj_PURC_CONT B
				WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
				AND A.C_DIKEYCODE IS NOT NULL
				AND A.INSP_STATE IN ('001','002','003')
				AND A.PURC_CONT_ID = #purcContId#
			)
		)
		<selectKey keyProperty="purcContInspId" resultClass="String">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<insert id="AcG20ExGw.makeContInspTInfo">
		/*AcG20ExGw.makeContInspTInfo*/
		INSERT INTO dj_PURC_CONT_INSP_T
		(
			PURC_CONT_INSP_ID,
		    PURC_CONT_ID,
		    PURC_CONT_B_ID,
		    PURC_CONT_T_ID,
		    ITEM_CNT,
		    ORG_CNT,
		    STANDARD,
		    ITEM_AM,
		    UNIT_AM,
		    SUP_AM,
		    VAT_AM,
		    PPS_FEES,
		    WRITE_EMP_SEQ,
		    WRITE_EMP_IP,
		    WRITE_DATE
		)
		SELECT
			#purcContInspId#,
		    A.PURC_CONT_ID,
		    A.PURC_CONT_B_ID,
		    A.PURC_CONT_T_ID,
		    A.ITEM_CNT,
		    A.ITEM_CNT,
		    A.STANDARD,
		    A.ITEM_AM,
		    CASE
				WHEN A.PURC_REQ_TYPE = '2'
                THEN (A.ITEM_CNT * A.ITEM_AM) + FLOOR(A.ITEM_CNT * A.ITEM_AM * 0.0054)
                ELSE (A.ITEM_CNT * A.ITEM_AM)
			END AS UNIT_AM,
		    CASE
				WHEN A.VAT_FG = '1'
		        THEN ROUND(ROUND((A.ITEM_CNT * A.ITEM_AM)/1.1 * 10)/10)
		        ELSE (A.ITEM_CNT * A.ITEM_AM)
			END AS SUP_AM,
		    CASE
				WHEN A.VAT_FG = '1'
		        THEN (A.ITEM_CNT * A.ITEM_AM) - ROUND(ROUND((A.ITEM_CNT * A.ITEM_AM)/1.1 * 10)/10)
		        ELSE 0
		    END AS VAT_AM,
		    CASE
				WHEN A.PURC_REQ_TYPE = '2'
                THEN FLOOR(A.ITEM_CNT * A.ITEM_AM * 0.0054)
                ELSE 0
			END AS PPS_FEES,
		    #empSeq#,
			#empIp#,
		    NOW()
		FROM
		(
			SELECT 
				(SELECT PURC_REQ_TYPE_CODE_ID FROM dj_PURC_REQ AA WHERE PURC_REQ_ID = (SELECT PURC_REQ_ID FROM dj_PURC_CONT BB WHERE BB.PURC_CONT_ID = A.PURC_CONT_ID)) AS PURC_REQ_TYPE,
			    A.PURC_CONT_ID,
			    A.PURC_CONT_B_ID,
			    A.PURC_CONT_T_ID,
			    CAST(A.ITEM_CNT AS UNSIGNED) - IFNULL(CAST(B.ITEM_CNT AS UNSIGNED),0) AS ITEM_CNT,
			    A.STANDARD,
			    A.ITEM_AM,
				D.VAT_FG
			FROM dj_PURC_CONT_T A
			LEFT OUTER JOIN 
			(
				SELECT A.PURC_CONT_T_ID, SUM(A.ITEM_CNT) AS ITEM_CNT
			    FROM dj_PURC_CONT_INSP_T A, dj_PURC_CONT_INSP B
			    WHERE A.PURC_CONT_INSP_ID = B.PURC_CONT_INSP_ID
			    AND B.C_DIKEYCODE IS NOT NULL
			    AND B.INSP_STATE NOT IN ('002')
			    GROUP BY PURC_CONT_T_ID
			) B
			ON A.PURC_CONT_T_ID = B.PURC_CONT_T_ID
			JOIN dj_PURC_CONT_B C
			ON A.PURC_CONT_B_ID = C.PURC_CONT_B_ID
			JOIN NEOS.G20_ABDOCU_B D
			ON C.ABDOCU_B_NO = D.ABDOCU_B_NO
			WHERE PURC_TR_TYPE = '002'
		) A
		WHERE A.PURC_CONT_ID = 
		(SELECT ifnull(b.purc_cont_id, a.purc_cont_id) as purc_cont_id FROM dj_PURC_CONT A
		LEFT JOIN
		(
		SELECT AA.purc_cont_id, AA.purc_cont_id_org, AA.CONT_AM, AA.mod_order_no FROM dj_PURC_CONT AA
		JOIN (SELECT purc_cont_id_org, MAX(mod_order_no) AS mod_order_no FROM dj_PURC_CONT GROUP BY purc_cont_id_org HAVING MAX(mod_order_no) > 0) BB 
		ON AA.purc_cont_id_org = BB.purc_cont_id_org
		AND AA.mod_order_no = BB.mod_order_no
		) B
		ON A.PURC_CONT_ID = B.purc_cont_id_org
		where a.purc_cont_id = #purcContId#)		
	</insert>
	
	<insert id="AcG20ExGw.makeContInspTInfo2">
		/*AcG20ExGw.makeContInspTInfo*/
		INSERT INTO dj_PURC_CONT_INSP_T
		(
			PURC_CONT_INSP_ID,
		    PURC_CONT_ID,
		    PURC_CONT_B_ID,
		    PURC_CONT_T_ID,
		    UNIT_AM,
		    ORG_AM,
		    SUP_AM,
		    VAT_AM,
		    WRITE_EMP_SEQ,
		    WRITE_EMP_IP,
		    WRITE_DATE
		)
		SELECT
			#purcContInspId#,
		    A.PURC_CONT_ID,
		    A.PURC_CONT_B_ID,
		    A.PURC_CONT_T_ID,
		    A.UNIT_AM,
		    A.UNIT_AM,
		    CASE
				WHEN A.VAT_FG = '1'
		        THEN ROUND(ROUND((A.UNIT_AM)/1.1 * 10)/10)
		        ELSE (A.UNIT_AM)
			END AS SUP_AM,
		    CASE
				WHEN A.VAT_FG = '1'
		        THEN (A.UNIT_AM) - ROUND(ROUND((A.UNIT_AM)/1.1 * 10)/10)
		        ELSE 0
		    END AS VAT_AM,
		    #empSeq#,
			#empIp#,
		    NOW()
		FROM
		(
			SELECT 
			    A.PURC_CONT_ID,
			    A.PURC_CONT_B_ID,
			    A.PURC_CONT_T_ID,
			    CAST(A.UNIT_AM AS UNSIGNED) - IFNULL(CAST(B.UNIT_AM AS UNSIGNED),0) AS UNIT_AM,
				D.VAT_FG
			FROM dj_PURC_CONT_T A
			LEFT OUTER JOIN 
			(
				SELECT A.PURC_CONT_T_ID, SUM(A.UNIT_AM) AS UNIT_AM
			    FROM dj_PURC_CONT_INSP_T A, dj_PURC_CONT_INSP B
			    WHERE A.PURC_CONT_INSP_ID = B.PURC_CONT_INSP_ID
			    AND B.C_DIKEYCODE IS NOT NULL
			    AND B.INSP_STATE NOT IN ('002')
			    GROUP BY PURC_CONT_T_ID
			) B
			ON A.PURC_CONT_T_ID = B.PURC_CONT_T_ID
			JOIN dj_PURC_CONT_B C
			ON A.PURC_CONT_B_ID = C.PURC_CONT_B_ID
			JOIN NEOS.G20_ABDOCU_B D
			ON C.ABDOCU_B_NO = D.ABDOCU_B_NO
			WHERE PURC_TR_TYPE = '001'
		) A
		WHERE A.PURC_CONT_ID = 
		(SELECT ifnull(b.purc_cont_id, a.purc_cont_id) as purc_cont_id FROM dj_PURC_CONT A
		LEFT JOIN
		(
		SELECT AA.purc_cont_id, AA.purc_cont_id_org, AA.CONT_AM, AA.mod_order_no FROM dj_PURC_CONT AA
		JOIN (SELECT purc_cont_id_org, MAX(mod_order_no) AS mod_order_no FROM dj_PURC_CONT GROUP BY purc_cont_id_org HAVING MAX(mod_order_no) > 0) BB 
		ON AA.purc_cont_id_org = BB.purc_cont_id_org
		AND AA.mod_order_no = BB.mod_order_no
		) B
		ON A.PURC_CONT_ID = B.purc_cont_id_org
		where a.purc_cont_id = #purcContId#)	
	</insert>
	
	<select id="AcG20ExGw.getContInsp" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.getContInsp*/
		SELECT 
			C.PURC_REQ_ID,
			C.PURC_REQ_TYPE,
			C.PURC_REQ_TYPE_CODE_ID,
		    CONCAT(C.PURC_REQ_YEAR, '-', C.PURC_REQ_DEPT_NAME, '-', LPAD(C.PURC_REQ_NO,4,'0')) AS PURC_REQ_NO,
		    B.PURC_CONT_ID,
		    B.CONT_TITLE,
		    B.CONT_AM,
		    B.TR_NM,
		    B.TR_CD,
		    B.REG_NB,
            B.CEO_NM,
		    IFNULL(CAST(CAST(B.CONT_START_DATE2 AS DATE) AS CHAR(10)), '') AS CONT_START_DATE,
		    IFNULL(CAST(CAST(B.CONT_END_DATE2 AS DATE) AS CHAR(10)), '') AS CONT_END_DATE,
		    B.CONT_TERM,
		    IFNULL(CAST(CAST(B.CONT_DATE2 AS DATE) AS CHAR(10)), '') AS CONT_DATE,
		    A.PURC_CONT_INSP_ID,
		    A.INSP_ORDER,
		    IFNULL(CAST(CAST(A.INSP_DATE AS DATE) AS CHAR(10)), '') AS INSP_DATE,
		    IFNULL(CAST(CAST(A.DELIVERY_DATE AS DATE) AS CHAR(10)), '') AS DELIVERY_DATE,
		    A.INSP_PLACE,
		    A.INSP_OPINION1,
		    A.INSP_OPINION2,
		    A.INSP_OPINION3,
		    A.INSP_OPINION4,
		    A.INSP_OPINION5,
		    A.INSP_OPINION_TEXT1,
		    A.INSP_OPINION_TEXT2,
		    A.INSP_OPINION_TEXT3,
		    A.INSP_OPINION_TEXT4,
		    A.INSP_OPINION_TEXT5,
		    A.INSP_STATE,
		    A.C_DIKEYCODE,
		    A.REMARK,
		    (
				SELECT IFNULL(SUM(AA.UNIT_AM),0)
		        FROM dj_PURC_CONT_INSP_T AA, dj_PURC_CONT_INSP BB
		        WHERE A.PURC_CONT_ID = AA.PURC_CONT_ID 
		        AND AA.PURC_CONT_INSP_ID = BB.PURC_CONT_INSP_ID
		        AND C_DIKEYCODE IS NOT NULL
		        AND INSP_STATE NOT IN ('002')
		        AND BB.INSP_ORDER <![CDATA[<]]> A.INSP_ORDER
			) AS PAYMENT_AM,
			(
				SELECT IFNULL(SUM(AA.UNIT_AM),0)
		        FROM dj_PURC_CONT_INSP_T AA
		        WHERE A.PURC_CONT_INSP_ID = AA.PURC_CONT_INSP_ID
		    ) AS APPLY_AM,
		    CAST(NOW() AS CHAR(10)) AS TODAY
		FROM dj_PURC_CONT_INSP A, dj_PURC_CONT B, dj_PURC_REQ C
		WHERE A.PURC_CONT_INSP_ID = #purcContInspId#
        AND A.PURC_CONT_ID = B.PURC_CONT_ID
        AND B.PURC_REQ_ID = C.PURC_REQ_ID
	</select>
	
	<select id="AcG20ExGw.getContInspT" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.getContInspT*/
		SELECT 
			B.ITEM_TYPE AS CONT_ITEM_TYPE,
            B.ITEM_TYPE_CODE_ID AS CONT_ITEM_TYPE_CODE_ID,
			B.ITEM_NM AS CONT_ITEM_NM,
            B.ITEM_CNT AS CONT_ITEM_CNT,
            B.STANDARD AS CONT_STANDARD,
            B.CONTENTS AS CONT_CONTENTS,
            B.ITEM_AM AS CONT_ITEM_AM,
            B.UNIT_AM AS CONT_UNIT_AM,
            B.SUP_AM AS CONT_SUP_AM,
            B.VAT_AM AS CONT_VAT_AM,
            B.PPS_FEES AS CONT_PPS_FEES,
            A.*,
            D.VAT_FG
		FROM dj_PURC_CONT_INSP_T A, dj_PURC_CONT_T B, dj_PURC_CONT_B C, NEOS.G20_ABDOCU_B D
		WHERE PURC_CONT_INSP_ID = #purcContInspId#
        AND A.PURC_CONT_T_ID = B.PURC_CONT_T_ID
        AND B.PURC_CONT_B_ID = C.PURC_CONT_B_ID
        AND C.ABDOCU_B_NO = D.ABDOCU_B_NO
        AND B.PURC_TR_TYPE = #purcTrType#
	</select>
	
	<update id="AcG20ExGw.updatePurcContInsp" parameterClass="Map">
		/*AcG20ExGw.updatePurcContInsp*/
		UPDATE dj_PURC_CONT_INSP
		SET
			INSP_DATE = REPLACE(#inspDate#,'-',''),
			DELIVERY_DATE = REPLACE(#deliveryDate#,'-',''),
			INSP_PLACE = #inspPlace#,
			INSP_OPINION1 = #inspOpinion1#,
			INSP_OPINION2 = #inspOpinion2#,
			INSP_OPINION3 = #inspOpinion3#,
			INSP_OPINION4 = #inspOpinion4#,
			INSP_OPINION5 = #inspOpinion5#,
			INSP_OPINION_TEXT1 = #inspOpinionText1#,
			INSP_OPINION_TEXT2 = #inspOpinionText2#,
			INSP_OPINION_TEXT3 = #inspOpinionText3#,
			INSP_OPINION_TEXT4 = #inspOpinionText4#,
			INSP_OPINION_TEXT5 = #inspOpinionText5#,
			REMARK = #remark#
		<isNotEmpty property="inspState">
			,INSP_STATE = #inspState#
		</isNotEmpty>
		<isNotEmpty property="inspState">
			,C_DIKEYCODE = #purcContInspId#
		</isNotEmpty>
		WHERE PURC_CONT_INSP_ID = #purcContInspId#
	</update>
	
	<update id="AcG20ExGw.updatePurcContInspT" parameterClass="Map">
		/*AcG20ExGw.updatePurcContInspT*/
		UPDATE dj_PURC_CONT_INSP_T
		SET
			ITEM_CNT = #itemCnt#,
			STANDARD = #standard#,
			ITEM_AM = #itemAm#,
			UNIT_AM = #unitAm#,
			SUP_AM = #supAm#,
			VAT_AM = #vatAm#,
			PPS_FEES = #ppsFees#
		WHERE PURC_CONT_INSP_T_ID = #purcContInspTId#
	</update>
	
	<update id="AcG20ExGw.updatePurcReqContent" parameterClass="Map">
		/*AcG20ExGw.updatePurcReqContent*/
		UPDATE dj_PURC_REQ
		SET PURC_REQ_CONTENT = #contentsStr#
		WHERE PURC_REQ_ID = #purcReqId#
	</update>
	
	<insert id="AcG20ExGw.makeContentsStr" parameterClass="Map">
		/*AcG20ExGw.makeContentsStr*/
		INSERT INTO NEOS.A_DOCINTERLOCK
		(
			APPROKEY,
			DOC_TITLE,
			DOC_CONTENTS
		)
		VALUES
		(
			#approkey#,
			#docTitle#,
			#contentsStr#
		)
	</insert>
	
	<select id="AcG20ExGw.getPurcReqHBList" parameterClass="Map" resultClass="abdocu_B">
		/*AcG20ExGw.getPurcReqHBList*/
		SELECT 
			A.MGT_NM, A.BOTTOM_NM, 
			B.ERP_BGT_NM1, B.ERP_BGT_NM2, B.ERP_BGT_NM3, B.ERP_BGT_NM4, B.ABGT_NM, B.APPLY_AM,
		    E.OPEN_AM, E.EXEC_AM, E.REFER_AM, E.LEFT_AM, E.NEXT_AM
		FROM NEOS.G20_ABDOCU_H A, NEOS.G20_ABDOCU_B B, dj_PURC_REQ C, dj_PURC_REQ_H D, dj_PURC_REQ_B E
		WHERE A.ABDOCU_NO = B.ABDOCU_NO
		AND C.PURC_REQ_ID = D.PURC_REQ_ID
        AND D.PURC_REQ_H_ID = E.PURC_REQ_H_ID
		AND B.ABDOCU_B_NO = E.ABDOCU_B_NO
		AND C.PURC_REQ_ID = #purcReqId#
	</select>
	
	<select id="AcG20ExGw.getPurcContHBList" parameterClass="Map" resultClass="abdocu_B">
		/*AcG20ExGw.getPurcContHBList*/
		SELECT 
			A.MGT_NM, A.BOTTOM_NM, 
			B.ERP_BGT_NM1, B.ERP_BGT_NM2, B.ERP_BGT_NM3, B.ERP_BGT_NM4, B.ABGT_NM,
		    C.APPLY_AM,
            D.OPEN_AM, D.EXEC_AM, D.REFER_AM, D.LEFT_AM,
            C.NEXT_AM
		FROM NEOS.G20_ABDOCU_H A, NEOS.G20_ABDOCU_B B, dj_PURC_CONT_B C, dj_PURC_REQ_B D
		WHERE A.ABDOCU_NO = B.ABDOCU_NO
		AND B.ABDOCU_B_NO = C.ABDOCU_B_NO
        AND C.PURC_REQ_B_ID = D.PURC_REQ_B_ID
		AND C.PURC_CONT_ID = #purcContId#
	</select>
	
	<select id="AcG20ExGw.getPurcContTList" parameterClass="Map" resultClass="egovMap">
	    /* AcG20ExGw.getPurcContTList - mariaDB */
  		SELECT 
			T.PURC_CONT_T_ID,
			T.PURC_CONT_ID,
			T.PURC_CONT_B_ID,
			T.PURC_REQ_ID,
			T.PURC_REQ_H_ID,
			T.PURC_REQ_B_ID,
			T.PURC_REQ_T_ID,
			T.ABDOCU_T_NO,
			T.PPS_ID_NO,
			T.ITEM_TYPE,
			T.ITEM_TYPE_CODE_ID,
			T.STANDARD,
			T.CONTENTS,
			CAST(CAST(T.START_DATE AS DATE) AS CHAR(10)) AS START_DATE,
			CAST(CAST(T.END_DATE AS DATE) AS CHAR(10)) AS END_DATE,
			T.PPS_FEES,
			T.PURC_TR_TYPE,
			T.TR_CD,
			T.TR_NM,
			T.REG_NB,
			T.CEO_NM,
			T.ITEM_NM,
			T.ITEM_CNT,
			T.ITEM_AM,
			T.UNIT_AM,
			T.SUP_AM,
			T.VAT_AM,
			T.REMARK AS RMK_DC,
			T.NEXT_AM
        FROM dj_PURC_CONT_T T, dj_PURC_CONT_B B
        WHERE T.PURC_CONT_B_ID = B.PURC_CONT_B_ID        
        AND B.PURC_CONT_ID = #purcContId#
        AND T.PURC_TR_TYPE = #purcTrType#
		ORDER BY T.ABDOCU_T_NO ASC;
	</select>
	
	<update id="AcG20ExGw.updatePurcContContent" parameterClass="Map">
		/*AcG20ExGw.updatePurcContContent*/
		UPDATE dj_PURC_CONT
		SET CONT_CONTENT = #contentsStr#
		WHERE PURC_CONT_ID = #purcContId#
	</update>
	
	<select id="AcG20ExGw.purcContInspListData" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.purcContInspListData*/
		SELECT 
			IFNULL(C.CONT_AM, B.CONT_AM) AS CONT_AM,
		    (
				SELECT IFNULL(SUM(AA.UNIT_AM),0)
		        FROM dj_PURC_CONT_INSP_T AA, dj_PURC_CONT_INSP BB
		        WHERE A.PURC_CONT_ID = AA.PURC_CONT_ID 
		        AND AA.PURC_CONT_INSP_ID = BB.PURC_CONT_INSP_ID
		        AND C_DIKEYCODE IS NOT NULL
		        AND INSP_STATE NOT IN ('002')
		        AND BB.INSP_ORDER <![CDATA[<]]> A.INSP_ORDER
			) AS PAYMENT_AM,
		    (
				SELECT IFNULL(SUM(AA.UNIT_AM),0)
		        FROM dj_PURC_CONT_INSP_T AA
		        WHERE A.PURC_CONT_INSP_ID = AA.PURC_CONT_INSP_ID
		    ) AS APPLY_AM,
		    A.C_DIKEYCODE,
		    A.REMARK,
		    A.INSP_ORDER,
		    CAST(CAST(A.INSP_DATE AS DATE) AS CHAR(10)) AS INSP_DATE,
		    CAST(CAST(A.DELIVERY_DATE AS DATE) AS CHAR(10)) AS DELIVERY_DATE,
		    A.PURC_CONT_INSP_ID,
		    A.INSP_STATE,
		    (SELECT CODE_KR FROM common_code WHERE GROUP_CODE = 'PURC_INSP_STATE' AND CODE = A.INSP_STATE)AS INSP_STATE_NM,
            (SELECT PAY_CNT FROM dj_PURC_CONT AA WHERE A.PURC_CONT_ID = AA.PURC_CONT_ID) AS PAY_CNT,
            (
				SELECT IFNULL(COUNT(AA.PURC_CONT_ID),0)
		        FROM dj_PURC_CONT_INSP AA
		        WHERE A.PURC_CONT_ID = AA.PURC_CONT_ID
		        AND C_DIKEYCODE IS NOT NULL
		        AND INSP_STATE NOT IN ('002')
		        AND AA.INSP_ORDER <![CDATA[<=]]> A.INSP_ORDER
			) AS PAYMENT_CNT
		FROM dj_PURC_CONT_INSP A
		JOIN dj_PURC_CONT B
		ON A.PURC_CONT_ID = B.PURC_CONT_ID
		LEFT JOIN (
		SELECT AA.purc_cont_id_org, AA.CONT_AM, AA.mod_order_no FROM dj_PURC_CONT AA
		JOIN (SELECT purc_cont_id_org, MAX(mod_order_no) AS mod_order_no FROM dj_PURC_CONT GROUP BY purc_cont_id_org HAVING MAX(mod_order_no) > 0) BB 
		ON AA.purc_cont_id_org = BB.purc_cont_id_org
		AND AA.mod_order_no = BB.mod_order_no
		) C
		ON A.PURC_CONT_ID = C.purc_cont_id_org
		WHERE 1=1
		<isEqual property="contType" compareValue="002">
		AND A.INSP_STATE = '003'
		</isEqual>
		<isNotEqual property="contType" compareValue="002">
		AND A.C_DIKEYCODE IS NOT NULL
		</isNotEqual>
		AND A.PURC_CONT_ID = #purcContId#
		ORDER BY INSP_ORDER DESC
		LIMIT   $skip$ , $pageSize$
	</select>
	
	<select id="AcG20ExGw.purcContInspListDataTotal" parameterClass="Map" resultClass="String">
		/*AcG20ExGw.purcContInspListDataTotal*/
		SELECT 
			COUNT(A.PURC_CONT_INSP_ID)
		FROM dj_PURC_CONT_INSP A
		JOIN dj_PURC_CONT B
		ON A.PURC_CONT_ID = B.PURC_CONT_ID
		LEFT JOIN (
		SELECT AA.purc_cont_id_org, AA.CONT_AM, AA.mod_order_no FROM dj_PURC_CONT AA
		JOIN (SELECT purc_cont_id_org, MAX(mod_order_no) AS mod_order_no FROM dj_PURC_CONT GROUP BY purc_cont_id_org HAVING MAX(mod_order_no) > 0) BB 
		ON AA.purc_cont_id_org = BB.purc_cont_id_org
		AND AA.mod_order_no = BB.mod_order_no
		) C
		ON A.PURC_CONT_ID = C.purc_cont_id_org
		WHERE 1=1
		<isEqual property="contType" compareValue="002">
		AND A.INSP_STATE = '003'
		</isEqual>
		<isNotEqual property="contType" compareValue="002">
		AND A.C_DIKEYCODE IS NOT NULL
		</isNotEqual>
		AND A.PURC_CONT_ID = #purcContId#
	</select>
	
	<select id="AcG20ExGw.inspTopBoxInit" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.inspTopBoxInit*/
		SELECT 
			CONCAT(A.PURC_REQ_YEAR, '-', A.PURC_REQ_DEPT_NAME, '-', LPAD(A.PURC_REQ_NO,4,'0')) AS PURC_REQ_NO,
			A.PURC_REQ_TYPE,
			A.PURC_REQ_TYPE_CODE_ID,
		    B.CONT_TITLE,
		    B.CONT_STEP,
			B.CONT_TYPE,
			B.CONT_TYPE_CODE_ID,
 		    A.CONS_DOC_SEQ,
 		    B.TR_NM,
 		    IFNULL(B.CONT_DATE2, B.CONT_DATE) AS CONT_DATE,
<!--  		    B.CONT_AM -->
 		    (SELECT SUM(budget_amt) FROM neos.t_exnp_consbudget WHERE A.cons_doc_seq = cons_doc_seq) as CONT_AM
		FROM dj_PURC_REQ A, dj_PURC_CONT B
		WHERE A.PURC_REQ_ID = B.PURC_REQ_ID
		AND B.PURC_CONT_ID = #purcContId#
	</select>
	
	<update id="AcG20ExGw.updatePurcReqContAm" parameterClass="Map">
		/*AcG20ExGw.updatePurcReqContAm*/
		UPDATE dj_PURC_REQ
	    SET		CONT_AM = (
	    									SELECT SUM(IFNULL(APPLY_AM,0) + IFNULL(NEXT_AM,0))
											FROM dj_PURC_REQ_B A, dj_PURC_REQ_H B
											WHERE A.PURC_REQ_H_ID = B.PURC_REQ_H_ID
											AND B.PURC_REQ_ID = #purcReqId#
	    								)
	    WHERE PURC_REQ_ID = #purcReqId#
	</update>
	
	<select id="AcG20ExGw.selectPurcReqContAm" parameterClass="Map" resultClass="String">
		/*AcG20ExGw.selectPurcReqContAm*/
		SELECT CONT_AM FROM dj_PURC_REQ WHERE PURC_REQ_ID = #purcReqId#
	</select>
	
	<update id="AcG20ExGw.makeContInfoUpdate" parameterClass="Map">
		/*AcG20ExGw.makeContInfoUpdate*/
		UPDATE 
			dj_PURC_CONT A,
			dj_PURC_REQ B
		SET
			A.CONT_AM = B.CONT_AM,
			A.PAY_CON = B.PAY_CON,
			A.PAY_CON_CODE_ID = B.PAY_CON_CODE_ID,
			A.PAY_TYPE = B.PAY_TYPE,
			A.PAY_TYPE_CODE_ID = B.PAY_TYPE_CODE_ID,
			A.PAY_CNT = B.PAY_CNT,
			A.CONT_TYPE = B.CONT_TYPE,
			A.CONT_TYPE_CODE_ID = B.CONT_TYPE_CODE_ID,
			A.CONT_DATE = B.CONT_DATE,
			A.REG_NB = B.REG_NB,
			A.CEO_NM = B.CEO_NM,
			A.CONT_STEP = #contStep#,
			A.C_DIKEYCODE = B.C_DIKEYCODE,
			A.CONT_TITLE = B.PURC_REQ_TITLE,
			A.TR_NM = B.TR_NM,
			A.TR_CD = B.TR_CD,
			A.CONT_TERM = B.TERM,
			A.CONT_END_DATE = B.PURC_REQ_DATE,
			A.SMALL_YN = #smallYn#,
		<isEqual property="contType" compareValue="003">
			A.CONT_DATE2 = B.CONT_DATE,
			A.CONT_START_DATE2 = B.CONT_DATE,
			A.CONT_END_DATE2 = B.CONT_DATE,
		</isEqual>
		<isEqual property="contType" compareValue="004">
			A.CONT_DATE2 = B.CONT_DATE,
			A.CONT_START_DATE2 = B.CONT_DATE,
			A.CONT_END_DATE2 = B.CONT_DATE,
		</isEqual>
			A.WRITE_EMP_SEQ = B.WRITE_EMP_SEQ,
			A.WRITE_EMP_IP = B.WRITE_EMP_IP
		WHERE A.PURC_REQ_ID = B.PURC_REQ_ID
		AND A.PURC_REQ_ID = #purcReqId#
	</update>
	
	<update id="AcG20ExGw.updatePurcContInspContent" parameterClass="Map">
		/*AcG20ExGw.updatePurcContInspContent*/
		UPDATE dj_PURC_CONT_INSP
		SET DOC_CONTENT = #contentsStr#
		WHERE PURC_CONT_INSP_ID = #purcContInspId#
	</update>
	
	<select id="AcG20ExGw.checkInspComplete" parameterClass="Map" resultClass="String">
		/*AcG20ExGw.checkInspComplete*/
		SELECT CONT_STEP
		FROM dj_PURC_CONT
		WHERE PURC_CONT_ID = #purcContId#
	</select>
	
	<select id="AcG20ExGw.purcContModListData" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.purcContModListData*/
		SELECT
			CAST(WRITE_DATE AS CHAR(10)) AS WRITE_DATE,
			CAST(MOD_COM_DATE AS CHAR(10)) AS MOD_COM_DATE,
		    CAST(CAST(CONT_DATE2 AS DATE) AS CHAR(10)) AS CONT_DATE2,
		    CAST(CAST(CONT_START_DATE2 AS DATE) AS CHAR(10)) AS CONT_START_DATE2,
		    CAST(CAST(CONT_END_DATE2 AS DATE) AS CHAR(10)) AS CONT_END_DATE2,
		    CONT_AM,
		    CASE
				WHEN (PURC_CONT_ID_ORG IS NULL OR PURC_CONT_ID_ORG = 0)
		        THEN '최초 계약'
		        ELSE MOD_REASON
			END AS MOD_REASON,
			PURC_CONT_ID,
			MOD_RETURN_REASON,
		    B.APPR_STATUS,
		    (SELECT DETAIL_NAME FROM NEOS.T_CO_CODE_DETAIL_MULTI WHERE CODE = 'COM109' AND LANG_CODE = 'KR' AND DETAIL_CODE = B.APPR_STATUS LIMIT 1) AS C_DISTATUS_NM,
		    C.C_RIDOCFULLNUM,
		    B.APPR_DIKEY AS DOC_ID
		FROM
		    DJ_PURC_CONT A
		LEFT JOIN 
			NEOS.ERPGWLINK B
		ON B.DOCX_NUMB = CONCAT('CONTMOD_', A.PURC_REQ_ID,'_', A.PURC_CONT_ID,'_', A.PURC_CONT_ID_ORG)
		LEFT JOIN
			NEOS.A_RECORDINFO C
		ON B.APPR_DIKEY = C.C_DIKEYCODE
		WHERE MOD_REQ_TEMP = 'Y'
		AND (PURC_CONT_ID = #purcContId# OR PURC_CONT_ID_ORG = #purcContId#)
		ORDER BY A.purc_cont_id DESC
		LIMIT   $skip$ , $pageSize$
	</select>
	
	<select id="AcG20ExGw.purcContModListDataTotal" parameterClass="Map" resultClass="String">
		/*AcG20ExGw.purcContModListDataTotal*/
		SELECT
			COUNT(*)
		FROM
		    DJ_PURC_CONT A
		LEFT JOIN 
			NEOS.ERPGWLINK B
		ON B.DOCX_NUMB = CONCAT('CONTMOD_', A.PURC_REQ_ID,'_', A.PURC_CONT_ID,'_', A.PURC_CONT_ID_ORG)
		LEFT JOIN
			NEOS.A_RECORDINFO C
		ON B.APPR_DIKEY = C.C_DIKEYCODE
		WHERE mod_req_temp = 'Y'
		AND (PURC_CONT_ID = #purcContId# OR PURC_CONT_ID_ORG = #purcContId#)
	</select>
	
	<insert id="AcG20ExGw.makeContModInfo" parameterClass="Map">
		/*AcG20ExGw.makeContModInfo*/
		INSERT INTO dj_PURC_CONT
		(
			PURC_REQ_ID         ,
			CONT_TITLE          ,
			CONT_AM             ,
			PAY_CON             ,
			PAY_CON_CODE_ID     ,
			PAY_TYPE            ,
			PAY_TYPE_CODE_ID    ,
			PAY_CNT             ,
			CONT_TYPE           ,
			CONT_TYPE_CODE_ID   ,
			CONT_START_DATE     ,
			CONT_END_DATE       ,
			CONT_TERM           ,
			CONT_DATE           ,
			TR_CD               ,
			TR_NM               ,
			REG_NB              ,
			CEO_NM              ,
			WRITE_EMP_SEQ       ,
			WRITE_EMP_IP        ,
			WRITE_DATE          ,
			ACTIVE              ,
			REMARK              ,
			CONT_DATE2          ,
			CONT_START_DATE2    ,
			CONT_END_DATE2      ,
			CONT_CONTENT        ,
			SMALL_YN            ,
			PURC_CONT_ID_ORG	,
			PURC_CONT_ID_BEFORE	,
			BASIC_AM			,
			EXPECTED_AM			,
			RATE
		)
		SELECT
			A.purc_req_id         ,
			A.cont_title          ,
			A.cont_am             ,
			A.pay_con             ,
			A.pay_con_code_id     ,
			A.pay_type            ,
			A.pay_type_code_id    ,
			A.pay_cnt             ,
			A.cont_type           ,
			A.cont_type_code_id   ,
			A.cont_start_date     ,
			A.cont_end_date       ,
			A.cont_term           ,
			A.cont_date           ,
			A.tr_cd               ,
			A.tr_nm               ,
			A.reg_nb              ,
			A.ceo_nm              ,
			#empSeq#       		  ,
			#empIp#               ,
			NOW()                 ,
			'N'                   ,
			A.remark              ,
			A.cont_date2          ,
			A.cont_start_date2    ,
			A.cont_end_date2      ,
			A.cont_content        ,
			A.small_yn            ,
			#purcContId#          ,
			A.purc_cont_id        ,
			A.BASIC_AM            ,
			A.EXPECTED_AM         ,
			A.RATE
		FROM 
			dj_PURC_CONT A
		WHERE (PURC_CONT_ID = #purcContId# OR PURC_CONT_ID_ORG = #purcContId#) 
		AND ACTIVE = 'Y'
		ORDER BY MOD_ORDER_NO DESC, PURC_CONT_ID 
		LIMIT 1
		<selectKey keyProperty="purcContModId" resultClass="String">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<insert id="AcG20ExGw.makeContModBInfo" parameterClass="Map">
		/*AcG20ExGw.makeContModBInfo*/
		INSERT INTO
		dj_PURC_CONT_B
		(
			PURC_CONT_ID   ,
			PURC_REQ_ID    ,
			PURC_REQ_H_ID  ,
			PURC_REQ_B_ID  ,
			ABDOCU_B_NO    ,
			APPLY_AM       ,
			OPEN_AM        ,
			REMARK         ,
			WRITE_EMP_SEQ  ,
			WRITE_EMP_IP   ,
			WRITE_DATE,
			ACTIVE         ,
			NEXT_AM		   ,
			PURC_CONT_B_ID_ORG
		)
		SELECT
			#purcContModId#  ,
			A.PURC_REQ_ID    ,
			A.PURC_REQ_H_ID  ,
			A.PURC_REQ_B_ID  ,
			A.ABDOCU_B_NO    ,
			A.APPLY_AM       ,
			A.OPEN_AM        ,
			A.REMARK         ,
			#empSeq#       ,
			#empIp#        ,
			NOW(),
			'N'         ,
			A.NEXT_AM     ,
			A.purc_cont_b_id
		FROM 
			dj_PURC_CONT_B A,
			(
				SELECT PURC_CONT_ID, MOD_ORDER_NO 
				FROM dj_PURC_CONT 
				WHERE (PURC_CONT_ID = #purcContId# OR PURC_CONT_ID_ORG = #purcContId#) 
				AND ACTIVE = 'Y'
				ORDER BY MOD_ORDER_NO DESC, PURC_CONT_ID
				LIMIT 1
			) B
		WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
	</insert>
	
	<insert id="AcG20ExGw.makeContModTInfo" parameterClass="Map">
		/*AcG20ExGw.makeContModTInfo*/
		INSERT INTO
		dj_PURC_CONT_T
		(
			PURC_CONT_ID        ,
			PURC_CONT_B_ID      ,
			PURC_REQ_ID         ,
			PURC_REQ_H_ID       ,
			PURC_REQ_B_ID       ,
			PURC_REQ_T_ID       ,
			ABDOCU_T_NO         ,
			PPS_ID_NO           ,
			ITEM_TYPE           ,
			ITEM_TYPE_CODE_ID   ,
			STANDARD            ,
			CONTENTS            ,
			START_DATE          ,
			END_DATE            ,
			PPS_FEES            ,
			PURC_TR_TYPE        ,
			TR_CD               ,
			TR_NM               ,
			REG_NB              ,
			CEO_NM              ,
			ITEM_NM             ,
			ITEM_CNT            ,
			ITEM_AM             ,
			UNIT_AM             ,
			SUP_AM              ,
			VAT_AM              ,
			REMARK              ,
			WRITE_EMP_SEQ       ,
			WRITE_EMP_IP        ,
			WRITE_DATE          ,
			ACTIVE,
			NEXT_AM
		)
		SELECT
			C.PURC_CONT_ID        ,
			C.PURC_CONT_B_ID      ,
			A.PURC_REQ_ID         ,
			A.PURC_REQ_H_ID       ,
			A.PURC_REQ_B_ID       ,
			A.PURC_REQ_T_ID       ,
			A.ABDOCU_T_NO         ,
			A.PPS_ID_NO           ,
			A.ITEM_TYPE           ,
			A.ITEM_TYPE_CODE_ID   ,
			A.STANDARD            ,
			A.CONTENTS            ,
			A.START_DATE          ,
			A.END_DATE            ,
			A.PPS_FEES            ,
			A.PURC_TR_TYPE        ,
			A.TR_CD               ,
			A.TR_NM               ,
			A.REG_NB              ,
			A.CEO_NM              ,
			A.ITEM_NM             ,
			A.ITEM_CNT            ,
			A.ITEM_AM             ,
			A.UNIT_AM             ,
			A.SUP_AM              ,
			A.VAT_AM              ,
			A.REMARK              ,
			#empSeq#       ,
			#empIp#        ,
			NOW(),
			'N'      ,
			A.NEXT_AM
		FROM 
			dj_PURC_CONT_T A,
			(
				SELECT PURC_CONT_ID, MOD_ORDER_NO 
				FROM dj_PURC_CONT 
				WHERE (PURC_CONT_ID = #purcContId# OR PURC_CONT_ID_ORG = #purcContId#) 
				AND ACTIVE = 'Y'
				ORDER BY MOD_ORDER_NO DESC, PURC_CONT_ID
				LIMIT 1
			) B,
			dj_PURC_CONT_B C
		WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
        AND A.PURC_CONT_B_ID = C.PURC_CONT_B_ID_ORG
	</insert>
	
	<insert id="AcG20ExGw.makeContModAttachFile" parameterClass="Map">
		/*AcG20ExGw.makeContModAttachFile*/
		INSERT INTO
		dj_PURC_CONT_ATTACH
		(
			PURC_CONT_ID   ,
			FILE_TYPE,
			REMARK         ,
			WRITE_EMP_SEQ  ,
			WRITE_EMP_IP   ,
			WRITE_DATE,
			ACTIVE              
		)
		SELECT
			#purcContModId#   ,
			FILE_TYPE,
			REMARK         ,
			#empSeq#       ,
			#empIp#        ,
			NOW(),
			'Y'              
		FROM dj_PURC_CONT_ATTACH
		WHERE PURC_CONT_ID = #purcContId#
	</insert>
	
	<update id="AcG20ExGw.updatePurcContMod" parameterClass="Map">
		/*AcG20ExGw.updatePurcContMod*/
		UPDATE dj_PURC_CONT
		SET
			MOD_REASON = #modReason#,
			CONT_DATE2 = REPLACE(#contDate2#,'-',''),
			CONT_START_DATE2 = REPLACE(#contStartDate2#,'-',''),
			CONT_END_DATE2 = REPLACE(#contEndDate2#,'-',''),
			TR_NM = #trNm#,
			TR_CD = #trCd#,
			CEO_NM = #ceoNm#,
			REG_NB = #regNb#,
			CONS_MOD_SEQ = #consModSeq#,
			CONT_AM = #contAm#
		WHERE PURC_CONT_ID = #purcContId#
	</update>
	
	<select id="AcG20ExGw.getApplyAm" parameterClass="Map" resultClass="Integer">
		/*AcG20ExGw.getApplyAm*/
		SELECT IFNULL(APPLY_AM, 0) AS APPLY_AM
		FROM 
		dj_PURC_CONT_B A,
		(
			SELECT PURC_CONT_ID, MOD_ORDER_NO 
			FROM dj_PURC_CONT 
			WHERE (PURC_CONT_ID = #purcContIdOrg# OR PURC_CONT_ID_ORG = #purcContIdOrg#) 
			AND ACTIVE = 'Y'
			ORDER BY MOD_ORDER_NO DESC, PURC_CONT_ID
			LIMIT 1
		) B
           WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
           AND A.ABDOCU_B_NO = #abdocuBNo#
	</select>
	
	<select id="AcG20ExGw.getAceptAm" parameterClass="Map" resultClass="Integer">
		/*AcG20ExGw.getAceptAm*/
		SELECT IFNULL(SUM(APPLY_AM),0) AS ACEPT_AM
        FROM NEOS.G20_ABDOCU_B A, dj_PURC_CONT_PAY_B B, dj_PURC_CONT_PAY C
        WHERE A.ABDOCU_B_NO = B.ABDOCU_B_NO
        AND B.PURC_CONT_PAY_ID = C.PURC_CONT_PAY_ID
        AND C.C_DIKEYCODE IS NOT NULL
        AND C.DOC_STATE IN ('001','003')
        AND C.PURC_CONT_ID = #purcContIdOrg#
        AND A.ABDOCU_B_NO_REFFER = #abdocuBNo#
	</select>
	
	<update id="AcG20ExGw.resetAbdocuTMod" parameterClass="Map">
		/*AcG20ExGw.resetAbdocuTMod*/
		UPDATE 
			NEOS.G20_ABDOCU_T
		SET
			ITEM_CNT = '0',
			ITEM_AM = 0,
			UNIT_AM = 0,
			SUP_AM = 0,
			VAT_AM = 0
		WHERE ABDOCU_T_NO IN
		(
				SELECT ABDOCU_T_NO
				FROM dj_PURC_CONT_T
				WHERE PURC_CONT_ID = (SELECT PURC_CONT_ID_ORG FROM dj_PURC_CONT WHERE PURC_CONT_ID = #purcContId#)
		)
	</update>
	
	<update id="AcG20ExGw.updateAbdocuTMod" parameterClass="Map">
		/*AcG20ExGw.updateAbdocuTMod*/
		UPDATE 
			NEOS.G20_ABDOCU_T A, 
			(
				SELECT A.ABDOCU_T_NO, A.ITEM_NM,  A.ITEM_CNT, A.ITEM_AM, A.UNIT_AM, A.SUP_AM, A.VAT_AM, A.REMARK
				FROM dj_PURC_CONT_T A
				WHERE A.PURC_CONT_ID =#purcContId#
			) B
		SET
			A.ITEM_CNT = B.ITEM_CNT,
			A.ITEM_AM = B.ITEM_AM,
			A.UNIT_AM = B.UNIT_AM,
			A.SUP_AM = B.SUP_AM,
			A.VAT_AM = B.VAT_AM
		WHERE A.ABDOCU_T_NO = B.ABDOCU_T_NO
	</update>
	
	<update id="AcG20ExGw.completePurcContMod" parameterClass="Map">
		/*AcG20ExGw.completePurcContMod*/
		UPDATE 
			dj_PURC_CONT A, 
			(SELECT MAX(MOD_ORDER_NO)+1 AS MOD_ORDER_NO FROM dj_purc_cont WHERE PURC_CONT_ID_ORG = #purcContIdOrg#) B
		SET 
			A.MOD_ORDER_NO = B.MOD_ORDER_NO,
			A.ACTIVE = 'Y',
			A.mod_com_date = now()
		WHERE A.PURC_CONT_ID = #purcContId#
	</update>
	
	<update id="AcG20ExGw.requestPurcContMod" parameterClass="Map">
		/*AcG20ExGw.requestPurcContMod*/
		UPDATE 
			dj_PURC_CONT A
		SET 
			A.mod_req_temp = 'Y'
		WHERE A.PURC_CONT_ID = #purcContId#
	</update>
	
	<select id="AcG20ExGw.purcContPayListData" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.purcContPayListData*/
		SELECT 
			C.C_DITITLE AS TITLE,
            CAST(CAST(D.C_DIWRITEDAY AS DATE) AS CHAR(10)) AS REG_DT,
            A.PURC_CONT_PAY_ID,
            A.PAYMENT_TYPE,
            A.C_DIKEYCODE,
            A.DOC_STATE,
            (SELECT CODE_KR FROM common_code WHERE GROUP_CODE = 'PURC_INSP_STATE' AND CODE = A.DOC_STATE)AS DOC_STATE_NM,
            IFNULL(NEOS.F_GETDOCNUMBER(A.C_DIKEYCODE),'') AS DOC_NO,
            (SELECT SUM(APPLY_AM) FROM NEOS.G20_ABDOCU_B AA, dj_PURC_CONT_PAY_B BB WHERE AA.ABDOCU_B_NO = BB.ABDOCU_B_NO AND BB.PURC_CONT_PAY_ID = A.PURC_CONT_PAY_ID) AS APPLY_AM
        FROM dj_PURC_CONT_PAY A, NEOS.A_DOCINFO C, NEOS.A_DRAFTINFO D
        WHERE A.C_DIKEYCODE = C.C_DIKEYCODE
        AND C.C_DIKEYCODE = D.C_DIKEYCODE
        AND A.PURC_CONT_ID = #purcContId#
        ORDER BY PURC_CONT_PAY_ID DESC
        LIMIT   $skip$ , $pageSize$
	</select>
	
	<select id="AcG20ExGw.purcContPayListDataTotal" parameterClass="Map" resultClass="String">
		/*AcG20ExGw.purcContPayListDataTotal*/
		SELECT 
			COUNT(A.PURC_CONT_PAY_ID)
        FROM dj_PURC_CONT_PAY A, NEOS.A_DOCINFO C, NEOS.A_DRAFTINFO D
        WHERE A.C_DIKEYCODE = C.C_DIKEYCODE
        AND C.C_DIKEYCODE = D.C_DIKEYCODE
        AND A.PURC_CONT_ID = #purcContId#
	</select>
	
	<select id="AcG20ExGw.getTemplateKey" parameterClass="Map" resultClass="String">
		/*AcG20ExGw.getTemplateKey*/
		SELECT C_TIKEYCODE 
		FROM NEOS.A_TEMPLATEINFO
		WHERE C_TIUSE = 'Y'
		AND FORM_D_TP = #processId#
		LIMIT 1
	</select>
	
	<select id="AcG20ExGw.getPurcContPjtList" parameterClass="Map" resultClass="abdocu_H">
		/*AcG20ExGw.getPurcContPjtList*/
		SELECT DISTINCT D.*, B.PURC_REQ_H_ID
		FROM
			(
				SELECT *
				FROM dj_PURC_CONT
				WHERE (PURC_CONT_ID = #purcContId# OR PURC_CONT_ID_ORG = #purcContId#)
				AND ACTIVE = 'Y'
				ORDER BY MOD_ORDER_NO DESC, PURC_CONT_ID
				LIMIT 1
			) A,
			dj_PURC_CONT_B B, NEOS.G20_ABDOCU_B C, NEOS.G20_ABDOCU_H D
		WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
		AND B.ABDOCU_B_NO = C.ABDOCU_B_NO
		AND C.ABDOCU_NO = D.ABDOCU_NO
		AND D.ERP_GISU_FROM_DT <![CDATA[<=]]> #GISU_DT#
		AND D.ERP_GISU_TO_DT <![CDATA[>=]]> #GISU_DT#
	</select>
	
	<select id="AcG20ExGw.selectPurcContPay_B" parameterClass="abdocu_B" resultClass="abdocu_B">
	    /* AcG20ExGw.selectPurcContPay_B */
		<![CDATA[
		SELECT  #abdocu_no# AS ABDOCU_NO, neos.nextval('abdocuBNo') AS ABDOCU_B_NO
		      , #abdocu_no_reffer# AS ABDOCU_NO_REFFER, A.ABDOCU_B_NO AS ABDOCU_B_NO_REFFER
			  , ERP_CO_CD, DIV_NM2, DIV_CD2
			  , ABGT_NM, ABGT_CD, ERP_BGT_NM1, ERP_BGT_NM2, ERP_BGT_NM3, ERP_BGT_NM4
			  , SET_FG, VAT_FG, TR_FG,	RMK_DC, IT_USE_WAY, A.APPLY_AM
			  , TRAN_CD, CTL_FG, BANK_SQ, BANK_DT
			  , A.PURC_CONT_ID, A.PURC_CONT_B_ID
		FROM	NEOS.G20_ABDOCU_B B
		JOIN
        (
			SELECT A.ABDOCU_B_NO, A.APPLY_AM, A.PURC_CONT_ID, A.PURC_CONT_B_ID
			FROM dj_PURC_CONT_B A,
			(
				SELECT *
				FROM dj_PURC_CONT
				WHERE (PURC_CONT_ID = #purc_cont_id# OR PURC_CONT_ID_ORG = #purc_cont_id#)
				AND ACTIVE = 'Y'
				ORDER BY MOD_ORDER_NO DESC, PURC_CONT_ID
				LIMIT 1 
			) B
			WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
		) A
		ON B.ABDOCU_B_NO = A.ABDOCU_B_NO
		WHERE	1=1
		AND		ABDOCU_NO		= #abdocu_no_reffer#
		AND		(SELECT COUNT(*) FROM NEOS.G20_ABDOCU_B B2 WHERE B2.CONFER_RETURN = B.ABDOCU_B_NO ) < 1
		AND		(B.APPLY_AM - 
						IFNULL((	SELECT SUM(IFNULL(APPLY_AM,0))
								FROM	NEOS.G20_ABDOCU_B B2
								JOIN	NEOS.G20_ABDOCU_H H2
								ON		B2.ABDOCU_NO = H2.ABDOCU_NO
								AND		H2.C_DIKEYCODE IS NOT NULL
								JOIN	NEOS.ERPGWLINK LINK
								ON		LINK.APPR_DIKEY =  H2.C_DIKEYCODE
								AND		APPR_STATUS IN ('002', '003', '008', '009')        		
								WHERE	B2.ABDOCU_NO_REFFER = B.ABDOCU_NO
								AND      B2.ABDOCU_B_NO_REFFER = B.ABDOCU_B_NO 
								AND		B2.ABGT_CD = B.ABGT_CD),0)) <> 0
		]]>
	</select>
	
	<select id="AcG20ExGw.selectPurcContPay_T" parameterClass="abdocu_B" resultClass="abdocu_T">
	    /* AcG20ExGw.selectPurcContPay_T */
		SELECT
	                #abdocu_no# AS ABDOCU_NO, #abdocu_b_no# AS ABDOCU_B_NO, neos.nextval('abdocuTNo') AS ABDOCU_T_NO, #abdocu_no_reffer# AS ABDOCU_NO_REFFER
	              , ERP_CO_CD
	              , BTR_NM, BTR_CD, BA_NB, ATTR_NM
	              , JIRO_NM, JIRO_CD, TEL, ADDR, PPL_NB, DEPOSITOR
<!-- 	              , ITEM_NM
                  , IFNULL(ITEM_CNT,0) AS ITEM_CNT
                  , IFNULL(ITEM_AM,0) AS ITEM_AM -->
	              , '' AS ITEM_NM
                  , 0 AS ITEM_CNT
                  , 0 AS ITEM_AM
                  , TAX_DT, RMK_DC
                  , SUM(IFNULL(UNIT_AM,0)) AS UNIT_AM
                  , SUM(IFNULL(SUP_AM,0)) AS SUP_AM
                  , SUM(IFNULL(VAT_AM,0)) AS VAT_AM
                  , SUM(IFNULL(NDEP_AM,0)) AS NDEP_AM
                  , SUM(IFNULL(INAD_AM,0)) AS INAD_AM
                  , SUM(IFNULL(INTX_AM,0)) AS INTX_AM
                  , SUM(IFNULL(RSTX_AM,0)) AS RSTX_AM
                  , SUM(IFNULL(WD_AM,0)) AS WD_AM
	              , ETCRVRS_YM, ETCDIV_CD, ETCDUMMY1, ET_YN
	              , IT_USE_NO, IT_USE_DT, IT_CARD_NO
	              , ISS_SQ, ISS_DT, BK_SQ, BANK_SQ, BANK_DT, EDIT_PROC
	              , TRAN_CD, REF_ABIN_LN_NO, LINK_TYPE
	              , CTR_NM, CTR_CD, CTR_APPDT
	              , CMS_NAME, CHAIN_NAME, TR_FG, TR_FG_NM
	              , EMP_NM, TRCHARGE_EMP				
	              , A.PURC_CONT_T_ID
	              , A.TR_NM
	              <!-- , A.TR_CD -->
	              , IFNULL(A.TR_CD,'') AS TR_CD
	              , A.CEO_NM, A.REG_NB
        FROM   
        (
            SELECT * FROM NEOS.G20_ABDOCU_T
            WHERE       ABDOCU_NO = #abdocu_no_reffer#
            AND         ABDOCU_B_NO     = #abdocu_b_no_reffer#
            ORDER BY ABDOCU_T_NO
        ) T 
        ,(
			SELECT ABDOCU_T_NO, PURC_CONT_T_ID, TR_CD, TR_NM, CEO_NM, REG_NB
			FROM dj_PURC_CONT_T
            WHERE PURC_CONT_B_ID = #purc_cont_b_id#
        ) A
        WHERE T.ABDOCU_T_NO = A.ABDOCU_T_NO 
        GROUP BY TR_CD
	</select>
	
	<select id="AcG20ExGw.selectPurcContPay_T2" parameterClass="abdocu_B" resultClass="abdocu_T">
	    /* AcG20ExGw.selectPurcContPay_T2 */
		SELECT
	                #abdocu_no# AS ABDOCU_NO, #abdocu_b_no# AS ABDOCU_B_NO, neos.nextval('abdocuTNo') AS ABDOCU_T_NO, #abdocu_no_reffer# AS ABDOCU_NO_REFFER
	              , ERP_CO_CD
	              , BTR_NM, BTR_CD, BA_NB, ATTR_NM
	              , JIRO_NM, JIRO_CD, TEL, ADDR, PPL_NB, DEPOSITOR
 	              , ITEM_NM
                  , IFNULL(ITEM_CNT,0) AS ITEM_CNT
                  , IFNULL(ITEM_AM,0) AS ITEM_AM
                  , TAX_DT, RMK_DC
                  , IFNULL(UNIT_AM,0) AS UNIT_AM
                  , IFNULL(SUP_AM,0) AS SUP_AM
                  , IFNULL(VAT_AM,0) AS VAT_AM
                  , IFNULL(NDEP_AM,0) AS NDEP_AM
                  , IFNULL(INAD_AM,0) AS INAD_AM
                  , IFNULL(INTX_AM,0) AS INTX_AM
                  , IFNULL(RSTX_AM,0) AS RSTX_AM
                  , IFNULL(WD_AM,0) AS WD_AM
	              , ETCRVRS_YM, ETCDIV_CD, ETCDUMMY1, ET_YN
	              , IT_USE_NO, IT_USE_DT, IT_CARD_NO
	              , ISS_SQ, ISS_DT, BK_SQ, BANK_SQ, BANK_DT, EDIT_PROC
	              , TRAN_CD, REF_ABIN_LN_NO, LINK_TYPE
	              , CTR_NM, CTR_CD, CTR_APPDT
	              , CMS_NAME, CHAIN_NAME, TR_FG, TR_FG_NM
	              , EMP_NM, TRCHARGE_EMP				
	              , A.PURC_CONT_T_ID
	              , A.TR_NM
	              , IFNULL(A.TR_CD,'') AS TR_CD
	              , A.CEO_NM, A.REG_NB
        FROM   
        (
            SELECT * FROM NEOS.G20_ABDOCU_T
            WHERE       ABDOCU_NO = #abdocu_no_reffer#
            AND         ABDOCU_B_NO     = #abdocu_b_no_reffer#
            ORDER BY ABDOCU_T_NO
        ) T 
        ,(
			SELECT ABDOCU_T_NO, PURC_CONT_T_ID, TR_CD, TR_NM, CEO_NM, REG_NB
			FROM dj_PURC_CONT_T
            WHERE PURC_CONT_B_ID = #purc_cont_b_id#
        ) A
        WHERE T.ABDOCU_T_NO = A.ABDOCU_T_NO 
	</select>
	
	<select id="AcG20ExGw.getPurcContPayParam" parameterClass="abdocu_H" resultClass="egovMap">
		/*AcG20ExGw.getPurcContPayParam*/
		SELECT DISTINCT C.ABDOCU_NO AS ABDOCU_NO_REFFER, C.ERP_CO_CD, C.MGT_CD, D.PURC_REQ_TYPE_CODE_ID, A.TR_CD, D.PURC_REQ_ID, B.PURC_REQ_H_ID, #purc_cont_id# AS PURC_CONT_ID
				, A.CONT_DATE, A.CONT_DATE2
				, (SELECT ERP_EMP_NUM FROM NEOS.V_USER_INFO WHERE MAIN_DEPT_YN = 'Y' AND MAIN_COMP_YN = 'Y' AND D.REQUESTER_EMP_SEQ = EMP_SEQ) AS ERP_EMP_CD
				, (SELECT EMP_NAME FROM NEOS.V_USER_INFO WHERE MAIN_DEPT_YN = 'Y' AND MAIN_COMP_YN = 'Y' AND D.REQUESTER_EMP_SEQ = EMP_SEQ) AS ERP_EMP_NM
				, D.REG_DATE
				, (SELECT INSP_DATE FROM DJ_PURC_CONT_INSP WHERE PURC_CONT_ID = #purc_cont_id# AND C_DIKEYCODE IS NOT NULL AND INSP_STATE = '003' ORDER BY INSP_DATE DESC LIMIT 1) AS INSP_DATE
        FROM 
			(
				SELECT A.ABDOCU_B_NO, A.APPLY_AM, A.PURC_CONT_ID, A.PURC_CONT_B_ID, A.PURC_REQ_H_ID, B.TR_CD, B.CONT_DATE, B.CONT_DATE2
				FROM dj_PURC_CONT_B A,
				(
					SELECT *
					FROM dj_PURC_CONT
					WHERE (PURC_CONT_ID = #purc_cont_id# OR PURC_CONT_ID_ORG = #purc_cont_id#)
					AND ACTIVE = 'Y'
					ORDER BY MOD_ORDER_NO DESC, PURC_CONT_ID
					LIMIT 1 
				) B
				WHERE A.PURC_CONT_ID = B.PURC_CONT_ID
			) A
			, dj_PURC_REQ_H B, NEOS.G20_ABDOCU_H C, dj_PURC_REQ D
        WHERE A.PURC_REQ_H_ID = B.PURC_REQ_H_ID
        AND B.ABDOCU_NO = C.ABDOCU_NO
        AND B.PURC_REQ_ID = D.PURC_REQ_ID
        AND C.ABDOCU_NO = #abdocu_no_reffer#
        LIMIT 1
	</select>
	
	<update id="AcG20ExGw.updateContPayTradeInfo" parameterClass="Map">
		/*AcG20ExGw.updateContPayTradeInfo*/
		UPDATE NEOS.G20_ABDOCU_T
		SET
			TR_CD = #TR_CD#
			,TR_NM = #TR_NM#
			,TR_FG = #TR_FG#
			,TR_FG_NM = #TR_FG_NM#
			,ATTR_NM = #ATTR_NM#
			,REG_NB = #REG_NB#
			,PPL_NB = #PPL_NB#
			,DEPOSITOR = #DEPOSITOR#
			,CEO_NM = #CEO_NM#
			,JIRO_CD = #JIRO_CD#
			,JIRO_NM = #JIRO_NM#
			,BA_NB = #BA_NB#
			,ADDR = #ADDR#
			,TRCHARGE_EMP = #TRCHARGE_EMP#
			,TEL = #TEL#
		WHERE ABDOCU_NO = #abdocu_no#
		<isNotEmpty property="abdocu neos.T_no">
		AND ABDOCU_T_NO = #abdocu neos.T_no#
		</isNotEmpty>
	</update>
	
	<insert id="AcG20ExGw.insertPurcContPay" parameterClass="Map">
		/*AcG20ExGw.insertPurcContPay*/
		INSERT INTO dj_PURC_CONT_PAY
		(
			PURC_CONT_ID,
			PURC_REQ_ID,
			PURC_REQ_H_ID,
			ABDOCU_NO,
			WRITE_EMP_SEQ,
			WRITE_EMP_IP,
			WRITE_DATE
		)
		VALUES
		(
			#purcContId#,
			#purcReqId#,
			#purcReqHId#,
			#abdocuNo#,
			#empSeq#,
			#empIp#,
			NOW()
		)
		<selectKey keyProperty="purcContPayId" resultClass="String">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<insert id="AcG20ExGw.insertPurcContPayB" parameterClass="Map">
		/*AcG20ExGw.insertPurcContPayB*/
		INSERT INTO dj_PURC_CONT_PAY_B
		(
			PURC_CONT_PAY_ID,
			PURC_CONT_B_ID,
			ABDOCU_B_NO
		)
		VALUES
		(
			#purcContPayId#,
			#purcContBId#,
			#abdocuBNo#
		)
		<selectKey keyProperty="purcContPayBId" resultClass="String">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<insert id="AcG20ExGw.insertPurcContPayT" parameterClass="Map">
		/*AcG20ExGw.insertPurcContPayT*/
		INSERT INTO dj_PURC_CONT_PAY_T
		(
			PURC_CONT_PAY_B_ID,
			PURC_CONT_PAY_ID,
			PURC_CONT_T_ID,
			ABDOCU_T_NO
		)
		VALUES
		(
			#purcContPayBId#,
			#purcContPayId#,
			#purcContTId#,
			#abdocuTNo#
		)
		<selectKey keyProperty="purcContPayTId" resultClass="String">
			SELECT LAST_INSERT_ID()
	  	</selectKey>
	</insert>
	
	<update id="AcG20ExGw.updatePurcContPay" parameterClass="Map">
		/*AcG20ExGw.updatePurcContPay*/
		UPDATE dj_PURC_CONT_PAY
		SET
			PAYMENT_TYPE = #paymentType#,
			PAYMENT_TYPE_CODE_ID = #paymentTypeCodeId#,
			PAYMENT_CNT = #paymentCnt#
		WHERE PURC_CONT_PAY_ID = #purcContPayId#
	</update>
	
	<select id="AcG20ExGw.getPurcContPay" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.getPurcContPay*/
		SELECT * 
		FROM dj_PURC_CONT_PAY
		WHERE PURC_CONT_PAY_ID = #purcContPayId#
	</select>
	
	<update id="AcG20ExGw.purcContPayComplete" parameterClass="Map">
		/*AcG20ExGw.purcContPayComplete*/
		UPDATE NEOS.G20_ABDOCU_T A,
		(
			SELECT A.ABDOCU_T_NO, IFNULL(SUM(C.UNIT_AM),0) AS UNIT_AM, IFNULL(SUM(C.SUP_AM),0) AS SUP_AM, IFNULL(SUM(C.VAT_AM),0) AS VAT_AM
			FROM dj_PURC_CONT_T A
			LEFT OUTER JOIN dj_PURC_CONT_PAY_T B
			ON A.PURC_CONT_T_ID = B.PURC_CONT_T_ID
			LEFT OUTER JOIN NEOS.G20_ABDOCU_T C
			ON B.ABDOCU_T_NO = C.ABDOCU_T_NO
			LEFT OUTER JOIN dj_PURC_CONT_PAY D
			ON B.PURC_CONT_PAY_ID = D.PURC_CONT_PAY_ID
			AND D.C_DIKEYCODE IS NOT NULL
			AND D.DOC_STATE IN ('001','003')
			WHERE (D.PURC_CONT_ID = #purcContId# OR A.PURC_CONT_ID = #purcContId#)
			GROUP BY A.ABDOCU_T_NO
		) B
		SET A.UNIT_AM = B.UNIT_AM
			,A.SUP_AM = B.SUP_AM
		    ,A.VAT_AM = B.VAT_AM
		WHERE A.ABDOCU_T_NO = B.ABDOCU_T_NO
	</update>
	
	<select id="AcG20ExGw.checkPurcContPayComplete" parameterClass="Map" resultClass="Integer">
		/*AcG20ExGw.checkPurcContPayComplete*/
		SELECT COUNT(PURC_CONT_PAY_ID) AS APPRO_CNT
		FROM dj_PURC_CONT_PAY
		WHERE C_DIKEYCODE IS NOT NULL
		AND DOC_STATE IN ('001')
		AND PURC_CONT_ID = #purcContId#
	</select>

	<update id="AcG20ExGw.updatePurcContPayContent" parameterClass="Map">
		/*AcG20ExGw.updatePurcContPayContent*/
		UPDATE dj_PURC_CONT_PAY
		SET CONTENTS = #contentsStr#
		WHERE PURC_CONT_PAY_ID = #purcContPayId#
	</update>
	
	<select id="AcG20ExGw.getContPay" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.getContPay*/
		SELECT * FROM dj_PURC_CONT_PAY WHERE PURC_CONT_PAY_ID = #purcContPayId#
	</select>
	
	<select id="AcG20ExGw.getAbdocuH" parameterClass="Map" resultClass="abdocu_H">
		/*AcG20ExGw.getAbdocuH*/
		SELECT * FROM NEOS.G20_ABDOCU_H WHERE ABDOCU_NO = #abdocuNo#
	</select>
	
	<select id="AcG20ExGw.getAbdocuB" parameterClass="Map" resultClass="abdocu_B">
		/*AcG20ExGw.getAbdocuB*/
		SELECT * FROM NEOS.G20_ABDOCU_B WHERE ABDOCU_NO = #abdocuNo#
	</select>
	
	<select id="AcG20ExGw.getAbdocuT" parameterClass="Map" resultClass="abdocu_T">
		/*AcG20ExGw.getAbdocuT*/
		SELECT * FROM NEOS.G20_ABDOCU_T WHERE ABDOCU_NO = #abdocuNo#
	</select>
	
	<select id="AcG20ExGw.purcItemListData" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.purcItemListData*/
		SELECT 
			B.ITEM_TYPE,
		    B.ITEM_TYPE_CODE_ID,
		    B.ITEM_NM,
		    B.STANDARD,
		    B.REMARK,
		    A.REQ_STATE,
		    B.PURC_CONT_T_ID,
		    CASE
				WHEN A.cont_type_code_id = '004' THEN B.ITEM_CNT
		        ELSE C.ITEM_CNT
			END AS ITEM_CNT,
		    CASE
				WHEN A.cont_type_code_id = '004' THEN B.ITEM_AM
		        ELSE C.ITEM_AM
			END AS ITEM_AM,
		    CASE
				WHEN A.cont_type_code_id = '004' THEN B.UNIT_AM
		        ELSE C.UNIT_AM
			END AS UNIT_AM,
		    CASE
				WHEN A.cont_type_code_id = '004' THEN B.SUP_AM
		        ELSE C.SUP_AM
			END AS SUP_AM,
		    CASE
				WHEN A.cont_type_code_id = '004' THEN B.VAT_AM
		        ELSE C.VAT_AM
			END AS VAT_AM,
			A.REQUESTER_EMP_SEQ,
		    (SELECT EMP_NAME FROM NEOS.V_USER_INFO WHERE MAIN_DEPT_YN = 'Y' AND EMP_SEQ = A.REQUESTER_EMP_SEQ LIMIT 1) AS REQUESTER_EMP_NAME,
		    A.REQUESTER_DEPT_NAME,
		    D.CONT_TITLE,
		    (SELECT C_RIDOCFULLNUM FROM NEOS.A_RECORDINFO WHERE C_DIKEYCODE = D.C_DIKEYCODE LIMIT 1) AS DOC_NUM,
		    D.PURC_CONT_ID,
		    D.C_DIKEYCODE,
		    A.PURC_REQ_ID,
		    A.FORM_ID,
		    A.PURC_REQ_TYPE_CODE_ID,
		    D.TR_NM,
            CASE
				WHEN A.CONT_TYPE_CODE_ID = '004' THEN A.REG_DATE
				ELSE C.DELIVERY_DATE
			END AS DELIVERY_DATE
		FROM dj_PURC_REQ A, dj_PURC_CONT_T B
		JOIN DJ_PURC_CONT D
    	ON B.PURC_CONT_ID = D.PURC_CONT_ID
		left outer join
	    (
		    SELECT 
		        PURC_CONT_T_ID,
		            SUM(ITEM_CNT) AS ITEM_CNT,
		            SUM(ITEM_AM) AS ITEM_AM,
		            SUM(UNIT_AM) AS UNIT_AM,
		            SUM(SUP_AM) AS SUP_AM,
		            SUM(VAT_AM) AS VAT_AM,
		            MAX(INSP_STATE) AS INSP_STATE,
		            MAX(INSP_DATE) AS INSP_DATE,
		            MAX(DELIVERY_DATE) AS DELIVERY_DATE
			FROM
		        dj_PURC_CONT_INSP A, dj_PURC_CONT_INSP_T B
		    WHERE
		        A.PURC_CONT_INSP_ID = B.PURC_CONT_INSP_ID
			AND INSP_STATE = '003'
		    GROUP BY B.PURC_CONT_T_ID
		) C
	    on B.PURC_CONT_T_ID = C.PURC_CONT_T_ID
		WHERE A.PURC_REQ_ID = B.PURC_REQ_ID
		AND B.PURC_TR_TYPE = '002'
		AND 
        (
			(
				A.cont_type_code_id != '004'
				AND C.INSP_STATE = '003'
				AND C.INSP_DATE <![CDATA[>=]]> #frDt#
				AND C.INSP_DATE <![CDATA[<=]]> #toDt#
			)
            OR
            (
				A.cont_type_code_id = '004'
                AND A.req_state in ('007', '008', '009')
                AND A.REG_DATE <![CDATA[>=]]> #frDt#
				AND A.REG_DATE <![CDATA[<=]]> #toDt#
            )
        )
		<isNotEmpty property="trNm">
		AND D.TR_NM LIKE CONCAT('%', #trNm#, '%')
		</isNotEmpty>
		<isNotEmpty property="purcContId">
		AND B.PURC_CONT_ID = #purcContId#
		</isNotEmpty>
		<isNotEmpty property="deptCd">
		AND A.PURC_REQ_DEPT_SEQ = #deptCd#
		</isNotEmpty>
		<isNotEmpty property="userSeq">
		AND A.REQUESTER_EMP_SEQ = #userSeq#
		</isNotEmpty>
		<isNotEmpty property="itemType">
		AND B.ITEM_TYPE_CODE_ID = #itemType#
		</isNotEmpty>
		ORDER BY B.PURC_REQ_ID DESC, PURC_CONT_T_ID
        LIMIT   $skip$ , $pageSize$
	</select>
	
	<select id="AcG20ExGw.purcItemListDataTotal" parameterClass="Map" resultClass="String">
		/*AcG20ExGw.purcItemListDataTotal*/
		SELECT 
			COUNT(*)
		FROM dj_PURC_REQ A, dj_PURC_CONT_T B
		JOIN DJ_PURC_CONT D
    	ON B.PURC_CONT_ID = D.PURC_CONT_ID
		left outer join
	    (
		    SELECT 
		        PURC_CONT_T_ID,
		            SUM(ITEM_CNT) AS ITEM_CNT,
		            SUM(ITEM_AM) AS ITEM_AM,
		            SUM(UNIT_AM) AS UNIT_AM,
		            SUM(SUP_AM) AS SUP_AM,
		            SUM(VAT_AM) AS VAT_AM,
		            MAX(INSP_STATE) AS INSP_STATE,
		            MAX(INSP_DATE) AS INSP_DATE,
		            MAX(DELIVERY_DATE) AS DELIVERY_DATE
			FROM
		        dj_PURC_CONT_INSP A, dj_PURC_CONT_INSP_T B
		    WHERE
		        A.PURC_CONT_INSP_ID = B.PURC_CONT_INSP_ID
			AND INSP_STATE = '003'
		    GROUP BY B.PURC_CONT_T_ID
		) C
	    on B.PURC_CONT_T_ID = C.PURC_CONT_T_ID
		WHERE A.PURC_REQ_ID = B.PURC_REQ_ID
		AND B.PURC_TR_TYPE = '002'
		AND 
        (
			(
				A.cont_type_code_id != '004'
				AND C.INSP_STATE = '003'
				AND C.INSP_DATE <![CDATA[>=]]> #frDt#
				AND C.INSP_DATE <![CDATA[<=]]> #toDt#
			)
            OR
            (
				A.cont_type_code_id = '004'
                AND A.req_state in ('007', '008', '009')
                AND A.REG_DATE <![CDATA[>=]]> #frDt#
				AND A.REG_DATE <![CDATA[<=]]> #toDt#
            )
        )
		<isNotEmpty property="trNm">
		AND D.TR_NM LIKE CONCAT('%', #trNm#, '%')
		</isNotEmpty>
		<isNotEmpty property="purcContId">
		AND B.PURC_CONT_ID = #purcContId#
		</isNotEmpty>
		<isNotEmpty property="deptCd">
		AND A.PURC_REQ_DEPT_SEQ = #deptCd#
		</isNotEmpty>
		<isNotEmpty property="userSeq">
		AND A.REQUESTER_EMP_SEQ = #userSeq#
		</isNotEmpty>
		<isNotEmpty property="itemType">
		AND B.ITEM_TYPE_CODE_ID = #itemType#
		</isNotEmpty>
	</select>
	
	<update id="AcG20ExGw.updateItemType" parameterClass="Map">
		/*AcG20ExGw.updateItemType*/
		UPDATE dj_PURC_CONT_T
		SET 
			ITEM_TYPE = #itemType#,
			ITEM_TYPE_CODE_ID = #itemTypeCodeId#
		WHERE PURC_CONT_T_ID = #purcContTId#
	</update>
	
	<select id="AcG20ExGw.getContPopupListData" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.getContPopupListData*/
		SELECT * 
		FROM dj_purc_CONT
		WHERE C_DIKEYCODE IS NOT NULL
		AND CONT_STEP > '003'
		<isNotEmpty property="contTitle">
		AND CONT_TITLE LIKE CONCAT('%', #contTitle#, '%')
		</isNotEmpty>
		ORDER BY PURC_CONT_ID DESC
		LIMIT   $skip$ , $pageSize$
	</select>
	
	<select id="AcG20ExGw.getContPopupListDataTotal" parameterClass="Map" resultClass="String">
		/*AcG20ExGw.getContPopupListDataTotal*/
		SELECT COUNT(*)
		FROM dj_purc_CONT
		WHERE C_DIKEYCODE IS NOT NULL
		AND CONT_STEP > '003'
		<isNotEmpty property="contTitle">
		AND CONT_TITLE LIKE CONCAT('%', #contTitle#, '%')
		</isNotEmpty>
	</select>
	
	<select id="AcG20ExGw.getPurcReqBNextAm" parameterClass="abdocu_T" resultClass="String">
		/*AcG20ExGw.getPurcReqBNextAm*/
		SELECT NEXT_AM
		FROM dj_PURC_REQ_B
		WHERE PURC_REQ_B_ID = #purc_req_b_id#
	</select>
	
	<select id="AcG20ExGw.getRefDoc" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.getRefDoc*/
		SELECT
			A.C_DIKEYCODE,
			A.C_RIDOCFULLNUM AS C_DOCNUMBER,
		    B.C_DITITLE,
		    DATE_FORMAT(SUBSTR(A.C_RIREGDATE,1,8),'%Y-%m-%d') AS C_RIREGYMD, 
		    (SELECT neos.FN_GetMultiLang('kr', EMP_NAME_MULTI) FROM neos.V_T_CO_EMP_MULTI WHERE EMP_SEQ = C_RIOWNUSERKEY) AS USER_NM
		FROM NEOS.A_RECORDINFO A, NEOS.A_DOCINFO B
		WHERE A.C_DIKEYCODE = B.C_DIKEYCODE
		AND A.C_RIKIND > ' '
		AND A.C_RIRETURNFLAG > ' '
		AND A.C_RIREGDATE > ' '
		AND A.C_RIDOCNUM > ' '
		AND A.C_RIDELETEOPT IS NULL
<!-- 		AND (  ( B.C_DISECRETGRADE  = '009' AND EXISTS (SELECT 1 FROM NEOS.A_KYULJAELINEINFO WHERE C_DIKEYCODE = A.C_DIKEYCODE AND C_KLORGCODE = #deptCd# )    )  -->
<!-- 			OR A.C_RIOWNORGCODE  = #deptCd#) -->
		AND A.C_RIREGDATE >=  CONCAT(#frDt# , '000000000')
		AND A.C_RIREGDATE <![CDATA[<=]]> CONCAT(#toDt# , '999999999')
	</select>
	
	<select id="AcG20ExGw.getBgtBottomDetp" parameterClass="HashMap" resultClass="HashMap">
		/*AcG20ExGw.getBgtBottomDetp*/
		SELECT B.DEPT_NAME, B.DEPT_SEQ, A.BOTTOM_CD
	    FROM T_BGT_BOTTOM_DEPT A, neos.T_CO_DEPT_MULTI B
	    WHERE A.DEPT_SEQ = B.DEPT_SEQ
	    AND LANG_CODE = 'kr'
	</select>
	
	<update id="AcG20ExGw.updateTradeInfo" parameterClass="HashMap">
		/*AcG20ExGw.updateTradeInfo*/
		UPDATE NEOS.G20_ABDOCU_H
		SET
			BTR_CD = #TR_CD#,
			BTR_NM = #ATTR_NM#,
			BTR_NB = #BA_NB#
		WHERE ABDOCU_NO = #abdocuNo#
	</update>
	
	<update id="AcG20ExGw.updatePurcCont_basicAm" parameterClass="abdocu_T">
		/*AcG20ExGw.updatePurcCont_basicAm*/
		UPDATE dj_PURC_CONT
	    SET		BASIC_AM = (SELECT SUM(IFNULL(APPLY_AM,0) + IFNULL(NEXT_AM,0)) FROM dj_PURC_CONT_B WHERE PURC_CONT_ID = #purc_cont_id#)
	    WHERE PURC_CONT_ID = #purc_cont_id#
	</update>
	
	<update id="AcG20ExGw.updatePurcReqRequester" parameterClass="Map">
		/*AcG20ExGw.updatePurcReqRequester*/
		UPDATE dj_PURC_REQ
	    SET		requester_emp_seq	= #requester_emp_seq#
	    		, requester_dept_name	= #requester_dept_name#
	    		, requester_position		= #requester_position#
	    		, requester_duty			= #requester_duty#
	    		, tr_place 					= #tr_place#
	    WHERE purc_req_id = #purcReqId#
	</update>
	
	<select id="AcG20ExGw.getMainGrid" parameterClass="Map" resultClass="HashMap">
		/*AcG20ExGw.getMainGrid*/
		SELECT dpr.purc_req_id
			 , dpc.purc_cont_id
			 , dpc.c_dikeycode
			 , SUBSTR(dpr.purc_req_type, 1, 2) AS purc_req_type
			 , dpr.purc_req_type_code_id
    		 , dpr.form_id
		     , ar.c_ridocfullnum
		     , dpc.cont_title
		     , (
				SELECT emp_name
		        FROM v_emp_info
		        WHERE emp_seq = dpr.requester_emp_seq
		     ) AS requester_emp_name
		     , (
				SELECT SUBSTR(dept_name, 1, 2)
		        FROM v_emp_info
		        WHERE emp_seq = dpr.requester_emp_seq
		     ) AS requester_dept_name
			 , gah.mgt_nm 
		     , dpc.tr_nm
		     , CASE WHEN dpc.reg_nb != '' THEN 
				CONCAT(SUBSTR(dpc.reg_nb, 1, 3), '-', SUBSTR(dpc.reg_nb, 4, 2), '-', SUBSTR(dpc.reg_nb, 6, 5))
			 ELSE ''
		     END AS reg_nb
		     , (
				SELECT code_kr
		        FROM common_code
		        WHERE GROUP_CODE = 'TR_PLACE'
					AND CODE = dpr.tr_place
		     ) AS tr_place
		     , dpr.purc_req_date
		     <![CDATA[
		     , FORMAT(
		     	CASE
					WHEN dpr.cont_type_code_id = '002' THEN dpr.basic_am
			        ELSE dpc.basic_am
				END, 0) AS basic_am
			 ]]>
		     , CASE WHEN dpr.cont_type_code_id > '001' THEN CONCAT(dpr.cont_type, '계약')
		     ELSE dpr.cont_type
		     END AS cont_type
		     , CASE WHEN dpc.cont_date2 IS NOT NULL THEN dpc.cont_date2
		     ELSE dpc.cont_date
		     END AS cont_date
		     , FORMAT(dpc.cont_am, 0) AS cont_am
		     , CONCAT(TRUNCATE(dpc.cont_am /
		     	<![CDATA[
		     	CASE
					WHEN dpr.cont_type_code_id = '002' THEN dpr.basic_am
			        ELSE dpc.basic_am
				END
				]]>
			 	* 100, 3), '%') AS rate
		     , CASE WHEN dpc.cont_start_date2 IS NOT NULL THEN dpc.cont_start_date2
		     ELSE dpc.cont_start_date
		     END AS cont_start_date
		     , CASE 
				WHEN dpc.cont_end_date2 IS NOT NULL THEN dpc.cont_end_date2
				WHEN dpc.cont_end_date IS NOT NULL THEN dpc.cont_end_date
				ELSE 
					CASE
						WHEN dpc.cont_date2 IS NOT NULL THEN DATE_ADD(dpc.cont_date2, INTERVAL dpc.cont_term DAY)
		                ELSE DATE_ADD(dpc.cont_date, INTERVAL dpc.cont_term DAY)
					END
		     END AS cont_end_date 
		     , MAX(dpci.insp_date) AS insp_date
		FROM dj_purc_req dpr
			INNER JOIN dj_purc_req_h dprh
				ON dpr.purc_req_id = dprh.purc_req_id
			INNER JOIN dj_purc_cont dpc
				ON dpr.purc_req_id = dpc.purc_req_id
			LEFT JOIN dj_purc_cont_insp dpci
				ON dpc.purc_cont_id = dpci.purc_cont_id
		        AND dpci.active = 'Y'
		        AND dpci.insp_state = '003'
			INNER JOIN neos.a_recordinfo ar
				ON dpc.c_dikeycode = ar.c_dikeycode
			INNER JOIN neos.g20_abdocu_h gah
				ON dprh.abdocu_no = gah.abdocu_no
		WHERE dpr.active = 'Y' AND dpc.active = 'Y' AND dprh.active = 'Y' 
			AND DATE_FORMAT(dpc.cont_date, '%Y') = #searchDt#
			AND dpc.c_dikeycode IS NOT NULL
		<isNotEmpty property="txtContTitle">
			AND CONT_TITLE LIKE CONCAT('%', #txtContTitle#, '%')
		</isNotEmpty>
		<isNotEmpty property="userSeq">
			AND requester_emp_seq = #userSeq#
		</isNotEmpty>
		GROUP BY dpc.purc_cont_id
		LIMIT $skip$, $pageSize$
	</select>
	
	<select id="AcG20ExGw.getMainGridTotal" parameterClass="Map" resultClass="int">
		/*AcG20ExGw.getMainGridTotal*/
		SELECT COUNT(1) 
		FROM (
			SELECT dpr.purc_req_id
			     , MAX(dpci.insp_date) AS insp_date
			FROM dj_purc_req dpr
				INNER JOIN dj_purc_req_h dprh
					ON dpr.purc_req_id = dprh.purc_req_id
				INNER JOIN dj_purc_cont dpc
					ON dpr.purc_req_id = dpc.purc_req_id
				LEFT JOIN dj_purc_cont_insp dpci
					ON dpc.purc_cont_id = dpci.purc_cont_id
			        AND dpci.active = 'Y'
			        AND dpci.insp_state = '003'
				INNER JOIN neos.a_recordinfo ar
					ON dpc.c_dikeycode = ar.c_dikeycode
				INNER JOIN neos.g20_abdocu_h gah
					ON dprh.abdocu_no = gah.abdocu_no
			WHERE dpr.active = 'Y' AND dpc.active = 'Y' AND dprh.active = 'Y' 
				AND DATE_FORMAT(dpc.cont_date, '%Y') = #searchDt#
				AND dpc.c_dikeycode IS NOT NULL
		<isNotEmpty property="txtContTitle">
			AND CONT_TITLE LIKE CONCAT('%', #txtContTitle#, '%')
		</isNotEmpty>
		<isNotEmpty property="userSeq">
			AND requester_emp_seq = #userSeq#
		</isNotEmpty>
			GROUP BY dpc.purc_cont_id
		) CNT
	</select>
	
	<select id="AcG20ExGw.getTradeCnt" resultClass="int">
		/*AcG20ExGw.getTradeCnt*/
		select count(*) from neos.g20_abdocu_t where abdocu_b_no = #abdocu_b_no#
	</select>
	
	<update id="AcG20ExGw.updateContTrInfo" parameterClass="Map">
		/*AcG20ExGw.updateContTrInfo*/
		update dj_purc_cont_t
		set tr_cd = #trCd#,
			tr_nm = #trNm#,
			reg_nb = #regNb#,
			ceo_nm = #ceoNm#
		where purc_cont_id = #purcContId#
	</update>
	
	<insert id="AcG20ExGw.insertAddTr" parameterClass="Map">
		/*AcG20ExGw.insertAddTr*/
		insert into dj_purc_cont_add_tr
		values(#purcContId#, #trCd#, #trNm#)
		on duplicate key update tr_nm = #trNm#
	</insert>
	
	<delete id="AcG20ExGw.deleteAddTr" parameterClass="Map">
		/*AcG20ExGw.deleteAddTr*/
		delete from dj_purc_cont_add_tr
		where purc_cont_id = #purcContId#
		<isNotEmpty property="trCd">
		and tr_cd = #trCd#
		</isNotEmpty>
	</delete>
	
	<select id="AcG20ExGw.purcContAddTr" parameterClass="Map" resultClass="egovMap">
		/*AcG20ExGw.purcContAddTr*/
		select * from dj_purc_cont_add_tr where purc_cont_id = #purcContId#
	</select>
	
	<insert id="AcG20ExGw.makeContModAddTr" parameterClass="Map">
		/*AcG20ExGw.makeContModAddTr*/
		INSERT INTO
		dj_purc_cont_add_tr
		(
			PURC_CONT_ID   ,
			TR_CD		   ,
			TR_NM		   
		)
		SELECT
			#purcContModId#  ,
			A.TR_CD		   	 ,
			A.TR_NM			 
		FROM 
			dj_purc_cont_add_tr A
		WHERE A.PURC_CONT_ID = #purcContId#
	</insert>
	
	<select id="AcG20ExGw.getPurcContIdOrg" parameterClass="Map" resultClass="Integer">
		/*AcG20ExGw.getPurcContIdOrg*/
		SELECT purc_cont_id FROM dj_PURC_CONT
		WHERE ACTIVE = 'Y'
        AND (PURC_CONT_ID = #purcContIdOrg# OR PURC_CONT_ID_ORG = #purcContIdOrg#) 
		AND PURC_CONT_ID != #purcContId#
		ORDER BY MOD_ORDER_NO DESC, PURC_CONT_ID 
		LIMIT 1
	</select>
	
	<update id="AcG20ExGw.completePurcContModB" parameterClass="Map">
		/*AcG20ExGw.completePurcContModB*/
		UPDATE 
			dj_PURC_CONT_B
		SET 
			ACTIVE = 'Y'
		WHERE PURC_CONT_ID = #purcContId#
	</update>
	
	<update id="AcG20ExGw.completePurcContModT" parameterClass="Map">
		/*AcG20ExGw.completePurcContModT*/
		UPDATE 
			dj_PURC_CONT_T
		SET 
			ACTIVE = 'Y'
		WHERE PURC_CONT_ID = #purcContId#
	</update>
</sqlMap>