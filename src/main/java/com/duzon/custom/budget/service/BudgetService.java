package com.duzon.custom.budget.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.google.gson.JsonElement;

import ac.cmm.vo.ConnectionVO;

public interface BudgetService {
	List<Map<String, Object>> getErpDivList(ConnectionVO conVo, Map<String, Object> map);
	List<Map<String, Object>> getErpPjtList(ConnectionVO conVo, Map<String, Object> map);
	List<Map<String, Object>> getErpBtmList(ConnectionVO conVo, Map<String, Object> map);
	List<Map<String, Object>> getBudgetDataList(ConnectionVO conVo, Map<String, Object> map);
	List<Map<String, Object>> mapPjtBtmList(ConnectionVO conVo, Map<String, Object> map);
	List<Map<String, Object>> mapBgtInfoList(ConnectionVO conVo, Map<String, Object> map);
	List<Map<String, Object>> pjtInfoList(ConnectionVO conVo, Map<String, Object> map);
	Map<String, Object> getBtmDeptInfo(Map<String, Object> map);
	Map<String, Object> getPreBudgetInfo(Map<String, Object> map);
	Map<String, Object> getDeptInfo(Map<String, Object> map);
	void saveDept(Map<String, Object> map);
	void setBudgetList(List<Map<String, Object>> map);
	List<Map<String, Object>> getBudgetDataList2(ConnectionVO conVo, Map<String, Object> map);
	Map<String, Object> getPreBudgetInfo2(Map<String, Object> map);
	Map<String, Object> comboList(Map<String, Object> map);
	Map<String, Object> caseActList(Map<String, Object> map);
	Map<String, Object> caseActDetailList(Map<String, Object> map);
	List<Map<String, Object>> causeActDocSearch(Map<String, Object> map);
	Map<String, Object> ledgerComboList(Map<String, Object> map);
	Map<String, Object> ledgerComboList2(Map<String, Object> map);
	Map<String, Object> resolutionDeptComboList(Map<String, Object> map);
	Map<String, Object> ledgerList(Map<String, Object> map);
	Map<String, Object> accountLedgerList(Map<String, Object> map);
	Map<String, Object> generalAccountLedgerList(Map<String, Object> map);
	Map<String, Object> accountingComboList(Map<String, Object> map);
	Map<String, Object> caseActDetailList2(Map<String, Object> map);
	Map<String, Object> getVoucher(Map<String, Object> map);
	List<Map<String, Object>> getVoucherDetail(Map<String, Object> map);
	Map<String, Object> getResolutionAdocm(Map<String, Object> map);
	List<Map<String, Object>> getResolutionAdocb(Map<String, Object> map);
	List<Map<String, Object>> getResolutionAdoct(Map<String, Object> map);
	List<Map<String, Object>> getAccountTitleList(Map<String, Object> map);
	List<Map<String, Object>> getCustomerList(Map<String, Object> map);
	List<Map<String, Object>> purchaseLedgerList(Map<String, Object> map);
	List<Map<String, Object>> salesLedgerList(Map<String, Object> map);
	List<Map<String, Object>> IndividualExpenditureResolutionList(Map<String, Object> map);
	List<Map<String, Object>> expenditureResolutionStatusList(Map<String, Object> map);
	String getOneErpEmpNum(Map<String, Object> map); 
	void amoutGoodsList(Map<String, Object> map);
	List<Map<String, Object>> projectPreparationList(Map<String, Object> map);
	List<Map<String, Object>> projectList(Map<String, Object> map);
	List<Map<String, Object>> projectList2(Map<String, Object> map);
	List<Map<String, Object>> projectList3(Map<String, Object> map);
	List<Map<String, Object>> budgetListAjax(Map<String, Object> map);
	List<Map<String, Object>> mokListAjax(Map<String, Object> map);
	List<Map<String, Object>> getResDocSubmitList(Map<String, Object> map);
	String resDocSubmit(Map<String, Object> map);
	String updateUseYn(Map<String, Object> map);
	List<Map<String, Object>> getResDocSubmitAdminList(Map<String, Object> map);
	List<Map<String, Object>> getAdocuList(Map<String, Object> map);
	List<Map<String, Object>> getErpDept(String coCd);
	Object getErpEmpList(Map<String, Object> map);
	List<Map<String, Object>> getResDocFile(HashMap<String, Object> requestMap);
	void adocuApp(Map<String, Object> bodyMap);
	Object getAdocuInfo(Map<String, Object> map);
	List<Map<String, Object>> getParentDept(Map<String, Object> map);
	void parentDeptCancel(Map<String, Object> map);
	List<Map<String, Object>> searchDeptList(Map<String, Object> map);
	List<Map<String, Object>> searchDeptList2(Map<String, Object> map);
	void saveSelDept(Map<String, Object> map);
	void projectSetDeptCancel(Map<String, Object> map);
	List<Map<String, Object>> getProjectList(Map<String, Object> map);
	void saveProjectDept(Map<String, Object> map);
	List<Map<String, Object>> getYesilDaebi(Map<String, Object> map);
	List<Map<String, Object>> getBonbuYesilDaebi(Map<String, Object> map);
	List<Map<String, Object>> getBonbuInfo(Map<String, Object> map);
	List<Map<String, Object>> getBonbuDeptYesilDaebi(Map<String, Object> map);
	List<Map<String, Object>> getProjectDeptYeasilDaebi(Map<String, Object> map);
	List<Map<String, Object>> getBgtYeasilDaebi(Map<String, Object> map);
	void saveDeptBgt(Map<String, Object> map);
	void cancelDeptBgt(Map<String, Object> map);
	void saveDeptBgt2(Map<String, Object> map);
	List<Map<String, Object>> getApplyStatus(Map<String, Object> map);
	List<Map<String, Object>> getDeptBgtStatus(Map<String, Object> map);
	void saveDeptBgt3(Map<String, Object> map);
	void cancelDeptBgt2(Map<String, Object> map);
	List<Map<String, Object>> getDeptPjtBgt(Map<String, Object> map);
	void saveDeptPjtBgt(Map<String, Object> map);
	void cancelDeptPjtBgt(Map<String, Object> map);
	List<Map<String, Object>> getDeptPjtBgt2(Map<String, Object> map);
	List<Map<String, Object>> getDeptBgt(Map<String, Object> map);
	List<Map<String, Object>> getProjectYesilDaebi(Map<String, Object> map);
	List<Map<String, Object>> getBgtPlanGrid(Map<String, Object> map);
	void saveBgtPlan(Map<String, Object> map) throws Exception;
	void saveBgtPlan(Map<String, Object> map, MultipartHttpServletRequest multi, List<Map<String, Object>> savedFiles) throws Exception;
	void copyBgtPlan(Map<String, Object> map);
	void cancelBgtPlan(Map<String, Object> map);
	String callGetPjtBudget(Map<String, Object> map);
	void saveEndProcess(Map<String, Object> map);
	void cancelEndProcess(Map<String, Object> map);
	List<Map<String, Object>> getBudgetAttach(Map<String, Object> map);
	List<Map<String, Object>> searchDeptList3(Map<String, Object> map);
	List<Map<String, Object>> searchDeptList6(Map<String, Object> map);
	List<Map<String, Object>> getPjtStatus(Map<String, Object> map);
	List<Map<String, Object>> getBgtConfirmGrid(Map<String, Object> map);
	void confirmBgtPlan(Map<String, Object> map);
	void cancelConfirmBgtPlan(Map<String, Object> map);
	List<Map<String, Object>> selectBudgetList(Map<String, Object> map);
	List<Map<String, Object>> selectDailySchedule(Map<String, Object> map);
	public void excelDown(Map<String, Object> map, HttpServletRequest request, HttpServletResponse response);
	public void fileDown(Map<String, Object> map, HttpServletRequest request, HttpServletResponse response);
	void fileDownLoad(String fileNm, String path, HttpServletRequest request, HttpServletResponse response) throws Exception;
	Map<String, Object> getErpGwLinkInfo(Map<String, Object> paramMap) throws Exception;
	void saveHighDept(Map<String, Object> map);
	String selectBgtFinish(Map<String, Object> map);
	void saveBgtFinish(Map<String, Object> map);
	void cancelBgtFinish(Map<String, Object> map);
	List<Map<String, Object>> selectBgtPlanRecord(Map<String, Object> map);
	List<Map<String, Object>> selectBgtStatus(Map<String, Object> map);
	List<Map<String, Object>> selectPjtBgtStatus(Map<String, Object> map);
	String getDailyScheduleStatus(Map<String, Object> paramMap) throws Exception;
	void saveDailyScheduleStatus (Map<String, Object> map) throws Exception;
	void uploadBudgetFile(Map<String, Object> map, MultipartHttpServletRequest multi) throws Exception;
	void updateFile(Map<String, Object> map);
	List<Map<String, Object>> selectMonthSaupBgt(Map<String, Object> map);
	String getSumAmtByDate(Map<String, Object> map);
	String updateReturn(Map<String, Object> map);
	String getAskedEmpNm(String modifyId);
	void saveBgtPlanDept(Map<String, Object> map, MultipartHttpServletRequest multi, List<Map<String, Object>> delFiles)
			throws Exception;
}
