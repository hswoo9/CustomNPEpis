<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="AppgroupManageDAO">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
    
    <!-- 결재라인정보 -->
	<select id="AppgroupManageDAO.GetAppLine" parameterClass="HashMap" resultClass="egovMap">
	    /* AppgroupManageDAO.GetAppLine - mariaDB */
	    SELECT appline_seq
	         , neos.FN_GetLanguageName(#loginVO.langCode#, appline_name_kr, appline_name_en, appline_name_jp, appline_name_cn) AS appline_name
	         , appline_name_kr
	         , appline_name_en
	         , appline_name_jp
	         , appline_name_cn
	         , a.group_seq
	         , a.comp_seq
	         , neos.FN_GetMultiLang(#loginVO.langCode#, m.COMP_NAME_MULTI) comp_name
	         , a.use_yn
	         , neos.GET_CODE_DETAIL_Info('0','COM521',a.use_yn,  #loginVO.langCode#) AS use_yn_name
	         , a.order_num
	         , a.remark
	    FROM `neos.a_appline_info` a	
	    INNER JOIN neos.v_t_co_comp_multi m
	    ON a.group_seq = m.group_seq
	    AND a.comp_seq = m.comp_seq
	    WHERE IFNULL(delete_yn, 'N') = 'N'
	    <isNotEmpty property="compSeq">
	    AND a.comp_seq = #compSeq#
	    </isNotEmpty>
	    <isNotEmpty property="useYn">
	    AND a.use_yn = #useYn#
	    </isNotEmpty>
	    <isNotEmpty property="txtSearch">
	    AND neos.FN_GetLanguageName(#loginVO.langCode#, appline_name_kr, appline_name_en, appline_name_jp, appline_name_cn) like concat('%', #txtSearch#, '%')
	    </isNotEmpty>
	    <isNotEmpty property="applineSeq">
	    AND appline_seq = #applineSeq#
	    </isNotEmpty>		    	 
	    order by LPAD(IFNULL(a.order_num, '999999'), 10, 0), LPAD(appline_seq, 10, 0)
	</select> 
	
	<!-- 결재라인 결재자 정보 -->
    <select id="AppgroupManageDAO.GetAppLineUser" parameterClass="HashMap" resultClass="egovMap" >
	    /* AppgroupManageDAO.GetAppLineUser - mariaDB */
	    <!-- 사용자  -->
	    SELECT 
	           appline_seq
	         , super_key
	         , LINE_TYPE
	         , neos.GET_CODE_DETAIL_Info('0', 'COM093', (CASE WHEN LINE_TYPE = '002' THEN '003' ELSE LINE_TYPE END), #loginVO.langCode#) AS LINE_TYPE_NAME
	         , neos.FN_GetMultiLang(#loginVO.langCode#, COMP_NAME_MULTI) AS COMP_NAME
	         , neos.FN_GetMultiLang(#loginVO.langCode#, DEPT_NAME_MULTI) AS DEPT_NAME
	         , neos.FN_GetMultiLang(#loginVO.langCode#, EMP_NAME_MULTI) AS EMP_NAME
	         , CONCAT(neos.FN_GetMultiLang(#loginVO.langCode#, EMP_NAME_MULTI) , '(' , b.LOGIN_ID, ')') AS USER_NAME
	         , get_emp_duty_position_name(b.GROUP_SEQ, b.comp_seq, duty_code, 'DUTY', #loginVO.langCode#) AS DUTY_NAME
	         , get_emp_duty_position_name(b.GROUP_SEQ, b.comp_seq, position_code, 'POSITION', #loginVO.langCode#) AS POSITION_NAME
	         , a.GROUP_SEQ
	         , a.COMP_SEQ
	         , a.DEPT_SEQ
	         , a.EMP_SEQ
	         , a.order_num
	    FROM   neos.a_appline_user a
	    INNER  JOIN neos.v_user_info b
	    ON     a.group_seq = b.group_seq
	    AND    a.comp_seq = b.comp_seq
	    AND    a.dept_seq = b.dept_seq
	    AND    a.emp_seq = b.emp_seq
	    WHERE  appline_seq		= #applineSeq# 
	    ORDER BY LPAD(a.order_num, 10, 0)  
    </select>
    
    <!-- 결재라인 기본정보 저장 -->
    <insert id="AppgroupManageDAO.InsertAppLineInfo" parameterClass="HashMap" >
        /* AppgroupManageDAO.InsertAppLineInfo - mariaDB */
        INSERT INTO neos.a_appline_info 
        (        appline_seq
               , group_seq
               , comp_seq
               , appline_name_kr
               , appline_name_en 
               , appline_name_jp
               , appline_name_cn
               , USE_YN 
               , ORDER_NUM	
               , remark
               , create_seq
               , create_date
        )
        VALUES 
        (        #applineSeq#
               , #loginVO.groupSeq#		       
               , #compSeq#
               , #applineNameKr#
               , #applineNameEn# 
               , #applineNameJp#
               , #applineNameCn#
               , #useYn# 
               , #orderNum#	
               , #remark#
               , #loginVO.uniqId#
               , now()
        ) 	     
    </insert>
    <!-- 결재라인 업데이트 -->
    <update id="AppgroupManageDAO.UpdateAppLineInfo" parameterClass="HashMap">
        /* AppgroupManageDAO.UpdateAppLineInfo - mariaDB */
        UPDATE neos.a_appline_info
        SET    appline_name_kr = #applineNameKr#
             , appline_name_en = #applineNameEn# 
             , appline_name_jp = #applineNameJp#
             , appline_name_cn = #applineNameCn#
             , USE_YN = #useYn# 
             , ORDER_NUM = IFNULL(#orderNum# ,NULL)	
             , remark = IFNULL(#remark# ,NULL)		       
             , MODIFY_seq = #loginVO.uniqId#
             , MODIFY_date = now()
<!--              , comp_seq = #compSeq#  -->
        WHERE appline_seq = #applineSeq#
    </update>
    
    <!-- 결재라인 결재자 저장 -->
	<insert id="AppgroupManageDAO.InsertAppLineUser" parameterClass="java.util.HashMap">
	    /* AppgroupManageDAO.InsertAppLineUser - mariaDB */
	    INSERT INTO neos.a_appline_user  
	    (
	       appline_seq, line_type, group_seq, comp_seq, dept_seq, emp_seq, super_key, order_num, CREATE_SEQ, CREATE_DATE
	    ) 
	    VALUES
	    <dynamic>
	   	   <iterate property="lineList" conjunction="," >
	    (   #applineSeq#
	      , #lineList[].lineType#
	      , #lineList[].groupSeq#
	      , #lineList[].compSeq#
	      , #lineList[].deptSeq#
	      , #lineList[].empSeq#
	      , #lineList[].superKey#
	      , #lineList[].orderNum#
	      , #loginVO.uniqId#
	      , SYSDATE()
	    )
	       </iterate>
	   </dynamic>
	</insert>
	
	<!-- 결재라인 결재자 삭제 -->
	<delete id="AppgroupManageDAO.DeleteAppLineUser" parameterClass="java.util.HashMap">		
		/* AppgroupManageDAO.DeleteAppLineUser - mariaDB */
	    DELETE FROM neos.a_appline_user
	    WHERE appline_seq = #applineSeq#
	</delete>
	
	<!-- 결재라인  삭제 -->
	<update id="AppgroupManageDAO.DeleteAppLineInfo" parameterClass="java.util.HashMap">
	    /* AppgroupManageDAO.DeleteAppLineUser - mariaDB */
	    UPDATE neos.a_appline_info
	    SET    delete_yn = 'Y'
	         , MODIFY_seq = #loginVO.uniqId#
	         , MODIFY_date = now()
	    WHERE appline_seq = #applineSeq#
	</update>
	
	
	<!-- 결재라인그룹 -->
	<select id="AppgroupManageDAO.GetAppGroup" parameterClass="HashMap" resultClass="egovMap">
	    /* AppgroupManageDAO.GetAppGroup - mariaDB */
	    SELECT appgroup_seq
	         , neos.FN_GetLanguageName(#loginVO.langCode#, appgroup_name_kr, appgroup_name_en, appgroup_name_jp, appgroup_name_cn) AS appgroup_name
	         , appgroup_name_kr
	         , appgroup_name_en
	         , appgroup_name_jp
	         , appgroup_name_cn
	         , a.group_seq
	         , a.comp_seq
	         , neos.FN_GetMultiLang(#loginVO.langCode#, m.COMP_NAME_MULTI) comp_name
	         , a.use_yn
	         , neos.GET_CODE_DETAIL_Info('0','COM521',a.use_yn,  #loginVO.langCode#) AS use_yn_name
	         , a.order_num
	         , a.remark
	         , (select count(*) from neos.a_appgroup_line agl
	            inner join neos.a_appline_info ali
	            on agl.appline_seq = ali.appline_seq
	            and ali.delete_yn = 'N'
	            and ali.use_yn ='Y'
	            where a.appgroup_seq = agl.appgroup_seq) AS lineCnt
	    FROM `neos.a_appgroup_info` a	
	    INNER JOIN neos.v_t_co_comp_multi m
	    ON a.group_seq = m.group_seq
	    AND a.comp_seq = m.comp_seq
	    WHERE a.delete_yn = 'N'
	    <isNotEmpty property="compSeq">
	    AND a.comp_seq = #compSeq#
	    </isNotEmpty>
	    <isNotEmpty property="useYn">
	    AND a.use_yn = #useYn#
	    </isNotEmpty>
	    <isNotEmpty property="txtSearch">
	    AND neos.FN_GetLanguageName(#loginVO.langCode#, appgroup_name_kr, appgroup_name_en, appgroup_name_jp, appgroup_name_cn) like CONCAT('%', #txtSearch#, '%')
	    </isNotEmpty>
	    <isNotEmpty property="appgroupSeq">
	    AND appgroup_seq = #appgroupSeq#
	    </isNotEmpty>		    	 
	    order by LPAD(IFNULL(a.order_num, '999999'), 10, 0)  , LPAD(appgroup_seq, 10, 0) 
	</select>
	
	
    <!-- 결재그룹 기본정보 저장 -->
    <insert id="AppgroupManageDAO.InsertAppGroupInfo" parameterClass="HashMap" >
        /* AppgroupManageDAO.InsertAppGroupInfo - mariaDB */
        INSERT INTO neos.a_appgroup_info 
        (        appgroup_seq
               , group_seq
               , comp_seq
               , appgroup_name_kr
               , appgroup_name_en 
               , appgroup_name_jp
               , appgroup_name_cn
               , USE_YN 
               , ORDER_NUM	
               , remark
               , create_seq
               , create_date
        )
        VALUES 
        (        #appgroupSeq#
               , #loginVO.groupSeq#		       
               , #compSeq#
               , #appgroupNameKr#
               , #appgroupNameEn# 
               , #appgroupNameJp#
               , #appgroupNameCn#
               , #useYn# 
               , #orderNum#	
               , #remark#
               , #loginVO.uniqId#
               , now()
        ) 	     
    </insert>
    
    <!-- 결재그룹 업데이트 -->
    <update id="AppgroupManageDAO.UpdateAppGroupInfo" parameterClass="HashMap">
        /* AppgroupManageDAO.UpdateAppGroupInfo - mariaDB */
        UPDATE neos.a_appgroup_info
        SET    appgroup_name_kr = #appgroupNameKr#
             , appgroup_name_en = #appgroupNameEn# 
             , appgroup_name_jp = #appgroupNameJp#
             , appgroup_name_cn = #appgroupNameCn#
             , USE_YN = #useYn# 
             , ORDER_NUM = IFNULL(#orderNum# ,NULL)	
             , remark = IFNULL(#remark# ,NULL)		       
             , MODIFY_seq = #loginVO.uniqId#
             , MODIFY_date = now()
        WHERE appgroup_seq = #appgroupSeq#
    </update>
    
	<!-- 결재그룹  삭제 -->
	<update id="AppgroupManageDAO.DelAppGroup" parameterClass="java.util.HashMap">
	    /* AppgroupManageDAO.DelAppGroup - mariaDB */
	    UPDATE neos.a_appgroup_info
	    SET    delete_yn = 'Y'
	         , MODIFY_seq = #loginVO.uniqId#
	         , MODIFY_date = now()
	    WHERE appgroup_seq in (
	    <dynamic>
	   	   <iterate property="lineList" conjunction="," > #lineList[].appgroupSeq# </iterate>
	   </dynamic>
	     )
	</update>
	
	<!-- 결재그룹 라인 리스트 -->
	<select id="AppgroupManageDAO.GetAppGroupLine" parameterClass="HashMap" resultClass="egovMap">
	    /* AppgroupManageDAO.GetAppGroupLine - mariaDB */
	    SELECT a.appgroup_seq
	         , a.appline_seq
	         , neos.FN_GetLanguageName(#loginVO.langCode#, appline_name_kr, appline_name_en, appline_name_jp, appline_name_cn) AS appline_name
	         , a.order_num
	         , (select count(*) from neos.a_appgroup_public p where p.appgroup_seq = a.appgroup_seq and p.appline_seq = a.appline_seq) AS publicCnt
	    FROM   neos.a_appgroup_line a
	    inner join neos.a_appline_info b
	    on    a.appline_seq = b.appline_seq
	    and   b.delete_yn = 'N'
	    and   b.use_yn ='Y'
	    where a.appgroup_seq = #appgroupSeq#
	    <isNotEmpty property="txtSearch">
	    AND   neos.FN_GetLanguageName(#loginVO.langCode#, appline_name_kr, appline_name_en, appline_name_jp, appline_name_cn) like CONCAT('%', #txtSearch#, '%')
	    </isNotEmpty>
	    ORDER BY LPAD(a.order_num, 10, 0) 
	</select>
	
	<!-- 결재그룹라인 삭제 -->
	<delete id="AppgroupManageDAO.DelAppGroupLine" parameterClass="java.util.HashMap">
	    /* AppgroupManageDAO.DelAppGroupLine - mariaDB */
	    DELETE FROM neos.a_appgroup_line
	    WHERE  appgroup_seq = #appgroupSeq#
	    <dynamic>
	    <isNotEmpty property="arrApplineSeq" >
	    AND    appline_seq in (
	       <iterate property="arrApplineSeq" conjunction="," > #arrApplineSeq[].applineSeq# </iterate>  
	    )
	    </isNotEmpty>
	    </dynamic> 
	</delete>
	
	<!-- 결재그룹라인 저장 -->
    <insert id="AppgroupManageDAO.InsertAppGroupLine" parameterClass="HashMap" >
        /* AppgroupManageDAO.InsertAppGroupLine - mariaDB */
	    INSERT INTO neos.a_appgroup_line  
	    (
                 appgroup_seq
               , appline_seq
               , order_num
               , create_seq
               , create_date
	    ) 
	    VALUES
	    <dynamic>
	   	   <iterate property="lineList" conjunction="," >
	    (   
	        #appgroupSeq#
	      , #lineList[].applineSeq#
	      , #lineList[].orderNum#
	      , #loginVO.uniqId#
	      , SYSDATE()
	    )
	       </iterate>
	   </dynamic>         	     
    </insert>

    <!-- 결재그룹 라인 삭제시 -->
	<delete id="AppgroupManageDAO.DelAppGroupLinePublic" parameterClass="java.util.HashMap">
	    /* AppgroupManageDAO.DelAppGroupLinePublic - mariaDB */
	    DELETE FROM neos.a_appgroup_public
	    WHERE  appgroup_seq = #appgroupSeq#
	    <dynamic>
	    AND    appline_seq in (
	   	   <iterate property="arrApplineSeq" conjunction="," > #arrApplineSeq[].applineSeq# </iterate>
	   		     )
	   </dynamic>	   

	</delete>
	
     <!-- 사용범위 삭제시  --> 
	<delete id="AppgroupManageDAO.DelAppGroupPublic" parameterClass="java.util.HashMap">
	    /* AppgroupManageDAO.DelAppGroupLinePublic - mariaDB */
	    DELETE FROM neos.a_appgroup_public
	    WHERE  appgroup_seq = #appgroupSeq#
	    AND    appline_seq   = #applineSeq#
	    <dynamic>
	    <!-- 결재그룹 라인 사용범위 삭제시  -->
	    AND    apppublic_seq in (
	   	   <iterate property="arrApppublicSeq" conjunction="," > #arrApppublicSeq[].apppublicSeq# </iterate>
	   		     )
	   </dynamic>	   

	</delete>	
	
	<!-- 사용범위 리스트 -->
    <select id="AppgroupManageDAO.GetAppGroupPublic" parameterClass="java.util.HashMap" resultClass="egovMap"  >
	    /* AppgroupManageDAO.GetAppGroupPublic - mariaDB */
	    SELECT * FROM (
		    <!-- 회사  -->
<!-- 		    SELECT neos.FN_GetMultiLang(#loginVO.langCode#, COMP_NAME_MULTI) AS ORG_NM -->
<!-- 		         , reader_seq AS selected -->
<!-- 		         , a.order_num -->
<!-- 		    FROM   neos.a_appgroup_public a -->
<!-- 		    INNER  JOIN neos.v_org_chart b -->
<!-- 		    ON     a.group_seq = b.group_seq -->
<!-- 		    AND    a.comp_seq = b.comp_seq -->
<!-- 		    AND    a.GBN_ORG = b.GBN_ORG -->
<!-- 		    INNER  JOIN neos.v_t_co_comp_multi c -->
<!-- 		    ON     b.comp_seq = c.comp_seq -->
<!-- 		    WHERE  a.gbn_org = 'c' -->
<!-- 		    AND    C_TIKEYCODE		= #c_tikeycode# -->
<!-- 		    UNION ALL -->
		    <!-- 부서 -->
		    SELECT 
		           a.*
		         , neos.FN_GetMultiLang(#loginVO.langCode#, DEPT_NAME_MULTI) AS DEPT_NAME
		         , '' AS EMP_NAME
		         , b.order_num
		         , 1 AS sort
		    FROM   neos.a_appgroup_public a
		    INNER  JOIN neos.v_org_chart b
		    ON     a.group_seq = b.group_seq
		    AND    a.comp_seq = b.comp_seq
		    AND    a.dept_seq = b.dept_seq
		    AND    a.GBN_ORG = b.GBN_ORG
		    INNER  JOIN neos.v_t_co_dept_multi c
		    ON     b.dept_seq = c.dept_seq
		    WHERE  a.gbn_org = 'd'
		    AND    a.appgroup_seq = #appgroupSeq#
		    AND    a.appline_seq = #applineSeq#
		    UNION ALL
		    <!-- 사원 -->
		    SELECT 
		           a.*
		         , neos.FN_GetMultiLang(#loginVO.langCode#, DEPT_NAME_MULTI) AS DEPT_NAME
		         , Concat(neos.FN_GetMultiLang(#loginVO.langCode#, EMP_NAME_MULTI), '(', login_id, ')') AS EMP_NAME		         
		         , b.order_num
		         , 2 AS sort
		    FROM   neos.a_appgroup_public a
		    INNER  JOIN neos.v_user_info b
		    ON     a.group_seq = b.group_seq
		    AND    a.comp_seq = b.comp_seq
		    AND    a.dept_seq = b.dept_seq
		    AND    a.emp_seq = b.emp_seq
		    WHERE  a.gbn_org = 'u'
		    AND    a.appgroup_seq = #appgroupSeq#
		    AND    a.appline_seq = #applineSeq#
	    ) a
	    <isNotEmpty property="txtSearch">
	    WHERE   (DEPT_NAME like CONCAT('%', #txtSearch#, '%') or EMP_NAME like CONCAT('%', #txtSearch#, '%') )
	    </isNotEmpty>
	    ORDER BY sort , LPAD (a.order_num, 10, 0)	    
    </select>	
	
	<!-- 사용범위 저장 -->
	<insert id="AppgroupManageDAO.InsertAppGroupPublic" parameterClass="java.util.HashMap">
	    /* AppgroupManageDAO.InsertAppGroupPublic - mariaDB */
	    INSERT INTO neos.a_appgroup_public  
	    (
	       appgroup_seq, appline_seq, apppublic_seq, gbn_org, group_seq, comp_seq, dept_seq, emp_seq, CREATE_SEQ, CREATE_DATE
	    ) 
	    VALUES
	    <dynamic>
	   	   <iterate property="publicList" conjunction="," >
	    (   #appgroupSeq#
	      , #applineSeq# 
	      , #publicList[].apppublicSeq#
	      , #publicList[].gbnOrg#
	      , #publicList[].groupSeq#
	      , #publicList[].compSeq#
	      , #publicList[].deptSeq#
	      , #publicList[].empSeq#
	      , #loginVO.uniqId#
	      , SYSDATE()
	    )
	       </iterate>
	   </dynamic>
	</insert>
</sqlMap>